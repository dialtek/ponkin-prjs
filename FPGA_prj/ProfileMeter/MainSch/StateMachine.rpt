 
cpldfit:  version P.49d                             Xilinx Inc.
                                  Fitter Report
Design Name: StateMachine                        Date: 10-20-2015, 12:20PM
Device Used: XC9572XL-5-VQ44
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
64 /72  ( 89%) 157 /360  ( 44%) 91 /216 ( 42%)   44 /72  ( 61%) 7  /34  ( 21%)

** Function Block Resources **

Function    Mcells      FB Inps     Pterms      IO          
Block       Used/Tot    Used/Tot    Used/Tot    Used/Tot    
FB1          18/18*      20/54       34/90       3/ 9
FB2          10/18       27/54       47/90       1/ 9
FB3          18/18*      23/54       36/90       1/ 9
FB4          18/18*      21/54       40/90       2/ 7
             -----       -----       -----      -----    
             64/72       91/216     157/360      7/34 

* - Resource is exhausted

** Global Control Resources **

Signal 'gclk' mapped onto global clock net GCK1.
Signal 'spi_clk' mapped onto global clock net GCK2.
Global output enable net(s) unused.
Global set/reset net(s) unused.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :    2           2    |  I/O              :     4      28
Output        :    3           3    |  GCK/IO           :     3       3
Bidirectional :    0           0    |  GTS/IO           :     0       2
GCK           :    2           2    |  GSR/IO           :     0       1
GTS           :    0           0    |
GSR           :    0           0    |
                 ----        ----
        Total      7           7

** Power Data **

There are 64 macrocells in high performance mode (MCHP).
There are 0 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'StateMachine.ise'.
INFO:Cpld - Inferring BUFG constraint for signal 'gclk' based upon the LOC
   constraint 'P43'. It is recommended that you declare this BUFG explicitedly
   in your design. Note that for certain device families the output of a BUFG
   constraint can not drive a gated clock, and the BUFG constraint will be
   ignored.
INFO:Cpld - Inferring BUFG constraint for signal 'spi_clk' based upon the LOC
   constraint 'P44'. It is recommended that you declare this BUFG explicitedly
   in your design. Note that for certain device families the output of a BUFG
   constraint can not drive a gated clock, and the BUFG constraint will be
   ignored.
WARNING:Cpld - The signal(s) 'state<1>' are in combinational feedback loops.
   These signals may cause hazards/glitches. Apply the NOREDUCE parameter to the
   hazard reduction circuitry.
   Timing analysis of paths involving this node may be inaccurate or incomplete.
WARNING:Cpld - The signal(s) 'state<2>' are in combinational feedback loops.
   These signals may cause hazards/glitches. Apply the NOREDUCE parameter to the
   hazard reduction circuitry.
   Timing analysis of paths involving this node may be inaccurate or incomplete.
*************************  Summary of Mapped Logic  ************************

** 3 Outputs **

Signal                          Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                            Pts   Inps          No.  Type    Use     Mode Rate State
LED                             0     0     FB1_14  1    GCK/I/O O       STD  FAST 
Q                               19    25    FB2_2   29   I/O     O       STD  FAST RESET
shout                           2     4     FB4_14  23   I/O     O       STD  FAST RESET

** 61 Buried Nodes **

Signal                          Total Total Loc     Pwr  Reg Init
Name                            Pts   Inps          Mode State
spi_in_word<9>                  2     4     FB1_1   STD  RESET
spi_in_word<8>                  2     4     FB1_2   STD  RESET
spi_in_word<7>                  2     4     FB1_3   STD  RESET
spi_in_word<6>                  2     4     FB1_4   STD  RESET
spi_in_word<5>                  2     4     FB1_5   STD  RESET
spi_in_word<4>                  2     4     FB1_6   STD  RESET
spi_in_word<3>                  2     4     FB1_7   STD  RESET
spi_in_word<2>                  2     4     FB1_8   STD  RESET
spi_in_word<1>                  2     4     FB1_9   STD  RESET
out_word<19>/out_word<19>_SETF  2     5     FB1_10  STD  
out_word<18>/out_word<18>_SETF  2     5     FB1_11  STD  
out_word<17>/out_word<17>_SETF  2     5     FB1_12  STD  
out_word<16>/out_word<16>_SETF  2     5     FB1_13  STD  
out_word<15>/out_word<15>_SETF  2     5     FB1_15  STD  
out_word<14>/out_word<14>_SETF  2     5     FB1_16  STD  
out_word<13>/out_word<13>_SETF  2     5     FB1_17  STD  
out_word<11>/out_word<11>_SETF  2     5     FB1_18  STD  
out_word<10>/out_word<10>_RSTF  2     5     FB2_10  STD  
out_cnt<0>                      2     4     FB2_11  STD  RESET
out_cnt<4>                      3     8     FB2_12  STD  RESET
out_cnt<3>/out_cnt<3>_RSTF      3     5     FB2_13  STD  
out_cnt<3>                      3     7     FB2_14  STD  RESET
out_cnt<2>                      3     6     FB2_15  STD  RESET
out_cnt<1>                      3     5     FB2_16  STD  RESET
state<2>                        4     8     FB2_17  STD  
state<1>                        5     9     FB2_18  STD  
out_word<5>/out_word<5>_SETF    2     5     FB3_1   STD  
out_word<12>/out_word<12>_SETF  2     5     FB3_2   STD  
out_word<9>                     2     3     FB3_3   STD  RESET
out_word<8>                     2     3     FB3_4   STD  RESET
out_word<7>                     2     3     FB3_5   STD  RESET
out_word<6>                     2     3     FB3_6   STD  RESET
out_word<5>                     2     3     FB3_7   STD  RESET
out_word<4>                     2     3     FB3_8   STD  RESET
out_word<19>                    2     3     FB3_9   STD  RESET
out_word<18>                    2     3     FB3_10  STD  RESET
out_word<17>                    2     3     FB3_11  STD  RESET
out_word<16>                    2     3     FB3_12  STD  RESET
out_word<15>                    2     3     FB3_13  STD  RESET
out_word<14>                    2     3     FB3_14  STD  RESET

Signal                          Total Total Loc     Pwr  Reg Init
Name                            Pts   Inps          Mode State
out_word<13>                    2     3     FB3_15  STD  RESET
out_word<12>                    2     3     FB3_16  STD  RESET
out_word<11>                    2     3     FB3_17  STD  RESET
out_word<10>                    2     3     FB3_18  STD  RESET
spi_in_word<15>                 2     4     FB4_1   STD  RESET
spi_in_word<14>                 2     4     FB4_2   STD  RESET
spi_in_word<13>                 2     4     FB4_3   STD  RESET
spi_in_word<12>                 2     4     FB4_4   STD  RESET
spi_in_word<11>                 2     4     FB4_5   STD  RESET
spi_in_word<10>                 2     4     FB4_6   STD  RESET
spi_in_word<0>                  2     4     FB4_7   STD  RESET
out_word<9>/out_word<9>_RSTF    2     5     FB4_8   STD  
out_word<8>/out_word<8>_SETF    2     5     FB4_9   STD  
out_word<7>/out_word<7>_SETF    2     5     FB4_10  STD  
out_word<6>/out_word<6>_SETF    2     5     FB4_11  STD  
out_word<4>/out_word<4>_SETF    2     5     FB4_12  STD  
cnt<0>                          2     4     FB4_13  STD  RESET
cnt<4>                          3     8     FB4_15  STD  RESET
cnt<3>                          3     7     FB4_16  STD  RESET
cnt<2>                          3     6     FB4_17  STD  RESET
cnt<1>                          3     5     FB4_18  STD  RESET

** 4 Inputs **

Signal                          Loc     Pin  Pin     Pin     
Name                                    No.  Type    Use     
gclk                            FB1_9   43   GCK/I/O GCK
spi_clk                         FB1_11  44   GCK/I/O GCK
D                               FB3_9   8    I/O     I
CE                              FB4_11  22   I/O     I

Legend:
Pin No. - ~ - User Assigned
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X            - Signal used as input to the macrocell logic.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               20/34
Number of signals used by logic mapping into function block:  20
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
spi_in_word<9>        2       0     0   3     FB1_1         (b)     (b)
spi_in_word<8>        2       0     0   3     FB1_2   39    I/O     (b)
spi_in_word<7>        2       0     0   3     FB1_3         (b)     (b)
spi_in_word<6>        2       0     0   3     FB1_4         (b)     (b)
spi_in_word<5>        2       0     0   3     FB1_5   40    I/O     (b)
spi_in_word<4>        2       0     0   3     FB1_6   41    I/O     (b)
spi_in_word<3>        2       0     0   3     FB1_7         (b)     (b)
spi_in_word<2>        2       0     0   3     FB1_8   42    I/O     (b)
spi_in_word<1>        2       0     0   3     FB1_9   43    GCK/I/O GCK
out_word<19>/out_word<19>_SETF
                      2       0     0   3     FB1_10        (b)     (b)
out_word<18>/out_word<18>_SETF
                      2       0     0   3     FB1_11  44    GCK/I/O GCK
out_word<17>/out_word<17>_SETF
                      2       0     0   3     FB1_12        (b)     (b)
out_word<16>/out_word<16>_SETF
                      2       0     0   3     FB1_13        (b)     (b)
LED                   0       0     0   5     FB1_14  1     GCK/I/O O
out_word<15>/out_word<15>_SETF
                      2       0     0   3     FB1_15  2     I/O     (b)
out_word<14>/out_word<14>_SETF
                      2       0     0   3     FB1_16        (b)     (b)
out_word<13>/out_word<13>_SETF
                      2       0     0   3     FB1_17  3     I/O     (b)
out_word<11>/out_word<11>_SETF
                      2       0     0   3     FB1_18        (b)     (b)

Signals Used by Logic in Function Block
  1: CE                 8: out_word<18>      15: spi_in_word<5> 
  2: out_word<11>       9: out_word<19>      16: spi_in_word<6> 
  3: out_word<13>      10: spi_in_word<0>    17: spi_in_word<7> 
  4: out_word<14>      11: spi_in_word<1>    18: spi_in_word<8> 
  5: out_word<15>      12: spi_in_word<2>    19: state<1> 
  6: out_word<16>      13: spi_in_word<3>    20: state<2> 
  7: out_word<17>      14: spi_in_word<4>   

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
spi_in_word<9>       X................XXX.................... 4
spi_in_word<8>       X...............X.XX.................... 4
spi_in_word<7>       X..............X..XX.................... 4
spi_in_word<6>       X.............X...XX.................... 4
spi_in_word<5>       X............X....XX.................... 4
spi_in_word<4>       X...........X.....XX.................... 4
spi_in_word<3>       X..........X......XX.................... 4
spi_in_word<2>       X.........X.......XX.................... 4
spi_in_word<1>       X........X........XX.................... 4
out_word<19>/out_word<19>_SETF 
                     X.......XX........XX.................... 5
out_word<18>/out_word<18>_SETF 
                     X......X..X.......XX.................... 5
out_word<17>/out_word<17>_SETF 
                     X.....X....X......XX.................... 5
out_word<16>/out_word<16>_SETF 
                     X....X......X.....XX.................... 5
LED                  ........................................ 0
out_word<15>/out_word<15>_SETF 
                     X...X........X....XX.................... 5
out_word<14>/out_word<14>_SETF 
                     X..X..........X...XX.................... 5
out_word<13>/out_word<13>_SETF 
                     X.X............X..XX.................... 5
out_word<11>/out_word<11>_SETF 
                     XX...............XXX.................... 5
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               27/27
Number of signals used by logic mapping into function block:  27
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   \/5   0     FB2_1         (b)     (b)
Q                    19      14<-   0   0     FB2_2   29    I/O     O
(unused)              0       0   /\5   0     FB2_3         (b)     (b)
(unused)              0       0   /\4   1     FB2_4         (b)     (b)
(unused)              0       0     0   5     FB2_5   30    I/O     
(unused)              0       0     0   5     FB2_6   31    I/O     
(unused)              0       0     0   5     FB2_7         (b)     
(unused)              0       0     0   5     FB2_8   32    I/O     
(unused)              0       0     0   5     FB2_9   33    GSR/I/O 
out_word<10>/out_word<10>_RSTF
                      2       0     0   3     FB2_10        (b)     (b)
out_cnt<0>            2       0     0   3     FB2_11  34    GTS/I/O (b)
out_cnt<4>            3       0     0   2     FB2_12        (b)     (b)
out_cnt<3>/out_cnt<3>_RSTF
                      3       0     0   2     FB2_13        (b)     (b)
out_cnt<3>            3       0     0   2     FB2_14  36    GTS/I/O (b)
out_cnt<2>            3       0     0   2     FB2_15  37    I/O     (b)
out_cnt<1>            3       0     0   2     FB2_16        (b)     (b)
state<2>              4       0     0   1     FB2_17  38    I/O     (b)
state<1>              5       0     0   0     FB2_18        (b)     (b)

Signals Used by Logic in Function Block
  1: CE                          10: out_word<11>      19: out_word<4> 
  2: cnt<4>                      11: out_word<12>      20: out_word<5> 
  3: out_cnt<0>                  12: out_word<13>      21: out_word<6> 
  4: out_cnt<1>                  13: out_word<14>      22: out_word<7> 
  5: out_cnt<2>                  14: out_word<15>      23: out_word<8> 
  6: out_cnt<3>                  15: out_word<16>      24: out_word<9> 
  7: out_cnt<3>/out_cnt<3>_RSTF  16: out_word<17>      25: spi_in_word<9> 
  8: out_cnt<4>                  17: out_word<18>      26: state<1> 
  9: out_word<10>                18: out_word<19>      27: state<2> 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
Q                    X.XXXXXXXXXXXXXXXXXXXXXX.XX............. 25
out_word<10>/out_word<10>_RSTF 
                     X.......X...............XXX............. 5
out_cnt<0>           X.....X..................XX............. 4
out_cnt<4>           X.XXXXX..................XX............. 8
out_cnt<3>/out_cnt<3>_RSTF 
                     ..XXXX.X................................ 5
out_cnt<3>           X.XXX.X..................XX............. 7
out_cnt<2>           X.XX..X..................XX............. 6
out_cnt<1>           X.X...X..................XX............. 5
state<2>             X.XXXX.X.................XX............. 8
state<1>             XXXXXX.X.................XX............. 9
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB3  ***********************************
Number of function block inputs used/remaining:               23/31
Number of signals used by logic mapping into function block:  23
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
out_word<5>/out_word<5>_SETF
                      2       0     0   3     FB3_1         (b)     (b)
out_word<12>/out_word<12>_SETF
                      2       0     0   3     FB3_2   5     I/O     (b)
out_word<9>           2       0     0   3     FB3_3         (b)     (b)
out_word<8>           2       0     0   3     FB3_4         (b)     (b)
out_word<7>           2       0     0   3     FB3_5   6     I/O     (b)
out_word<6>           2       0     0   3     FB3_6         (b)     (b)
out_word<5>           2       0     0   3     FB3_7         (b)     (b)
out_word<4>           2       0     0   3     FB3_8   7     I/O     (b)
out_word<19>          2       0     0   3     FB3_9   8     I/O     I
out_word<18>          2       0     0   3     FB3_10        (b)     (b)
out_word<17>          2       0     0   3     FB3_11  12    I/O     (b)
out_word<16>          2       0     0   3     FB3_12        (b)     (b)
out_word<15>          2       0     0   3     FB3_13        (b)     (b)
out_word<14>          2       0     0   3     FB3_14  13    I/O     (b)
out_word<13>          2       0     0   3     FB3_15  14    I/O     (b)
out_word<12>          2       0     0   3     FB3_16  18    I/O     (b)
out_word<11>          2       0     0   3     FB3_17  16    I/O     (b)
out_word<10>          2       0     0   3     FB3_18        (b)     (b)

Signals Used by Logic in Function Block
  1: CE                               9: out_word<16>/out_word<16>_SETF  17: out_word<7>/out_word<7>_SETF 
  2: out_word<10>/out_word<10>_RSTF  10: out_word<17>/out_word<17>_SETF  18: out_word<8>/out_word<8>_SETF 
  3: out_word<11>/out_word<11>_SETF  11: out_word<18>/out_word<18>_SETF  19: out_word<9>/out_word<9>_RSTF 
  4: out_word<12>                    12: out_word<19>/out_word<19>_SETF  20: spi_in_word<14> 
  5: out_word<12>/out_word<12>_SETF  13: out_word<4>/out_word<4>_SETF    21: spi_in_word<7> 
  6: out_word<13>/out_word<13>_SETF  14: out_word<5>                     22: state<1> 
  7: out_word<14>/out_word<14>_SETF  15: out_word<5>/out_word<5>_SETF    23: state<2> 
  8: out_word<15>/out_word<15>_SETF  16: out_word<6>/out_word<6>_SETF   

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
out_word<5>/out_word<5>_SETF 
                     X............X.....X.XX................. 5
out_word<12>/out_word<12>_SETF 
                     X..X................XXX................. 5
out_word<9>          ..................X..XX................. 3
out_word<8>          .................X...XX................. 3
out_word<7>          ................X....XX................. 3
out_word<6>          ...............X.....XX................. 3
out_word<5>          ..............X......XX................. 3
out_word<4>          ............X........XX................. 3
out_word<19>         ...........X.........XX................. 3
out_word<18>         ..........X..........XX................. 3
out_word<17>         .........X...........XX................. 3
out_word<16>         ........X............XX................. 3
out_word<15>         .......X.............XX................. 3
out_word<14>         ......X..............XX................. 3
out_word<13>         .....X...............XX................. 3
out_word<12>         ....X................XX................. 3
out_word<11>         ..X..................XX................. 3
out_word<10>         .X...................XX................. 3
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB4  ***********************************
Number of function block inputs used/remaining:               21/33
Number of signals used by logic mapping into function block:  21
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
spi_in_word<15>       2       0     0   3     FB4_1         (b)     (b)
spi_in_word<14>       2       0     0   3     FB4_2   19    I/O     (b)
spi_in_word<13>       2       0     0   3     FB4_3         (b)     (b)
spi_in_word<12>       2       0     0   3     FB4_4         (b)     (b)
spi_in_word<11>       2       0     0   3     FB4_5   20    I/O     (b)
spi_in_word<10>       2       0     0   3     FB4_6         (b)     (b)
spi_in_word<0>        2       0     0   3     FB4_7         (b)     (b)
out_word<9>/out_word<9>_RSTF
                      2       0     0   3     FB4_8   21    I/O     (b)
out_word<8>/out_word<8>_SETF
                      2       0     0   3     FB4_9         (b)     (b)
out_word<7>/out_word<7>_SETF
                      2       0     0   3     FB4_10        (b)     (b)
out_word<6>/out_word<6>_SETF
                      2       0     0   3     FB4_11  22    I/O     I
out_word<4>/out_word<4>_SETF
                      2       0     0   3     FB4_12        (b)     (b)
cnt<0>                2       0     0   3     FB4_13        (b)     (b)
shout                 2       0     0   3     FB4_14  23    I/O     O
cnt<4>                3       0     0   2     FB4_15  27    I/O     (b)
cnt<3>                3       0     0   2     FB4_16        (b)     (b)
cnt<2>                3       0     0   2     FB4_17  28    I/O     (b)
cnt<1>                3       0     0   2     FB4_18        (b)     (b)

Signals Used by Logic in Function Block
  1: CE                 8: out_word<4>       15: spi_in_word<12> 
  2: D                  9: out_word<6>       16: spi_in_word<13> 
  3: cnt<0>            10: out_word<7>       17: spi_in_word<14> 
  4: cnt<1>            11: out_word<8>       18: spi_in_word<15> 
  5: cnt<2>            12: out_word<9>       19: spi_in_word<9> 
  6: cnt<3>            13: spi_in_word<10>   20: state<1> 
  7: cnt<4>            14: spi_in_word<11>   21: state<2> 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
spi_in_word<15>      X...............X..XX................... 4
spi_in_word<14>      X..............X...XX................... 4
spi_in_word<13>      X.............X....XX................... 4
spi_in_word<12>      X............X.....XX................... 4
spi_in_word<11>      X...........X......XX................... 4
spi_in_word<10>      X.................XXX................... 4
spi_in_word<0>       XX.................XX................... 4
out_word<9>/out_word<9>_RSTF 
                     X..........XX......XX................... 5
out_word<8>/out_word<8>_SETF 
                     X.........X..X.....XX................... 5
out_word<7>/out_word<7>_SETF 
                     X........X....X....XX................... 5
out_word<6>/out_word<6>_SETF 
                     X.......X......X...XX................... 5
out_word<4>/out_word<4>_SETF 
                     X......X.........X.XX................... 5
cnt<0>               X.....X............XX................... 4
shout                X................X.XX................... 4
cnt<4>               X.XXXXX............XX................... 8
cnt<3>               X.XXX.X............XX................... 7
cnt<2>               X.XX..X............XX................... 6
cnt<1>               X.X...X............XX................... 5
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********








LED <= '1';

FDCPE_Q: FDCPE port map (Q,Q_D,gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',Q_CE);
Q_D <= ((NOT out_cnt(3) AND out_cnt(1) AND NOT out_cnt(2) AND 
	NOT out_cnt(0) AND out_word(18))
	OR (NOT out_cnt(3) AND NOT out_cnt(1) AND NOT out_cnt(2) AND 
	NOT out_cnt(0) AND out_word(16))
	OR (NOT out_cnt(3) AND NOT out_cnt(1) AND NOT out_cnt(0) AND 
	NOT out_cnt(4) AND out_word(4))
	OR (NOT out_cnt(1) AND NOT out_cnt(2) AND NOT out_cnt(0) AND 
	NOT out_cnt(4) AND out_word(8))
	OR (NOT out_cnt(3) AND NOT out_cnt(1) AND out_cnt(2) AND 
	out_cnt(0) AND NOT out_cnt(4) AND out_word(5))
	OR (EXP8_.EXP)
	OR (out_cnt(3) AND out_cnt(1) AND out_cnt(2) AND 
	out_cnt(0) AND NOT out_cnt(4) AND out_word(15))
	OR (out_cnt(3) AND out_cnt(1) AND NOT out_cnt(2) AND 
	out_cnt(0) AND NOT out_cnt(4) AND out_word(11))
	OR (out_cnt(3) AND NOT out_cnt(1) AND out_cnt(2) AND 
	out_cnt(0) AND NOT out_cnt(4) AND out_word(13))
	OR (out_cnt(3) AND NOT out_cnt(1) AND NOT out_cnt(2) AND 
	out_cnt(0) AND NOT out_cnt(4) AND out_word(9))
	OR (NOT out_cnt(3) AND out_cnt(1) AND out_cnt(2) AND 
	out_cnt(0) AND NOT out_cnt(4) AND out_word(7))
	OR (NOT out_cnt(3) AND NOT out_cnt(2) AND NOT out_cnt(0) AND 
	NOT out_cnt(4))
	OR (NOT out_cnt(3) AND out_cnt(1) AND NOT out_cnt(0) AND 
	NOT out_cnt(4) AND out_word(6))
	OR (out_cnt(1) AND NOT out_cnt(2) AND NOT out_cnt(0) AND 
	NOT out_cnt(4) AND out_word(10)));
Q_CE <= (CE AND state(2) AND state(1));

FTCPE_cnt0: FTCPE port map (cnt(0),'1',spi_clk,cnt(4),'0',cnt_CE(0));
cnt_CE(0) <= (CE AND NOT state(2) AND NOT state(1));

FTCPE_cnt1: FTCPE port map (cnt(1),cnt(0),spi_clk,cnt(4),'0',cnt_CE(1));
cnt_CE(1) <= (CE AND NOT state(2) AND NOT state(1));

FTCPE_cnt2: FTCPE port map (cnt(2),cnt_T(2),spi_clk,cnt(4),'0',cnt_CE(2));
cnt_T(2) <= (cnt(0) AND cnt(1));
cnt_CE(2) <= (CE AND NOT state(2) AND NOT state(1));

FTCPE_cnt3: FTCPE port map (cnt(3),cnt_T(3),spi_clk,cnt(4),'0',cnt_CE(3));
cnt_T(3) <= (cnt(0) AND cnt(1) AND cnt(2));
cnt_CE(3) <= (CE AND NOT state(2) AND NOT state(1));

FTCPE_cnt4: FTCPE port map (cnt(4),cnt_T(4),spi_clk,cnt(4),'0',cnt_CE(4));
cnt_T(4) <= (cnt(0) AND cnt(1) AND cnt(2) AND cnt(3));
cnt_CE(4) <= (CE AND NOT state(2) AND NOT state(1));

FTCPE_out_cnt0: FTCPE port map (out_cnt(0),'1',gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',out_cnt_CE(0));
out_cnt_CE(0) <= (CE AND state(2) AND state(1));

FTCPE_out_cnt1: FTCPE port map (out_cnt(1),out_cnt(0),gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',out_cnt_CE(1));
out_cnt_CE(1) <= (CE AND state(2) AND state(1));

FTCPE_out_cnt2: FTCPE port map (out_cnt(2),out_cnt_T(2),gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',out_cnt_CE(2));
out_cnt_T(2) <= (out_cnt(1) AND out_cnt(0));
out_cnt_CE(2) <= (CE AND state(2) AND state(1));

FTCPE_out_cnt3: FTCPE port map (out_cnt(3),out_cnt_T(3),gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',out_cnt_CE(3));
out_cnt_T(3) <= (out_cnt(1) AND out_cnt(2) AND out_cnt(0));
out_cnt_CE(3) <= (CE AND state(2) AND state(1));


out_cnt(3)/out_cnt(3)_RSTF <= ((out_cnt(3) AND out_cnt(4))
	OR (out_cnt(1) AND out_cnt(2) AND out_cnt(4))
	OR (out_cnt(2) AND out_cnt(0) AND out_cnt(4)));

FTCPE_out_cnt4: FTCPE port map (out_cnt(4),out_cnt_T(4),gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',out_cnt_CE(4));
out_cnt_T(4) <= (out_cnt(3) AND out_cnt(1) AND out_cnt(2) AND 
	out_cnt(0));
out_cnt_CE(4) <= (CE AND state(2) AND state(1));

FDCPE_out_word4: FDCPE port map (out_word(4),'0','0',out_word_CLR(4),out_word(4)/out_word(4)_SETF);
out_word_CLR(4) <= (NOT state(2) AND state(1) AND 
	NOT out_word(4)/out_word(4)_SETF);


out_word(4)/out_word(4)_SETF <= ((CE AND spi_in_word(15) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(4)));

FDCPE_out_word5: FDCPE port map (out_word(5),'0','0',out_word_CLR(5),out_word(5)/out_word(5)_SETF);
out_word_CLR(5) <= (NOT state(2) AND state(1) AND 
	NOT out_word(5)/out_word(5)_SETF);


out_word(5)/out_word(5)_SETF <= ((CE AND spi_in_word(14) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(5)));


out_word(6)/out_word(6)_SETF <= ((CE AND spi_in_word(13) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(6)));

FDCPE_out_word6: FDCPE port map (out_word(6),'0','0',out_word_CLR(6),out_word(6)/out_word(6)_SETF);
out_word_CLR(6) <= (NOT state(2) AND state(1) AND 
	NOT out_word(6)/out_word(6)_SETF);


out_word(7)/out_word(7)_SETF <= ((CE AND spi_in_word(12) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(7)));

FDCPE_out_word7: FDCPE port map (out_word(7),'0','0',out_word_CLR(7),out_word(7)/out_word(7)_SETF);
out_word_CLR(7) <= (NOT state(2) AND state(1) AND 
	NOT out_word(7)/out_word(7)_SETF);


out_word(8)/out_word(8)_SETF <= ((CE AND spi_in_word(11) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(8)));

FDCPE_out_word8: FDCPE port map (out_word(8),'0','0',out_word_CLR(8),out_word(8)/out_word(8)_SETF);
out_word_CLR(8) <= (NOT state(2) AND state(1) AND 
	NOT out_word(8)/out_word(8)_SETF);


out_word(9)/out_word(9)_RSTF <= ((CE AND NOT spi_in_word(10) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND NOT out_word(9)));

FDCPE_out_word9: FDCPE port map (out_word(9),'0','0',out_word(9)/out_word(9)_RSTF,out_word_PRE(9));
out_word_PRE(9) <= (NOT state(2) AND state(1) AND 
	NOT out_word(9)/out_word(9)_RSTF);


out_word(10)/out_word(10)_RSTF <= ((CE AND NOT spi_in_word(9) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND NOT out_word(10)));

FDCPE_out_word10: FDCPE port map (out_word(10),'0','0',out_word(10)/out_word(10)_RSTF,out_word_PRE(10));
out_word_PRE(10) <= (NOT state(2) AND state(1) AND 
	NOT out_word(10)/out_word(10)_RSTF);

FDCPE_out_word11: FDCPE port map (out_word(11),'0','0',out_word_CLR(11),out_word(11)/out_word(11)_SETF);
out_word_CLR(11) <= (NOT state(2) AND state(1) AND 
	NOT out_word(11)/out_word(11)_SETF);


out_word(11)/out_word(11)_SETF <= ((CE AND spi_in_word(8) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(11)));

FDCPE_out_word12: FDCPE port map (out_word(12),'0','0',out_word_CLR(12),out_word(12)/out_word(12)_SETF);
out_word_CLR(12) <= (NOT state(2) AND state(1) AND 
	NOT out_word(12)/out_word(12)_SETF);


out_word(12)/out_word(12)_SETF <= ((CE AND spi_in_word(7) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(12)));

FDCPE_out_word13: FDCPE port map (out_word(13),'0','0',out_word_CLR(13),out_word(13)/out_word(13)_SETF);
out_word_CLR(13) <= (NOT state(2) AND state(1) AND 
	NOT out_word(13)/out_word(13)_SETF);


out_word(13)/out_word(13)_SETF <= ((CE AND spi_in_word(6) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(13)));


out_word(14)/out_word(14)_SETF <= ((CE AND spi_in_word(5) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(14)));

FDCPE_out_word14: FDCPE port map (out_word(14),'0','0',out_word_CLR(14),out_word(14)/out_word(14)_SETF);
out_word_CLR(14) <= (NOT state(2) AND state(1) AND 
	NOT out_word(14)/out_word(14)_SETF);

FDCPE_out_word15: FDCPE port map (out_word(15),'0','0',out_word_CLR(15),out_word(15)/out_word(15)_SETF);
out_word_CLR(15) <= (NOT state(2) AND state(1) AND 
	NOT out_word(15)/out_word(15)_SETF);


out_word(15)/out_word(15)_SETF <= ((CE AND spi_in_word(4) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(15)));

FDCPE_out_word16: FDCPE port map (out_word(16),'0','0',out_word_CLR(16),out_word(16)/out_word(16)_SETF);
out_word_CLR(16) <= (NOT state(2) AND state(1) AND 
	NOT out_word(16)/out_word(16)_SETF);


out_word(16)/out_word(16)_SETF <= ((CE AND spi_in_word(3) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(16)));


out_word(17)/out_word(17)_SETF <= ((CE AND spi_in_word(2) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(17)));

FDCPE_out_word17: FDCPE port map (out_word(17),'0','0',out_word_CLR(17),out_word(17)/out_word(17)_SETF);
out_word_CLR(17) <= (NOT state(2) AND state(1) AND 
	NOT out_word(17)/out_word(17)_SETF);


out_word(18)/out_word(18)_SETF <= ((CE AND spi_in_word(1) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(18)));

FDCPE_out_word18: FDCPE port map (out_word(18),'0','0',out_word_CLR(18),out_word(18)/out_word(18)_SETF);
out_word_CLR(18) <= (NOT state(2) AND state(1) AND 
	NOT out_word(18)/out_word(18)_SETF);

FDCPE_out_word19: FDCPE port map (out_word(19),'0','0',out_word_CLR(19),out_word(19)/out_word(19)_SETF);
out_word_CLR(19) <= (NOT state(2) AND state(1) AND 
	NOT out_word(19)/out_word(19)_SETF);


out_word(19)/out_word(19)_SETF <= ((CE AND spi_in_word(0) AND NOT state(2) AND state(1))
	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(19)));

FDCPE_shout: FDCPE port map (shout,spi_in_word(15),spi_clk,'0','0',shout_CE);
shout_CE <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word0: FDCPE port map (spi_in_word(0),D,spi_clk,'0','0',spi_in_word_CE(0));
spi_in_word_CE(0) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word1: FDCPE port map (spi_in_word(1),spi_in_word(0),spi_clk,'0','0',spi_in_word_CE(1));
spi_in_word_CE(1) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word2: FDCPE port map (spi_in_word(2),spi_in_word(1),spi_clk,'0','0',spi_in_word_CE(2));
spi_in_word_CE(2) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word3: FDCPE port map (spi_in_word(3),spi_in_word(2),spi_clk,'0','0',spi_in_word_CE(3));
spi_in_word_CE(3) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word4: FDCPE port map (spi_in_word(4),spi_in_word(3),spi_clk,'0','0',spi_in_word_CE(4));
spi_in_word_CE(4) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word5: FDCPE port map (spi_in_word(5),spi_in_word(4),spi_clk,'0','0',spi_in_word_CE(5));
spi_in_word_CE(5) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word6: FDCPE port map (spi_in_word(6),spi_in_word(5),spi_clk,'0','0',spi_in_word_CE(6));
spi_in_word_CE(6) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word7: FDCPE port map (spi_in_word(7),spi_in_word(6),spi_clk,'0','0',spi_in_word_CE(7));
spi_in_word_CE(7) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word8: FDCPE port map (spi_in_word(8),spi_in_word(7),spi_clk,'0','0',spi_in_word_CE(8));
spi_in_word_CE(8) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word9: FDCPE port map (spi_in_word(9),spi_in_word(8),spi_clk,'0','0',spi_in_word_CE(9));
spi_in_word_CE(9) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word10: FDCPE port map (spi_in_word(10),spi_in_word(9),spi_clk,'0','0',spi_in_word_CE(10));
spi_in_word_CE(10) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word11: FDCPE port map (spi_in_word(11),spi_in_word(10),spi_clk,'0','0',spi_in_word_CE(11));
spi_in_word_CE(11) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word12: FDCPE port map (spi_in_word(12),spi_in_word(11),spi_clk,'0','0',spi_in_word_CE(12));
spi_in_word_CE(12) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word13: FDCPE port map (spi_in_word(13),spi_in_word(12),spi_clk,'0','0',spi_in_word_CE(13));
spi_in_word_CE(13) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word14: FDCPE port map (spi_in_word(14),spi_in_word(13),spi_clk,'0','0',spi_in_word_CE(14));
spi_in_word_CE(14) <= (CE AND NOT state(2) AND NOT state(1));

FDCPE_spi_in_word15: FDCPE port map (spi_in_word(15),spi_in_word(14),spi_clk,'0','0',spi_in_word_CE(15));
spi_in_word_CE(15) <= (CE AND NOT state(2) AND NOT state(1));


state(1) <= ((cnt(4) AND CE AND NOT state(2))
	OR (NOT out_cnt(4) AND CE AND state(1))
	OR (CE AND NOT state(2) AND state(1))
	OR (NOT out_cnt(3) AND NOT out_cnt(2) AND CE AND state(1))
	OR (NOT out_cnt(3) AND NOT out_cnt(1) AND NOT out_cnt(0) AND CE AND 
	state(1)));


state(2) <= ((NOT out_cnt(4) AND CE AND state(1))
	OR (CE AND NOT state(2) AND state(1))
	OR (NOT out_cnt(3) AND NOT out_cnt(2) AND CE AND state(1))
	OR (NOT out_cnt(3) AND NOT out_cnt(1) AND NOT out_cnt(0) AND CE AND 
	state(1)));

Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC9572XL-5-VQ44


   --------------------------------  
  /44 43 42 41 40 39 38 37 36 35 34 \
 | 1                             33 | 
 | 2                             32 | 
 | 3                             31 | 
 | 4                             30 | 
 | 5         XC9572XL-5-VQ44     29 | 
 | 6                             28 | 
 | 7                             27 | 
 | 8                             26 | 
 | 9                             25 | 
 | 10                            24 | 
 | 11                            23 | 
 \ 12 13 14 15 16 17 18 19 20 21 22 /
   --------------------------------  


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 LED                              23 shout                         
  2 KPR                              24 TDO                           
  3 KPR                              25 GND                           
  4 GND                              26 VCC                           
  5 KPR                              27 KPR                           
  6 KPR                              28 KPR                           
  7 KPR                              29 Q                             
  8 D                                30 KPR                           
  9 TDI                              31 KPR                           
 10 TMS                              32 KPR                           
 11 TCK                              33 KPR                           
 12 KPR                              34 KPR                           
 13 KPR                              35 VCC                           
 14 KPR                              36 KPR                           
 15 VCC                              37 KPR                           
 16 KPR                              38 KPR                           
 17 GND                              39 KPR                           
 18 KPR                              40 KPR                           
 19 KPR                              41 KPR                           
 20 KPR                              42 KPR                           
 21 KPR                              43 gclk                          
 22 CE                               44 spi_clk                       


Legend :  NC  = Not Connected, unbonded pin
         PGND = Unused I/O configured as additional Ground pin
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         KPR  = Unused I/O with weak keeper (leave unconnected)
         VCC  = Dedicated Power Pin
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc9572xl-5-VQ44
Optimization Method                         : SPEED
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Power Mode                                  : STD
Ground on Unused IOs                        : OFF
Set I/O Pin Termination                     : KEEPER
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Input Limit                                 : 54
Pterm Limit                                 : 25
