<html><head><link type='text/css' href='style.css' rel='stylesheet'></head><body class='pgBgnd'>
<h3 align='center'>Equations</h3>
<table width='90%' align='center' border='1' cellpadding='0' cellspacing='0'>
<tr><td>
</td></tr><tr><td>
********** Mapped Logic **********
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
</td></tr><tr><td>
LED <= '1';
</td></tr><tr><td>
FDCPE_Q: FDCPE port map (Q,Q_D,gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',Q_CE);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q_D <= ((NOT out_cnt(3) AND out_cnt(1) AND NOT out_cnt(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_cnt(0) AND out_word(18))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(3) AND NOT out_cnt(1) AND NOT out_cnt(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_cnt(0) AND out_word(16))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(3) AND NOT out_cnt(1) AND NOT out_cnt(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_cnt(4) AND out_word(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(1) AND NOT out_cnt(2) AND NOT out_cnt(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_cnt(4) AND out_word(8))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(3) AND NOT out_cnt(1) AND out_cnt(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	out_cnt(0) AND NOT out_cnt(4) AND out_word(5))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (EXP8_.EXP)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (out_cnt(3) AND out_cnt(1) AND out_cnt(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	out_cnt(0) AND NOT out_cnt(4) AND out_word(15))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (out_cnt(3) AND out_cnt(1) AND NOT out_cnt(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	out_cnt(0) AND NOT out_cnt(4) AND out_word(11))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (out_cnt(3) AND NOT out_cnt(1) AND out_cnt(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	out_cnt(0) AND NOT out_cnt(4) AND out_word(13))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (out_cnt(3) AND NOT out_cnt(1) AND NOT out_cnt(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	out_cnt(0) AND NOT out_cnt(4) AND out_word(9))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(3) AND out_cnt(1) AND out_cnt(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	out_cnt(0) AND NOT out_cnt(4) AND out_word(7))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(3) AND NOT out_cnt(2) AND NOT out_cnt(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_cnt(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(3) AND out_cnt(1) AND NOT out_cnt(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_cnt(4) AND out_word(6))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (out_cnt(1) AND NOT out_cnt(2) AND NOT out_cnt(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_cnt(4) AND out_word(10)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q_CE <= (CE AND state(2) AND state(1));
</td></tr><tr><td>
FTCPE_cnt0: FTCPE port map (cnt(0),'1',spi_clk,cnt(4),'0',cnt_CE(0));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt_CE(0) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FTCPE_cnt1: FTCPE port map (cnt(1),cnt(0),spi_clk,cnt(4),'0',cnt_CE(1));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt_CE(1) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FTCPE_cnt2: FTCPE port map (cnt(2),cnt_T(2),spi_clk,cnt(4),'0',cnt_CE(2));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt_T(2) <= (cnt(0) AND cnt(1));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt_CE(2) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FTCPE_cnt3: FTCPE port map (cnt(3),cnt_T(3),spi_clk,cnt(4),'0',cnt_CE(3));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt_T(3) <= (cnt(0) AND cnt(1) AND cnt(2));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt_CE(3) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FTCPE_cnt4: FTCPE port map (cnt(4),cnt_T(4),spi_clk,cnt(4),'0',cnt_CE(4));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt_T(4) <= (cnt(0) AND cnt(1) AND cnt(2) AND cnt(3));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cnt_CE(4) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FTCPE_out_cnt0: FTCPE port map (out_cnt(0),'1',gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',out_cnt_CE(0));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_cnt_CE(0) <= (CE AND state(2) AND state(1));
</td></tr><tr><td>
FTCPE_out_cnt1: FTCPE port map (out_cnt(1),out_cnt(0),gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',out_cnt_CE(1));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_cnt_CE(1) <= (CE AND state(2) AND state(1));
</td></tr><tr><td>
FTCPE_out_cnt2: FTCPE port map (out_cnt(2),out_cnt_T(2),gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',out_cnt_CE(2));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_cnt_T(2) <= (out_cnt(1) AND out_cnt(0));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_cnt_CE(2) <= (CE AND state(2) AND state(1));
</td></tr><tr><td>
FTCPE_out_cnt3: FTCPE port map (out_cnt(3),out_cnt_T(3),gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',out_cnt_CE(3));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_cnt_T(3) <= (out_cnt(1) AND out_cnt(2) AND out_cnt(0));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_cnt_CE(3) <= (CE AND state(2) AND state(1));
</td></tr><tr><td>
</td></tr><tr><td>
out_cnt(3)/out_cnt(3)_RSTF <= ((out_cnt(3) AND out_cnt(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (out_cnt(1) AND out_cnt(2) AND out_cnt(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (out_cnt(2) AND out_cnt(0) AND out_cnt(4)));
</td></tr><tr><td>
FTCPE_out_cnt4: FTCPE port map (out_cnt(4),out_cnt_T(4),gclk,out_cnt(3)/out_cnt(3)_RSTF,'0',out_cnt_CE(4));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_cnt_T(4) <= (out_cnt(3) AND out_cnt(1) AND out_cnt(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	out_cnt(0));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_cnt_CE(4) <= (CE AND state(2) AND state(1));
</td></tr><tr><td>
FDCPE_out_word4: FDCPE port map (out_word(4),'0','0',out_word_CLR(4),out_word(4)/out_word(4)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(4) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(4)/out_word(4)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(4)/out_word(4)_SETF <= ((CE AND spi_in_word(15) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(4)));
</td></tr><tr><td>
FDCPE_out_word5: FDCPE port map (out_word(5),'0','0',out_word_CLR(5),out_word(5)/out_word(5)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(5) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(5)/out_word(5)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(5)/out_word(5)_SETF <= ((CE AND spi_in_word(14) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(5)));
</td></tr><tr><td>
</td></tr><tr><td>
out_word(6)/out_word(6)_SETF <= ((CE AND spi_in_word(13) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(6)));
</td></tr><tr><td>
FDCPE_out_word6: FDCPE port map (out_word(6),'0','0',out_word_CLR(6),out_word(6)/out_word(6)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(6) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(6)/out_word(6)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(7)/out_word(7)_SETF <= ((CE AND spi_in_word(12) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(7)));
</td></tr><tr><td>
FDCPE_out_word7: FDCPE port map (out_word(7),'0','0',out_word_CLR(7),out_word(7)/out_word(7)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(7) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(7)/out_word(7)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(8)/out_word(8)_SETF <= ((CE AND spi_in_word(11) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(8)));
</td></tr><tr><td>
FDCPE_out_word8: FDCPE port map (out_word(8),'0','0',out_word_CLR(8),out_word(8)/out_word(8)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(8) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(8)/out_word(8)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(9)/out_word(9)_RSTF <= ((CE AND NOT spi_in_word(10) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND NOT out_word(9)));
</td></tr><tr><td>
FDCPE_out_word9: FDCPE port map (out_word(9),'0','0',out_word(9)/out_word(9)_RSTF,out_word_PRE(9));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_PRE(9) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(9)/out_word(9)_RSTF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(10)/out_word(10)_RSTF <= ((CE AND NOT spi_in_word(9) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND NOT out_word(10)));
</td></tr><tr><td>
FDCPE_out_word10: FDCPE port map (out_word(10),'0','0',out_word(10)/out_word(10)_RSTF,out_word_PRE(10));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_PRE(10) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(10)/out_word(10)_RSTF);
</td></tr><tr><td>
FDCPE_out_word11: FDCPE port map (out_word(11),'0','0',out_word_CLR(11),out_word(11)/out_word(11)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(11) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(11)/out_word(11)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(11)/out_word(11)_SETF <= ((CE AND spi_in_word(8) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(11)));
</td></tr><tr><td>
FDCPE_out_word12: FDCPE port map (out_word(12),'0','0',out_word_CLR(12),out_word(12)/out_word(12)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(12) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(12)/out_word(12)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(12)/out_word(12)_SETF <= ((CE AND spi_in_word(7) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(12)));
</td></tr><tr><td>
FDCPE_out_word13: FDCPE port map (out_word(13),'0','0',out_word_CLR(13),out_word(13)/out_word(13)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(13) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(13)/out_word(13)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(13)/out_word(13)_SETF <= ((CE AND spi_in_word(6) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(13)));
</td></tr><tr><td>
</td></tr><tr><td>
out_word(14)/out_word(14)_SETF <= ((CE AND spi_in_word(5) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(14)));
</td></tr><tr><td>
FDCPE_out_word14: FDCPE port map (out_word(14),'0','0',out_word_CLR(14),out_word(14)/out_word(14)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(14) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(14)/out_word(14)_SETF);
</td></tr><tr><td>
FDCPE_out_word15: FDCPE port map (out_word(15),'0','0',out_word_CLR(15),out_word(15)/out_word(15)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(15) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(15)/out_word(15)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(15)/out_word(15)_SETF <= ((CE AND spi_in_word(4) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(15)));
</td></tr><tr><td>
FDCPE_out_word16: FDCPE port map (out_word(16),'0','0',out_word_CLR(16),out_word(16)/out_word(16)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(16) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(16)/out_word(16)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(16)/out_word(16)_SETF <= ((CE AND spi_in_word(3) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(16)));
</td></tr><tr><td>
</td></tr><tr><td>
out_word(17)/out_word(17)_SETF <= ((CE AND spi_in_word(2) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(17)));
</td></tr><tr><td>
FDCPE_out_word17: FDCPE port map (out_word(17),'0','0',out_word_CLR(17),out_word(17)/out_word(17)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(17) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(17)/out_word(17)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(18)/out_word(18)_SETF <= ((CE AND spi_in_word(1) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(18)));
</td></tr><tr><td>
FDCPE_out_word18: FDCPE port map (out_word(18),'0','0',out_word_CLR(18),out_word(18)/out_word(18)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(18) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(18)/out_word(18)_SETF);
</td></tr><tr><td>
FDCPE_out_word19: FDCPE port map (out_word(19),'0','0',out_word_CLR(19),out_word(19)/out_word(19)_SETF);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out_word_CLR(19) <= (NOT state(2) AND state(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT out_word(19)/out_word(19)_SETF);
</td></tr><tr><td>
</td></tr><tr><td>
out_word(19)/out_word(19)_SETF <= ((CE AND spi_in_word(0) AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CE AND NOT state(2) AND state(1) AND out_word(19)));
</td></tr><tr><td>
FDCPE_shout: FDCPE port map (shout,spi_in_word(15),spi_clk,'0','0',shout_CE);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shout_CE <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word0: FDCPE port map (spi_in_word(0),D,spi_clk,'0','0',spi_in_word_CE(0));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(0) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word1: FDCPE port map (spi_in_word(1),spi_in_word(0),spi_clk,'0','0',spi_in_word_CE(1));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(1) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word2: FDCPE port map (spi_in_word(2),spi_in_word(1),spi_clk,'0','0',spi_in_word_CE(2));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(2) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word3: FDCPE port map (spi_in_word(3),spi_in_word(2),spi_clk,'0','0',spi_in_word_CE(3));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(3) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word4: FDCPE port map (spi_in_word(4),spi_in_word(3),spi_clk,'0','0',spi_in_word_CE(4));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(4) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word5: FDCPE port map (spi_in_word(5),spi_in_word(4),spi_clk,'0','0',spi_in_word_CE(5));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(5) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word6: FDCPE port map (spi_in_word(6),spi_in_word(5),spi_clk,'0','0',spi_in_word_CE(6));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(6) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word7: FDCPE port map (spi_in_word(7),spi_in_word(6),spi_clk,'0','0',spi_in_word_CE(7));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(7) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word8: FDCPE port map (spi_in_word(8),spi_in_word(7),spi_clk,'0','0',spi_in_word_CE(8));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(8) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word9: FDCPE port map (spi_in_word(9),spi_in_word(8),spi_clk,'0','0',spi_in_word_CE(9));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(9) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word10: FDCPE port map (spi_in_word(10),spi_in_word(9),spi_clk,'0','0',spi_in_word_CE(10));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(10) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word11: FDCPE port map (spi_in_word(11),spi_in_word(10),spi_clk,'0','0',spi_in_word_CE(11));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(11) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word12: FDCPE port map (spi_in_word(12),spi_in_word(11),spi_clk,'0','0',spi_in_word_CE(12));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(12) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word13: FDCPE port map (spi_in_word(13),spi_in_word(12),spi_clk,'0','0',spi_in_word_CE(13));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(13) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word14: FDCPE port map (spi_in_word(14),spi_in_word(13),spi_clk,'0','0',spi_in_word_CE(14));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(14) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
FDCPE_spi_in_word15: FDCPE port map (spi_in_word(15),spi_in_word(14),spi_clk,'0','0',spi_in_word_CE(15));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spi_in_word_CE(15) <= (CE AND NOT state(2) AND NOT state(1));
</td></tr><tr><td>
</td></tr><tr><td>
state(1) <= ((cnt(4) AND CE AND NOT state(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(4) AND CE AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (CE AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(3) AND NOT out_cnt(2) AND CE AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(3) AND NOT out_cnt(1) AND NOT out_cnt(0) AND CE AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state(1)));
</td></tr><tr><td>
</td></tr><tr><td>
state(2) <= ((NOT out_cnt(4) AND CE AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (CE AND NOT state(2) AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(3) AND NOT out_cnt(2) AND CE AND state(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT out_cnt(3) AND NOT out_cnt(1) AND NOT out_cnt(0) AND CE AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	state(1)));
</td></tr><tr><td>
Register Legend:
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FDCPE (Q,D,C,CLR,PRE,CE); 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FTCPE (Q,D,C,CLR,PRE,CE); 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LDCP  (Q,D,G,CLR,PRE); 
</td></tr><tr><td>
</td></tr>
</table>
<form><span class="pgRef"><table width="90%" align="center"><tr>
<td align="left"><input type="button" onclick="javascript:parent.leftnav.showTop()" onmouseover="window.status='goto top of page'; return true;" onmouseout="window.status=''" value="back to top"></td>
<td align="right"><input type="button" onclick="window.print()" onmouseover="window.status='print page'; return true;" onmouseout="window.status=''" value="print page"></td>
</tr></table></span></form>
</body></html>
