// Create Date:    21:21:06 02/08/2014 
// Module Name:    m_seq_8bit 
//////////////////////////////////////////////////////////////////////////////////

module m_seq_8bit(						// объявление модуля - название m_seq_8bit
  input clk,								// входной тактовый сигнал, частоту задаем в симуляторе
  output reg [7:0] LFSR = 1			// 8-битный сдвиговый регистр, значение по умол. = 1
);

wire feedback = LFSR[7];				// "провод" обратной связи, подключается к старшему (8)
												// биту сдвигового регистра описанного выше, 
												// он будет равен значению 8-го бита сдвигового регистра - это обратная связиь

always @(posedge clk)               // подмодуль последовательных операций по тактовому сигналу, сра-
                                    // батывание по положительному(восходящему) фронту тактового сигнала

begin											// начало модуля

  LFSR[0] <= feedback;					// присваивание нулевому биту сдвигового регистра значение петли 
												// обратной связи (замыкание восьмого и нулевого битов сдвигового регистра) 
  
  LFSR[1] <= LFSR[0];					// присваивание значения 1-го бита -> 2-му биту, или сдвиг 0-го бита в сторону старших
												// разрядов на 1 бит
												
  LFSR[2] <= LFSR[1];					// присваивание значения 2-го бита -> 3-му биту, или сдвиг 1-го бита в сторону старших
												// разрядов на 1 бит
  
  LFSR[3] <= LFSR[2];               // присваивание значения 3-го бита -> 4-му биту, или сдвиг 3-го бита в сторону старших
												// разрядов на 1 бит
  
  LFSR[4] <= LFSR[3] ^ feedback;    // присваивание 5-му биту сдвиг. регистра результата операции "исключающего или (XOR)" 
											   // (сложение по модулю "2") между 4-ым битом сдвиг. регистра и сигналом обратной связи (8-ой бит сдвиг. регистра)
											
  LFSR[5] <= LFSR[4] ^ feedback;    // присваивание 6-му биту сдвиг. регистра результата операции "исключающего или (XOR)" 
											   // (сложение по модулю "2") между 5-ым битом сдвиг. регистра и сигналом обратной связи (8-ой бит сдвиг. регистра)
  
  LFSR[6] <= LFSR[5] ^ feedback;    // присваивание 7-му биту сдвиг. регистра результата операции "исключающего или (XOR)" 
											   // (сложение по модулю "2") между 6-ым битом сдвиг. регистра и сигналом обратной связи (8-ой бит сдвиг. регистра)
  
  LFSR[7] <= LFSR[6];					// присваивание значения 7-го бита -> 8-му биту, или сдвиг 7-го бита в сторону старших
												// разрядов на 1 бит
												
end											// конец подмодуля
endmodule	                        // конец основного модуля								


