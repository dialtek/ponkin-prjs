

Microchip Technology PIC18 STD Macro Assembler V1.33 build 59893 
                                                                                               Tue Sep 25 17:11:25 2018

Microchip Technology Omniscient Code Generator (Standard mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	sm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           	psect	idataCOMRAM
    49  001532                     __pidataCOMRAM:
    50                           	opt stack 0
    51                           
    52                           ;initializer for _CHANGE_MOTOR
    53  001532  0001               	dw	1
    54                           
    55                           ;initializer for _POT_MAX
    56  001534  0640               	dw	1600
    57                           
    58                           ;initializer for _POT_MIN
    59  001536  0190               	dw	400
    60                           
    61                           ;initializer for _bd_rate_code
    62  001538  04                 	db	4
    63                           
    64                           ;initializer for _dev_id
    65  001539  0A                 	db	10
    66                           
    67                           ;initializer for _rd_state
    68  00153A  0A                 	db	10
    69                           
    70                           	psect	idataBANK1
    71  00153B                     __pidataBANK1:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _ADC_current_min
    75  00153B  1000               	dw	4096
    76                           
    77                           ;initializer for _led_cnt
    78  00153D  FDE8               	dw	65000
    79  0000                     _ADCON0bits	set	4034
    80  0000                     _ADCON1bits	set	4033
    81  0000                     _ADCON2bits	set	4032
    82  0000                     _ADRESH	set	4036
    83  0000                     _ADRESL	set	4035
    84  0000                     _ANCON0bits	set	3933
    85  0000                     _ANCON1bits	set	3932
    86  0000                     _BAUDCON1bits	set	4007
    87  0000                     _EEADR	set	3956
    88  0000                     _EECON1bits	set	3967
    89  0000                     _EECON2	set	3966
    90  0000                     _EEDATA	set	3955
    91  0000                     _INTCON2bits	set	4081
    92  0000                     _INTCON3bits	set	4080
    93  0000                     _INTCONbits	set	4082
    94  0000                     _IOCB	set	3930
    95  0000                     _LATCbits	set	3979
    96  0000                     _PIE1bits	set	3997
    97  0000                     _PIR1bits	set	3998
    98  0000                     _PORTBbits	set	3969
    99  0000                     _RCONbits	set	4048
   100  0000                     _RCREG1	set	4014
   101  0000                     _RCSTA1bits	set	4011
   102  0000                     _SPBRG1	set	4015
   103  0000                     _T0CONbits	set	4053
   104  0000                     _T1CONbits	set	4045
   105  0000                     _T1GCONbits	set	4010
   106  0000                     _TMR0H	set	4055
   107  0000                     _TMR0L	set	4054
   108  0000                     _TMR1H	set	4047
   109  0000                     _TMR1L	set	4046
   110  0000                     _TRISAbits	set	3986
   111  0000                     _TRISBbits	set	3987
   112  0000                     _TRISCbits	set	3988
   113  0000                     _TXREG1bits	set	4013
   114  0000                     _TXSTA1bits	set	4012
   115  0000                     _GO_nDONE	set	32273
   116                           
   117                           	psect	nvBANK1
   118  0001F0                     __pnvBANK1:
   119                           	opt stack 0
   120  0001F0                     _current_max:
   121                           	opt stack 0
   122  0001F0                     	ds	2
   123  0001F2                     _num_of_turns:
   124                           	opt stack 0
   125  0001F2                     	ds	2
   126                           
   127                           ; #config settings
   128  0000                     
   129                           	psect	cinit
   130  001114                     __pcinit:
   131                           	opt stack 0
   132  001114                     start_initialization:
   133                           	opt stack 0
   134  001114                     __initialization:
   135                           	opt stack 0
   136                           
   137                           ; Clear objects allocated to BANK3 (250 bytes)
   138  001114  EE03  F000         	lfsr	0,__pbssBANK3
   139  001118  0EFA               	movlw	250
   140  00111A                     clear_0:
   141  00111A  6AEE               	clrf	postinc0,c
   142  00111C  06E8               	decf	wreg,f,c
   143  00111E  E1FD               	bnz	clear_0
   144                           
   145                           ; Clear objects allocated to BANK2 (250 bytes)
   146  001120  EE02  F000         	lfsr	0,__pbssBANK2
   147  001124  0EFA               	movlw	250
   148  001126                     clear_1:
   149  001126  6AEE               	clrf	postinc0,c
   150  001128  06E8               	decf	wreg,f,c
   151  00112A  E1FD               	bnz	clear_1
   152                           
   153                           ; Clear objects allocated to BANK1 (32 bytes)
   154  00112C  EE01  F0D0         	lfsr	0,__pbssBANK1
   155  001130  0E20               	movlw	32
   156  001132                     clear_2:
   157  001132  6AEE               	clrf	postinc0,c
   158  001134  06E8               	decf	wreg,f,c
   159  001136  E1FD               	bnz	clear_2
   160                           
   161                           ; Clear objects allocated to BANK0 (53 bytes)
   162  001138  EE00  F060         	lfsr	0,__pbssBANK0
   163  00113C  0E35               	movlw	53
   164  00113E                     clear_3:
   165  00113E  6AEE               	clrf	postinc0,c
   166  001140  06E8               	decf	wreg,f,c
   167  001142  E1FD               	bnz	clear_3
   168                           
   169                           ; Clear objects allocated to COMRAM (24 bytes)
   170  001144  EE00  F02E         	lfsr	0,__pbssCOMRAM
   171  001148  0E18               	movlw	24
   172  00114A                     clear_4:
   173  00114A  6AEE               	clrf	postinc0,c
   174  00114C  06E8               	decf	wreg,f,c
   175  00114E  E1FD               	bnz	clear_4
   176                           
   177                           ; Initialize objects allocated to BANK1 (4 bytes)
   178                           ; load TBLPTR registers with __pidataBANK1
   179  001150  0E3B               	movlw	low __pidataBANK1
   180  001152  6EF6               	movwf	tblptrl,c
   181  001154  0E15               	movlw	high __pidataBANK1
   182  001156  6EF7               	movwf	tblptrh,c
   183  001158  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   184  00115A  6EF8               	movwf	tblptru,c
   185  00115C  EE01  F0F4         	lfsr	0,__pdataBANK1
   186  001160  EE10 F004          	lfsr	1,4
   187  001164                     copy_data0:
   188  001164  0009               	tblrd		*+
   189  001166  CFF5 FFEE          	movff	tablat,postinc0
   190  00116A  50E5               	movf	postdec1,w,c
   191  00116C  50E1               	movf	fsr1l,w,c
   192  00116E  E1FA               	bnz	copy_data0
   193                           
   194                           ; Initialize objects allocated to COMRAM (9 bytes)
   195                           ; load TBLPTR registers with __pidataCOMRAM
   196  001170  0E32               	movlw	low __pidataCOMRAM
   197  001172  6EF6               	movwf	tblptrl,c
   198  001174  0E15               	movlw	high __pidataCOMRAM
   199  001176  6EF7               	movwf	tblptrh,c
   200  001178  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   201  00117A  6EF8               	movwf	tblptru,c
   202  00117C  EE00  F046         	lfsr	0,__pdataCOMRAM
   203  001180  EE10 F009          	lfsr	1,9
   204  001184                     copy_data1:
   205  001184  0009               	tblrd		*+
   206  001186  CFF5 FFEE          	movff	tablat,postinc0
   207  00118A  50E5               	movf	postdec1,w,c
   208  00118C  50E1               	movf	fsr1l,w,c
   209  00118E  E1FA               	bnz	copy_data1
   210  001190                     end_of_initialization:
   211                           	opt stack 0
   212  001190                     __end_of__initialization:
   213                           	opt stack 0
   214  001190  0E00               	movlw	low (__Lmediumconst shr (0+16))
   215  001192  6EF8               	movwf	tblptru,c
   216  001194  0100               	movlb	0
   217  001196  EF64  F000         	goto	_main	;jump to C main() function
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           postdec1	equ	0xFE5
   225                           fsr1l	equ	0xFE1
   226                           
   227                           	psect	bssCOMRAM
   228  00002E                     __pbssCOMRAM:
   229                           	opt stack 0
   230  00002E                     _CRC16:
   231                           	opt stack 0
   232  00002E                     	ds	2
   233  000030                     _addr_buf_1:
   234                           	opt stack 0
   235  000030                     	ds	2
   236  000032                     _eeprom_buf:
   237                           	opt stack 0
   238  000032                     	ds	2
   239  000034                     _modbus_reg_addr:
   240                           	opt stack 0
   241  000034                     	ds	2
   242  000036                     _reg_wr_data:
   243                           	opt stack 0
   244  000036                     	ds	2
   245  000038                     _regs2read:
   246                           	opt stack 0
   247  000038                     	ds	2
   248  00003A                     _temp_buf:
   249                           	opt stack 0
   250  00003A                     	ds	2
   251  00003C                     _answer:
   252                           	opt stack 0
   253  00003C                     	ds	1
   254  00003D                     _bd_rate_fl:
   255                           	opt stack 0
   256  00003D                     	ds	1
   257  00003E                     _get_crc_flag:
   258                           	opt stack 0
   259  00003E                     	ds	1
   260  00003F                     _id_change:
   261                           	opt stack 0
   262  00003F                     	ds	1
   263  000040                     _rd_ptr:
   264                           	opt stack 0
   265  000040                     	ds	1
   266  000041                     _reg_addr_flag:
   267                           	opt stack 0
   268  000041                     	ds	1
   269  000042                     _reg_qty_flag:
   270                           	opt stack 0
   271  000042                     	ds	1
   272  000043                     _reg_wr_flag:
   273                           	opt stack 0
   274  000043                     	ds	1
   275  000044                     _rx_byte:
   276                           	opt stack 0
   277  000044                     	ds	1
   278  000045                     _wr_ptr:
   279                           	opt stack 0
   280  000045                     	ds	1
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           postdec1	equ	0xFE5
   288                           fsr1l	equ	0xFE1
   289                           
   290                           	psect	dataCOMRAM
   291  000046                     __pdataCOMRAM:
   292                           	opt stack 0
   293  000046                     _CHANGE_MOTOR:
   294                           	opt stack 0
   295  000046                     	ds	2
   296  000048                     _POT_MAX:
   297                           	opt stack 0
   298  000048                     	ds	2
   299  00004A                     _POT_MIN:
   300                           	opt stack 0
   301  00004A                     	ds	2
   302  00004C                     _bd_rate_code:
   303                           	opt stack 0
   304  00004C                     	ds	1
   305  00004D                     _dev_id:
   306                           	opt stack 0
   307  00004D                     	ds	1
   308  00004E                     _rd_state:
   309                           	opt stack 0
   310  00004E                     	ds	1
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1l	equ	0xFE1
   319                           
   320                           	psect	bssBANK0
   321  000060                     __pbssBANK0:
   322                           	opt stack 0
   323  000060                     _rx_buf:
   324                           	opt stack 0
   325  000060                     	ds	32
   326  000080                     _ADC_current_result:
   327                           	opt stack 0
   328  000080                     	ds	2
   329  000082                     _ADC_cutoff_null:
   330                           	opt stack 0
   331  000082                     	ds	2
   332  000084                     _Buf:
   333                           	opt stack 0
   334  000084                     	ds	2
   335  000086                     _GRAD_2:
   336                           	opt stack 0
   337  000086                     	ds	2
   338  000088                     _TURN_PERCENT_2:
   339                           	opt stack 0
   340  000088                     	ds	2
   341  00008A                     _V_detect:
   342                           	opt stack 0
   343  00008A                     	ds	2
   344  00008C                     _addr_buf_2:
   345                           	opt stack 0
   346  00008C                     	ds	2
   347  00008E                     _flag:
   348                           	opt stack 0
   349  00008E                     	ds	2
   350  000090                     _refresh_offset:
   351                           	opt stack 0
   352  000090                     	ds	2
   353  000092                     _set_zero_error:
   354                           	opt stack 0
   355  000092                     	ds	2
   356  000094                     _count:
   357                           	opt stack 0
   358  000094                     	ds	1
   359                           tblptru	equ	0xFF8
   360                           tblptrh	equ	0xFF7
   361                           tblptrl	equ	0xFF6
   362                           tablat	equ	0xFF5
   363                           postinc0	equ	0xFEE
   364                           wreg	equ	0xFE8
   365                           postdec1	equ	0xFE5
   366                           fsr1l	equ	0xFE1
   367                           
   368                           	psect	bssBANK1
   369  0001D0                     __pbssBANK1:
   370                           	opt stack 0
   371  0001D0                     _ADC_RES_BUF:
   372                           	opt stack 0
   373  0001D0                     	ds	2
   374  0001D2                     _ADC_current_dif:
   375                           	opt stack 0
   376  0001D2                     	ds	2
   377  0001D4                     _ADC_current_max:
   378                           	opt stack 0
   379  0001D4                     	ds	2
   380  0001D6                     _ADC_current_rms:
   381                           	opt stack 0
   382  0001D6                     	ds	2
   383  0001D8                     _GRAD_cutoff_null:
   384                           	opt stack 0
   385  0001D8                     	ds	2
   386  0001DA                     _SET_MAX:
   387                           	opt stack 0
   388  0001DA                     	ds	2
   389  0001DC                     _SET_MIN:
   390                           	opt stack 0
   391  0001DC                     	ds	2
   392  0001DE                     _grad:
   393                           	opt stack 0
   394  0001DE                     	ds	2
   395  0001E0                     _grad_step:
   396                           	opt stack 0
   397  0001E0                     	ds	2
   398  0001E2                     _offset:
   399                           	opt stack 0
   400  0001E2                     	ds	2
   401  0001E4                     _overcurrent:
   402                           	opt stack 0
   403  0001E4                     	ds	2
   404  0001E6                     _percent_step:
   405                           	opt stack 0
   406  0001E6                     	ds	2
   407  0001E8                     _read_turns:
   408                           	opt stack 0
   409  0001E8                     	ds	2
   410  0001EA                     _set_zero:
   411                           	opt stack 0
   412  0001EA                     	ds	2
   413  0001EC                     _turns_percent:
   414                           	opt stack 0
   415  0001EC                     	ds	2
   416  0001EE                     _turns_percent_press:
   417                           	opt stack 0
   418  0001EE                     	ds	2
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	dataBANK1
   429  0001F4                     __pdataBANK1:
   430                           	opt stack 0
   431  0001F4                     _ADC_current_min:
   432                           	opt stack 0
   433  0001F4                     	ds	2
   434  0001F6                     _led_cnt:
   435                           	opt stack 0
   436  0001F6                     	ds	2
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postdec1	equ	0xFE5
   444                           fsr1l	equ	0xFE1
   445                           
   446                           	psect	bssBANK2
   447  000200                     __pbssBANK2:
   448                           	opt stack 0
   449  000200                     _holding_register:
   450                           	opt stack 0
   451  000200                     	ds	250
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461                           	psect	bssBANK3
   462  000300                     __pbssBANK3:
   463                           	opt stack 0
   464  000300                     _crc_buf:
   465                           	opt stack 0
   466  000300                     	ds	250
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	cstackBANK1
   477  000100                     __pcstackBANK1:
   478                           	opt stack 0
   479  000100                     main@curr_arr:
   480                           	opt stack 0
   481                           
   482                           ; 200 bytes @ 0x0
   483  000100                     	ds	200
   484  0001C8                     _main$2017:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0xC8
   488  0001C8                     	ds	2
   489  0001CA                     main@i:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0xCA
   493  0001CA                     	ds	2
   494  0001CC                     main@i_1470:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0xCC
   498  0001CC                     	ds	2
   499  0001CE                     main@i_1471:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0xCE
   503  0001CE                     	ds	2
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           postdec1	equ	0xFE5
   511                           fsr1l	equ	0xFE1
   512                           
   513                           	psect	cstackBANK0
   514  000095                     __pcstackBANK0:
   515                           	opt stack 0
   516  000095                     ??___fttol:
   517                           
   518                           ; 0 bytes @ 0x0
   519  000095                     	ds	5
   520  00009A                     ___fttol@sign1:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x5
   524  00009A                     	ds	1
   525  00009B                     ___fttol@lval:
   526                           	opt stack 0
   527                           
   528                           ; 4 bytes @ 0x6
   529  00009B                     	ds	4
   530  00009F                     ___fttol@exp1:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0xA
   534  00009F                     	ds	1
   535  0000A0                     ??_main:
   536                           
   537                           ; 0 bytes @ 0xB
   538  0000A0                     	ds	6
   539                           tblptru	equ	0xFF8
   540                           tblptrh	equ	0xFF7
   541                           tblptrl	equ	0xFF6
   542                           tablat	equ	0xFF5
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           postdec1	equ	0xFE5
   546                           fsr1l	equ	0xFE1
   547                           
   548                           	psect	cstackCOMRAM
   549  000001                     __pcstackCOMRAM:
   550                           	opt stack 0
   551  000001                     ??_ISR:
   552  000001                     
   553                           ; 1 bytes @ 0x0
   554  000001                     	ds	16
   555  000011                     ??_get_rx_ch:
   556  000011                     ?_modbus_CRC16:
   557                           	opt stack 0
   558  000011                     ?___lwdiv:
   559                           	opt stack 0
   560  000011                     ?___ftpack:
   561                           	opt stack 0
   562  000011                     EEPROM_WrByte@bData:
   563                           	opt stack 0
   564  000011                     EEPROM_RdByte@bAdd:
   565                           	opt stack 0
   566  000011                     uart_send_hex@temp:
   567                           	opt stack 0
   568  000011                     UART_Init@bd_rate_code:
   569                           	opt stack 0
   570  000011                     modbus_reset@i:
   571                           	opt stack 0
   572  000011                     modbus_CRC16@buf:
   573                           	opt stack 0
   574  000011                     ___lwdiv@dividend:
   575                           	opt stack 0
   576  000011                     ___ftpack@arg:
   577                           	opt stack 0
   578                           
   579                           ; 3 bytes @ 0x10
   580  000011                     	ds	1
   581  000012                     ??_EEprom_restore:
   582  000012                     EEPROM_WrByte@bAdd:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x11
   586  000012                     	ds	1
   587  000013                     EEPROM_WrByte@GIEBitsVal:
   588                           	opt stack 0
   589  000013                     get_rx_ch@rch:
   590                           	opt stack 0
   591  000013                     modbus_CRC16@len:
   592                           	opt stack 0
   593  000013                     ___lwdiv@divisor:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x12
   597  000013                     	ds	1
   598  000014                     ??_modbus_refresh:
   599  000014                     ??_modbus_CRC16:
   600  000014                     ___ftpack@exp:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x13
   604  000014                     	ds	1
   605  000015                     ___ftpack@sign:
   606                           	opt stack 0
   607  000015                     ___lwdiv@quotient:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x14
   611  000015                     	ds	1
   612  000016                     ??___ftpack:
   613                           
   614                           ; 0 bytes @ 0x15
   615  000016                     	ds	1
   616  000017                     modbus_refresh@cmd_type:
   617                           	opt stack 0
   618  000017                     ___lwdiv@counter:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x16
   622  000017                     	ds	2
   623  000019                     ?___lwtoft:
   624                           	opt stack 0
   625  000019                     ___lwtoft@c:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x18
   629  000019                     	ds	2
   630  00001B                     modbus_CRC16@pos:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x1A
   634  00001B                     	ds	1
   635  00001C                     ?___ftmul:
   636                           	opt stack 0
   637  00001C                     modbus_CRC16@i:
   638                           	opt stack 0
   639  00001C                     ___ftmul@f1:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x1B
   643  00001C                     	ds	1
   644  00001D                     modbus_CRC16@crc:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x1C
   648  00001D                     	ds	2
   649  00001F                     ??_modbus_wsr_answer:
   650  00001F                     ??_modbus_rhr_answer:
   651  00001F                     ??_modbus_rx_CRC_check:
   652  00001F                     ___ftmul@f2:
   653                           	opt stack 0
   654                           
   655                           ; 3 bytes @ 0x1E
   656  00001F                     	ds	3
   657  000022                     ??___ftmul:
   658  000022                     modbus_rx_CRC_check@modbus_cmd:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x21
   662  000022                     	ds	1
   663  000023                     ??_modbus_rx_sm:
   664  000023                     modbus_rhr_answer@i:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x22
   668  000023                     	ds	1
   669  000024                     modbus_rhr_answer@j:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x23
   673  000024                     	ds	1
   674  000025                     modbus_rhr_answer@cnt:
   675                           	opt stack 0
   676  000025                     ___ftmul@exp:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x24
   680  000025                     	ds	1
   681  000026                     ??_modbus_poll:
   682  000026                     ___ftmul@sign:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x25
   686  000026                     	ds	1
   687  000027                     ___ftmul@f3_as_product:
   688                           	opt stack 0
   689                           
   690                           ; 3 bytes @ 0x26
   691  000027                     	ds	3
   692  00002A                     ?___fttol:
   693                           	opt stack 0
   694  00002A                     ___fttol@f1:
   695                           	opt stack 0
   696                           
   697                           ; 3 bytes @ 0x29
   698  00002A                     	ds	4
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           postdec1	equ	0xFE5
   706                           fsr1l	equ	0xFE1
   707                           
   708 ;;
   709 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   710 ;;
   711 ;; *************** function _main *****************
   712 ;; Defined at:
   713 ;;		line 845 in file "Turn_counter.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  i               2  206[BANK1 ] int 
   718 ;;  i               2  204[BANK1 ] int 
   719 ;;  i               2  202[BANK1 ] int 
   720 ;;  curr_arr      200    0[BANK1 ] unsigned int [100]
   721 ;; Return value:  Size  Location     Type
   722 ;;		None               void
   723 ;; Registers used:
   724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   731 ;;      Locals:         0       0     208       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   732 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   733 ;;      Totals:         0       6     208       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   734 ;;Total ram usage:      214 bytes
   735 ;; Hardware stack levels required when called:    4
   736 ;; This function calls:
   737 ;;		_ADC_Init
   738 ;;		_EEPROM_WrByte
   739 ;;		_EEprom_restore
   740 ;;		_GPIO_init
   741 ;;		_Hold_reg_Inint
   742 ;;		_Interrupt_Init
   743 ;;		_Timer1_init
   744 ;;		_UART_Init
   745 ;;		___ftmul
   746 ;;		___fttol
   747 ;;		___lwdiv
   748 ;;		___lwtoft
   749 ;;		_modbus_poll
   750 ;;		_modbus_reset
   751 ;;		_modbus_rx_sm
   752 ;; This function is called by:
   753 ;;		Startup code after reset
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text0
   758  0000C8                     __ptext0:
   759                           	opt stack 0
   760  0000C8                     _main:
   761                           	opt stack 27
   762                           
   763                           ;Turn_counter.c: 847: unsigned int curr_arr[100];
   764                           ;Turn_counter.c: 849: Hold_reg_Inint();
   765                           
   766                           ;incstack = 0
   767  0000C8  EC7D  F00A         	call	_Hold_reg_Inint	;wreg free
   768                           
   769                           ;Turn_counter.c: 851: Timer1_init();
   770  0000CC  EC91  F00A         	call	_Timer1_init	;wreg free
   771                           
   772                           ;Turn_counter.c: 852: GPIO_init();
   773  0000D0  EC1E  F00A         	call	_GPIO_init	;wreg free
   774                           
   775                           ;Turn_counter.c: 853: LATCbits.LATC3=0;
   776  0000D4  968B               	bcf	3979,3,c	;volatile
   777                           
   778                           ;Turn_counter.c: 854: ADC_Init();
   779  0000D6  EC35  F00A         	call	_ADC_Init	;wreg free
   780                           
   781                           ;Turn_counter.c: 855: EEprom_restore();
   782  0000DA  ECE4  F004         	call	_EEprom_restore	;wreg free
   783                           
   784                           ;Turn_counter.c: 856: Interrupt_Init();
   785  0000DE  EC5E  F00A         	call	_Interrupt_Init	;wreg free
   786                           
   787                           ;Turn_counter.c: 858: modbus_reset();
   788  0000E2  EC06  F00A         	call	_modbus_reset	;wreg free
   789                           
   790                           ;Turn_counter.c: 859: for(int i = 0; i < 125; i++)
   791  0000E6  0101               	movlb	1	; () banked
   792  0000E8  6BCB               	clrf	(main@i+1)& (0+255),b
   793  0000EA  6BCA               	clrf	main@i& (0+255),b
   794  0000EC                     
   795                           ; BSR set to: 1
   796  0000EC  0101               	movlb	1	; () banked
   797  0000EE  51CB               	movf	(main@i+1)& (0+255),w,b
   798  0000F0  0A80               	xorlw	128
   799  0000F2  0F80               	addlw	-128
   800  0000F4  0E7D               	movlw	125
   801  0000F6  B4D8               	btfsc	status,2,c
   802  0000F8  5DCA               	subwf	main@i& (0+255),w,b
   803  0000FA  E216               	bc	l369
   804                           
   805                           ; BSR set to: 1
   806                           ;Turn_counter.c: 860: holding_register[i] = 0;
   807                           
   808                           ; BSR set to: 1
   809                           
   810                           ; BSR set to: 1
   811  0000FC  0E00               	movlw	low _holding_register
   812  0000FE  0100               	movlb	0	; () banked
   813  000100  6FA0               	movwf	??_main& (0+255),b
   814  000102  0E02               	movlw	high _holding_register
   815  000104  6FA1               	movwf	(??_main+1)& (0+255),b
   816  000106  90D8               	bcf	status,0,c
   817  000108  0101               	movlb	1	; () banked
   818  00010A  35CA               	rlcf	main@i& (0+255),w,b
   819  00010C  6ED9               	movwf	fsr2l,c
   820  00010E  35CB               	rlcf	(main@i+1)& (0+255),w,b
   821  000110  6EDA               	movwf	fsr2h,c
   822  000112  0100               	movlb	0	; () banked
   823  000114  51A0               	movf	??_main& (0+255),w,b
   824  000116  26D9               	addwf	fsr2l,f,c
   825  000118  51A1               	movf	(??_main+1)& (0+255),w,b
   826  00011A  22DA               	addwfc	fsr2h,f,c
   827  00011C  6ADE               	clrf	postinc2,c
   828  00011E  6ADD               	clrf	postdec2,c
   829                           
   830                           ; BSR set to: 0
   831  000120  0101               	movlb	1	; () banked
   832  000122  4BCA               	infsnz	main@i& (0+255),f,b
   833  000124  2BCB               	incf	(main@i+1)& (0+255),f,b
   834  000126  D7E2               	goto	L1
   835  000128                     l369:
   836                           
   837                           ; BSR set to: 1
   838                           ;Turn_counter.c: 862: T1CONbits.TMR1ON = 1;
   839  000128  80CD               	bsf	4045,0,c	;volatile
   840  00012A                     l2949:
   841                           
   842                           ;Turn_counter.c: 865: {
   843                           ;Turn_counter.c: 866: modbus_rx_sm();
   844  00012A  EC68  F006         	call	_modbus_rx_sm	;wreg free
   845                           
   846                           ;Turn_counter.c: 867: modbus_poll();
   847  00012E  ECDA  F007         	call	_modbus_poll	;wreg free
   848                           
   849                           ;Turn_counter.c: 869: if(PORTBbits.RB3)
   850  000132  B681               	btfsc	3969,3,c	;volatile
   851  000134  D011               	goto	l2965
   852                           
   853                           ;Turn_counter.c: 873: else
   854                           ;Turn_counter.c: 874: {
   855                           ;Turn_counter.c: 875: dev_id = (unsigned char) 10;
   856                           
   857                           ;Turn_counter.c: 870: {
   858                           ;Turn_counter.c: 872: }
   859  000136  0E0A               	movlw	10
   860  000138  6E4D               	movwf	_dev_id,c
   861                           
   862                           ;Turn_counter.c: 876: bd_rate_code = 4;
   863  00013A  0E04               	movlw	4
   864  00013C  6E4C               	movwf	_bd_rate_code,c
   865                           
   866                           ;Turn_counter.c: 878: UART_Init(bd_rate_code);
   867  00013E  504C               	movf	_bd_rate_code,w,c
   868  000140  EC4F  F009         	call	_UART_Init
   869                           
   870                           ;Turn_counter.c: 879: EEPROM_WrByte(1,bd_rate_code);
   871  000144  C04C  F011         	movff	_bd_rate_code,EEPROM_WrByte@bData
   872  000148  0E01               	movlw	1
   873  00014A  ECC7  F009         	call	_EEPROM_WrByte
   874                           
   875                           ;Turn_counter.c: 880: EEPROM_WrByte(2,dev_id);
   876  00014E  C04D  F011         	movff	_dev_id,EEPROM_WrByte@bData
   877  000152  0E02               	movlw	2
   878  000154  ECC7  F009         	call	_EEPROM_WrByte
   879  000158                     l2965:
   880                           
   881                           ;Turn_counter.c: 881: }
   882                           ;Turn_counter.c: 883: ADC_current_max = 0;
   883  000158  0101               	movlb	1	; () banked
   884  00015A  6BD5               	clrf	(_ADC_current_max+1)& (0+255),b
   885  00015C  6BD4               	clrf	_ADC_current_max& (0+255),b
   886                           
   887                           ; BSR set to: 1
   888                           ;Turn_counter.c: 884: ADC_current_min = 4096;
   889  00015E  0E10               	movlw	16
   890  000160  6FF5               	movwf	(_ADC_current_min+1)& (0+255),b
   891  000162  6BF4               	clrf	_ADC_current_min& (0+255),b
   892                           
   893                           ; BSR set to: 1
   894                           ;Turn_counter.c: 886: ADCON0bits.CHS = 9;
   895  000164  84C2               	bsf	4034,2,c	;volatile
   896  000166  96C2               	bcf	4034,3,c	;volatile
   897  000168  98C2               	bcf	4034,4,c	;volatile
   898  00016A  8AC2               	bsf	4034,5,c	;volatile
   899  00016C  9CC2               	bcf	4034,6,c	;volatile
   900                           
   901                           ; BSR set to: 1
   902                           ;Turn_counter.c: 887: _delay((unsigned long)((10)*(40000000/4000000.0)));
   903  00016E  0E21               	movlw	33
   904  000170                     u1967:
   905  000170  2EE8               	decfsz	wreg,f,c
   906  000172  D7FE               	goto	u1967
   907  000174  F000               	nop	
   908                           
   909                           ;Turn_counter.c: 888: for(int i=0;i<100;i++)
   910  000176  0101               	movlb	1	; () banked
   911  000178  6BCD               	clrf	(main@i_1470+1)& (0+255),b
   912  00017A  6BCC               	clrf	main@i_1470& (0+255),b
   913  00017C                     
   914                           ; BSR set to: 1
   915  00017C  0101               	movlb	1	; () banked
   916  00017E  51CD               	movf	(main@i_1470+1)& (0+255),w,b
   917  000180  0A80               	xorlw	128
   918  000182  0F80               	addlw	-128
   919  000184  0E64               	movlw	100
   920  000186  B4D8               	btfsc	status,2,c
   921  000188  5DCC               	subwf	main@i_1470& (0+255),w,b
   922  00018A  E22C               	bc	l2989
   923                           
   924                           ; BSR set to: 1
   925                           ;Turn_counter.c: 889: {
   926                           ;Turn_counter.c: 890: GO_nDONE = 1;
   927                           
   928                           ; BSR set to: 1
   929  00018C  82C2               	bsf	4034,1,c	;volatile
   930                           
   931                           ; BSR set to: 1
   932                           ;Turn_counter.c: 891: _delay((unsigned long)((20)*(40000000/4000000.0)));
   933  00018E  0E42               	movlw	66
   934  000190                     u1977:
   935  000190  2EE8               	decfsz	wreg,f,c
   936  000192  D7FE               	goto	u1977
   937  000194  D000               	nop2		;nop
   938                           
   939                           ;Turn_counter.c: 893: curr_arr[i] = (ADRESH<<8) | ADRESL;
   940  000196  50C3               	movf	4035,w,c	;volatile
   941  000198  CFC4 F0A0          	movff	4036,??_main	;volatile
   942  00019C  0100               	movlb	0	; () banked
   943  00019E  6BA1               	clrf	(??_main+1)& (0+255),b
   944  0001A0  C0A0  F0A1         	movff	??_main,??_main+1
   945  0001A4  6BA0               	clrf	??_main& (0+255),b
   946  0001A6  13A0               	iorwf	??_main& (0+255),f,b
   947  0001A8  0E00               	movlw	low main@curr_arr
   948  0001AA  6FA2               	movwf	(??_main+2)& (0+255),b
   949  0001AC  0E01               	movlw	high main@curr_arr
   950  0001AE  6FA3               	movwf	(??_main+3)& (0+255),b
   951  0001B0  90D8               	bcf	status,0,c
   952  0001B2  0101               	movlb	1	; () banked
   953  0001B4  35CC               	rlcf	main@i_1470& (0+255),w,b
   954  0001B6  6ED9               	movwf	fsr2l,c
   955  0001B8  35CD               	rlcf	(main@i_1470+1)& (0+255),w,b
   956  0001BA  6EDA               	movwf	fsr2h,c
   957  0001BC  0100               	movlb	0	; () banked
   958  0001BE  51A2               	movf	(??_main+2)& (0+255),w,b
   959  0001C0  26D9               	addwf	fsr2l,f,c
   960  0001C2  51A3               	movf	(??_main+3)& (0+255),w,b
   961  0001C4  22DA               	addwfc	fsr2h,f,c
   962  0001C6  C0A0  FFDE         	movff	??_main,postinc2
   963  0001CA  C0A1  FFDD         	movff	??_main+1,postdec2
   964                           
   965                           ; BSR set to: 0
   966                           ;Turn_counter.c: 894: _delay((unsigned long)((200)*(40000000/4000000.0)));
   967  0001CE  0E03               	movlw	3
   968  0001D0  6FA0               	movwf	??_main& (0+255),b
   969  0001D2  0E98               	movlw	152
   970  0001D4                     u1987:
   971  0001D4  2EE8               	decfsz	wreg,f,c
   972  0001D6  D7FE               	goto	u1987
   973  0001D8  2FA0               	decfsz	??_main& (0+255),f,b
   974  0001DA  D7FC               	goto	u1987
   975  0001DC  0101               	movlb	1	; () banked
   976  0001DE  4BCC               	infsnz	main@i_1470& (0+255),f,b
   977  0001E0  2BCD               	incf	(main@i_1470+1)& (0+255),f,b
   978  0001E2  D7CC               	goto	L2
   979  0001E4                     l2989:
   980                           
   981                           ; BSR set to: 1
   982                           ;Turn_counter.c: 895: }
   983                           ;Turn_counter.c: 898: for(int i=0;i<100;i++)
   984  0001E4  0101               	movlb	1	; () banked
   985  0001E6  6BCF               	clrf	(main@i_1471+1)& (0+255),b
   986  0001E8  6BCE               	clrf	main@i_1471& (0+255),b
   987  0001EA                     
   988                           ; BSR set to: 1
   989  0001EA  0101               	movlb	1	; () banked
   990  0001EC  51CF               	movf	(main@i_1471+1)& (0+255),w,b
   991  0001EE  0A80               	xorlw	128
   992  0001F0  0F80               	addlw	-128
   993  0001F2  0E64               	movlw	100
   994  0001F4  B4D8               	btfsc	status,2,c
   995  0001F6  5DCE               	subwf	main@i_1471& (0+255),w,b
   996  0001F8  E264               	bc	l3005
   997                           
   998                           ; BSR set to: 1
   999                           ;Turn_counter.c: 899: {
  1000                           ;Turn_counter.c: 900: if(curr_arr[i] > ADC_current_max)
  1001                           
  1002                           ; BSR set to: 1
  1003                           
  1004                           ; BSR set to: 1
  1005  0001FA  0E00               	movlw	low main@curr_arr
  1006  0001FC  0100               	movlb	0	; () banked
  1007  0001FE  6FA0               	movwf	??_main& (0+255),b
  1008  000200  0E01               	movlw	high main@curr_arr
  1009  000202  6FA1               	movwf	(??_main+1)& (0+255),b
  1010  000204  90D8               	bcf	status,0,c
  1011  000206  0101               	movlb	1	; () banked
  1012  000208  35CE               	rlcf	main@i_1471& (0+255),w,b
  1013  00020A  6ED9               	movwf	fsr2l,c
  1014  00020C  35CF               	rlcf	(main@i_1471+1)& (0+255),w,b
  1015  00020E  6EDA               	movwf	fsr2h,c
  1016  000210  0100               	movlb	0	; () banked
  1017  000212  51A0               	movf	??_main& (0+255),w,b
  1018  000214  26D9               	addwf	fsr2l,f,c
  1019  000216  51A1               	movf	(??_main+1)& (0+255),w,b
  1020  000218  22DA               	addwfc	fsr2h,f,c
  1021  00021A  CFDE F0A2          	movff	postinc2,??_main+2
  1022  00021E  CFDD F0A3          	movff	postdec2,??_main+3
  1023  000222  51A2               	movf	(??_main+2)& (0+255),w,b
  1024  000224  0101               	movlb	1	; () banked
  1025  000226  5DD4               	subwf	_ADC_current_max& (0+255),w,b
  1026  000228  0100               	movlb	0	; () banked
  1027  00022A  51A3               	movf	(??_main+3)& (0+255),w,b
  1028  00022C  0101               	movlb	1	; () banked
  1029  00022E  59D5               	subwfb	(_ADC_current_max+1)& (0+255),w,b
  1030  000230  E214               	bc	l377
  1031                           
  1032                           ; BSR set to: 1
  1033                           ;Turn_counter.c: 901: ADC_current_max = curr_arr[i];
  1034  000232  0E00               	movlw	low main@curr_arr
  1035  000234  0100               	movlb	0	; () banked
  1036  000236  6FA0               	movwf	??_main& (0+255),b
  1037  000238  0E01               	movlw	high main@curr_arr
  1038  00023A  6FA1               	movwf	(??_main+1)& (0+255),b
  1039  00023C  90D8               	bcf	status,0,c
  1040  00023E  0101               	movlb	1	; () banked
  1041  000240  35CE               	rlcf	main@i_1471& (0+255),w,b
  1042  000242  6ED9               	movwf	fsr2l,c
  1043  000244  35CF               	rlcf	(main@i_1471+1)& (0+255),w,b
  1044  000246  6EDA               	movwf	fsr2h,c
  1045  000248  0100               	movlb	0	; () banked
  1046  00024A  51A0               	movf	??_main& (0+255),w,b
  1047  00024C  26D9               	addwf	fsr2l,f,c
  1048  00024E  51A1               	movf	(??_main+1)& (0+255),w,b
  1049  000250  22DA               	addwfc	fsr2h,f,c
  1050  000252  CFDE F1D4          	movff	postinc2,_ADC_current_max
  1051  000256  CFDD F1D5          	movff	postdec2,_ADC_current_max+1
  1052  00025A                     l377:
  1053                           
  1054                           ; BSR set to: 1
  1055                           ;Turn_counter.c: 903: if(curr_arr[i] < ADC_current_min)
  1056  00025A  0E00               	movlw	low main@curr_arr
  1057  00025C  0100               	movlb	0	; () banked
  1058  00025E  6FA0               	movwf	??_main& (0+255),b
  1059  000260  0E01               	movlw	high main@curr_arr
  1060  000262  6FA1               	movwf	(??_main+1)& (0+255),b
  1061  000264  90D8               	bcf	status,0,c
  1062  000266  0101               	movlb	1	; () banked
  1063  000268  35CE               	rlcf	main@i_1471& (0+255),w,b
  1064  00026A  6ED9               	movwf	fsr2l,c
  1065  00026C  35CF               	rlcf	(main@i_1471+1)& (0+255),w,b
  1066  00026E  6EDA               	movwf	fsr2h,c
  1067  000270  0100               	movlb	0	; () banked
  1068  000272  51A0               	movf	??_main& (0+255),w,b
  1069  000274  26D9               	addwf	fsr2l,f,c
  1070  000276  51A1               	movf	(??_main+1)& (0+255),w,b
  1071  000278  22DA               	addwfc	fsr2h,f,c
  1072  00027A  CFDE F0A2          	movff	postinc2,??_main+2
  1073  00027E  CFDD F0A3          	movff	postdec2,??_main+3
  1074  000282  0101               	movlb	1	; () banked
  1075  000284  51F4               	movf	_ADC_current_min& (0+255),w,b
  1076  000286  0100               	movlb	0	; () banked
  1077  000288  5DA2               	subwf	(??_main+2)& (0+255),w,b
  1078  00028A  0101               	movlb	1	; () banked
  1079  00028C  51F5               	movf	(_ADC_current_min+1)& (0+255),w,b
  1080  00028E  0100               	movlb	0	; () banked
  1081  000290  59A3               	subwfb	(??_main+3)& (0+255),w,b
  1082  000292  E213               	bc	l3001
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;Turn_counter.c: 904: ADC_current_min = curr_arr[i];
  1086  000294  0E00               	movlw	low main@curr_arr
  1087  000296  6FA0               	movwf	??_main& (0+255),b
  1088  000298  0E01               	movlw	high main@curr_arr
  1089  00029A  6FA1               	movwf	(??_main+1)& (0+255),b
  1090  00029C  90D8               	bcf	status,0,c
  1091  00029E  0101               	movlb	1	; () banked
  1092  0002A0  35CE               	rlcf	main@i_1471& (0+255),w,b
  1093  0002A2  6ED9               	movwf	fsr2l,c
  1094  0002A4  35CF               	rlcf	(main@i_1471+1)& (0+255),w,b
  1095  0002A6  6EDA               	movwf	fsr2h,c
  1096  0002A8  0100               	movlb	0	; () banked
  1097  0002AA  51A0               	movf	??_main& (0+255),w,b
  1098  0002AC  26D9               	addwf	fsr2l,f,c
  1099  0002AE  51A1               	movf	(??_main+1)& (0+255),w,b
  1100  0002B0  22DA               	addwfc	fsr2h,f,c
  1101  0002B2  CFDE F1F4          	movff	postinc2,_ADC_current_min
  1102  0002B6  CFDD F1F5          	movff	postdec2,_ADC_current_min+1
  1103  0002BA                     l3001:
  1104  0002BA  0101               	movlb	1	; () banked
  1105  0002BC  4BCE               	infsnz	main@i_1471& (0+255),f,b
  1106  0002BE  2BCF               	incf	(main@i_1471+1)& (0+255),f,b
  1107  0002C0  D794               	goto	L3
  1108  0002C2                     l3005:
  1109                           
  1110                           ; BSR set to: 1
  1111                           ;Turn_counter.c: 905: }
  1112                           ;Turn_counter.c: 907: ADC_current_dif = ADC_current_max - ADC_current_min;
  1113  0002C2  C1F4  F0A0         	movff	_ADC_current_min,??_main
  1114  0002C6  C1F5  F0A1         	movff	_ADC_current_min+1,??_main+1
  1115  0002CA  0100               	movlb	0	; () banked
  1116  0002CC  1FA0               	comf	??_main& (0+255),f,b
  1117  0002CE  1FA1               	comf	(??_main+1)& (0+255),f,b
  1118  0002D0  4BA0               	infsnz	??_main& (0+255),f,b
  1119  0002D2  2BA1               	incf	(??_main+1)& (0+255),f,b
  1120  0002D4  0101               	movlb	1	; () banked
  1121  0002D6  51D4               	movf	_ADC_current_max& (0+255),w,b
  1122  0002D8  0100               	movlb	0	; () banked
  1123  0002DA  25A0               	addwf	??_main& (0+255),w,b
  1124  0002DC  0101               	movlb	1	; () banked
  1125  0002DE  6FD2               	movwf	_ADC_current_dif& (0+255),b
  1126  0002E0  51D5               	movf	(_ADC_current_max+1)& (0+255),w,b
  1127  0002E2  0100               	movlb	0	; () banked
  1128  0002E4  21A1               	addwfc	(??_main+1)& (0+255),w,b
  1129  0002E6  0101               	movlb	1	; () banked
  1130  0002E8  6FD3               	movwf	(_ADC_current_dif+1)& (0+255),b
  1131                           
  1132                           ; BSR set to: 1
  1133                           ;Turn_counter.c: 908: ADC_current_rms = (unsigned int)((ADC_current_dif/2) * 4.27);
  1134  0002EA  0EA4               	movlw	164
  1135  0002EC  6E1F               	movwf	___ftmul@f2,c
  1136  0002EE  0E88               	movlw	136
  1137  0002F0  6E20               	movwf	___ftmul@f2+1,c
  1138  0002F2  0E40               	movlw	64
  1139  0002F4  6E21               	movwf	___ftmul@f2+2,c
  1140  0002F6  90D8               	bcf	status,0,c
  1141  0002F8  31D3               	rrcf	(_ADC_current_dif+1)& (0+255),w,b
  1142  0002FA  6E1A               	movwf	___lwtoft@c+1,c
  1143  0002FC  31D2               	rrcf	_ADC_current_dif& (0+255),w,b
  1144  0002FE  6E19               	movwf	___lwtoft@c,c
  1145  000300  EC4C  F00A         	call	___lwtoft	;wreg free
  1146  000304  C019  F01C         	movff	?___lwtoft,___ftmul@f1
  1147  000308  C01A  F01D         	movff	?___lwtoft+1,___ftmul@f1+1
  1148  00030C  C01B  F01E         	movff	?___lwtoft+2,___ftmul@f1+2
  1149  000310  EC6A  F007         	call	___ftmul	;wreg free
  1150  000314  C01C  F02A         	movff	?___ftmul,___fttol@f1
  1151  000318  C01D  F02B         	movff	?___ftmul+1,___fttol@f1+1
  1152  00031C  C01E  F02C         	movff	?___ftmul+2,___fttol@f1+2
  1153  000320  ECF5  F006         	call	___fttol	;wreg free
  1154  000324  C02A  F0A0         	movff	?___fttol,??_main
  1155  000328  C02B  F0A1         	movff	?___fttol+1,??_main+1
  1156  00032C  C02C  F0A2         	movff	?___fttol+2,??_main+2
  1157  000330  C02D  F0A3         	movff	?___fttol+3,??_main+3
  1158  000334  C0A0  F1D6         	movff	??_main,_ADC_current_rms
  1159  000338  C0A1  F1D7         	movff	??_main+1,_ADC_current_rms+1
  1160                           
  1161                           ;Turn_counter.c: 910: ADCON0bits.CHS = 0;
  1162  00033C  94C2               	bcf	4034,2,c	;volatile
  1163  00033E  96C2               	bcf	4034,3,c	;volatile
  1164  000340  98C2               	bcf	4034,4,c	;volatile
  1165  000342  9AC2               	bcf	4034,5,c	;volatile
  1166  000344  9CC2               	bcf	4034,6,c	;volatile
  1167                           
  1168                           ;Turn_counter.c: 911: _delay((unsigned long)((10)*(40000000/4000000.0)));
  1169  000346  0E21               	movlw	33
  1170  000348                     u1997:
  1171  000348  2EE8               	decfsz	wreg,f,c
  1172  00034A  D7FE               	goto	u1997
  1173  00034C  F000               	nop	
  1174                           
  1175                           ;Turn_counter.c: 912: GO_nDONE = 1;
  1176  00034E  82C2               	bsf	4034,1,c	;volatile
  1177                           
  1178                           ;Turn_counter.c: 913: _delay((unsigned long)((20)*(40000000/4000000.0)));
  1179  000350  0E42               	movlw	66
  1180  000352                     u2007:
  1181  000352  2EE8               	decfsz	wreg,f,c
  1182  000354  D7FE               	goto	u2007
  1183  000356  D000               	nop2		;nop
  1184                           
  1185                           ;Turn_counter.c: 915: read_turns = (ADRESH<<8) | ADRESL;
  1186  000358  50C3               	movf	4035,w,c	;volatile
  1187  00035A  CFC4 F0A0          	movff	4036,??_main	;volatile
  1188  00035E  0100               	movlb	0	; () banked
  1189  000360  6BA1               	clrf	(??_main+1)& (0+255),b
  1190  000362  C0A0  F0A1         	movff	??_main,??_main+1
  1191  000366  6BA0               	clrf	??_main& (0+255),b
  1192  000368  11A0               	iorwf	??_main& (0+255),w,b
  1193  00036A  0101               	movlb	1	; () banked
  1194  00036C  6FE8               	movwf	_read_turns& (0+255),b
  1195  00036E  0100               	movlb	0	; () banked
  1196  000370  51A1               	movf	(??_main+1)& (0+255),w,b
  1197  000372  0101               	movlb	1	; () banked
  1198  000374  6FE9               	movwf	(_read_turns+1)& (0+255),b
  1199                           
  1200                           ; BSR set to: 1
  1201                           ;Turn_counter.c: 916: PIR1bits.ADIF = 0;
  1202  000376  9C9E               	bcf	3998,6,c	;volatile
  1203                           
  1204                           ; BSR set to: 1
  1205                           ;Turn_counter.c: 919: if(CHANGE_MOTOR == 1)
  1206  000378  0446               	decf	_CHANGE_MOTOR,w,c
  1207  00037A  1047               	iorwf	_CHANGE_MOTOR+1,w,c
  1208  00037C  E001 D0DD          	bnz	l3053
  1209                           
  1210                           ; BSR set to: 1
  1211                           ;Turn_counter.c: 920: {
  1212                           ;Turn_counter.c: 922: ADCON0bits.CHS = 0;
  1213  000380  94C2               	bcf	4034,2,c	;volatile
  1214  000382  96C2               	bcf	4034,3,c	;volatile
  1215  000384  98C2               	bcf	4034,4,c	;volatile
  1216  000386  9AC2               	bcf	4034,5,c	;volatile
  1217  000388  9CC2               	bcf	4034,6,c	;volatile
  1218                           
  1219                           ; BSR set to: 1
  1220                           ;Turn_counter.c: 923: _delay((unsigned long)((10)*(40000000/4000000.0)));
  1221  00038A  0E21               	movlw	33
  1222  00038C                     u2017:
  1223  00038C  2EE8               	decfsz	wreg,f,c
  1224  00038E  D7FE               	goto	u2017
  1225  000390  F000               	nop	
  1226                           
  1227                           ;Turn_counter.c: 924: GO_nDONE = 1;
  1228  000392  82C2               	bsf	4034,1,c	;volatile
  1229                           
  1230                           ;Turn_counter.c: 925: _delay((unsigned long)((20)*(40000000/4000000.0)));
  1231  000394  0E42               	movlw	66
  1232  000396                     u2027:
  1233  000396  2EE8               	decfsz	wreg,f,c
  1234  000398  D7FE               	goto	u2027
  1235  00039A  D000               	nop2		;nop
  1236                           
  1237                           ;Turn_counter.c: 927: GRAD_cutoff_null = (ADRESH<<8) | ADRESL;
  1238  00039C  50C3               	movf	4035,w,c	;volatile
  1239  00039E  CFC4 F0A0          	movff	4036,??_main	;volatile
  1240  0003A2  0100               	movlb	0	; () banked
  1241  0003A4  6BA1               	clrf	(??_main+1)& (0+255),b
  1242  0003A6  C0A0  F0A1         	movff	??_main,??_main+1
  1243  0003AA  6BA0               	clrf	??_main& (0+255),b
  1244  0003AC  11A0               	iorwf	??_main& (0+255),w,b
  1245  0003AE  0101               	movlb	1	; () banked
  1246  0003B0  6FD8               	movwf	_GRAD_cutoff_null& (0+255),b
  1247  0003B2  0100               	movlb	0	; () banked
  1248  0003B4  51A1               	movf	(??_main+1)& (0+255),w,b
  1249  0003B6  0101               	movlb	1	; () banked
  1250  0003B8  6FD9               	movwf	(_GRAD_cutoff_null+1)& (0+255),b
  1251                           
  1252                           ; BSR set to: 1
  1253                           ;Turn_counter.c: 928: PIR1bits.ADIF = 0;
  1254  0003BA  9C9E               	bcf	3998,6,c	;volatile
  1255                           
  1256                           ; BSR set to: 1
  1257                           ;Turn_counter.c: 931: GRAD_cutoff_null = (GRAD_cutoff_null - offset)*0.879;
  1258  0003BC  0E06               	movlw	6
  1259  0003BE  6E1F               	movwf	___ftmul@f2,c
  1260  0003C0  0E61               	movlw	97
  1261  0003C2  6E20               	movwf	___ftmul@f2+1,c
  1262  0003C4  0E3F               	movlw	63
  1263  0003C6  6E21               	movwf	___ftmul@f2+2,c
  1264  0003C8  C1E2  F0A0         	movff	_offset,??_main
  1265  0003CC  C1E3  F0A1         	movff	_offset+1,??_main+1
  1266  0003D0  0100               	movlb	0	; () banked
  1267  0003D2  1FA0               	comf	??_main& (0+255),f,b
  1268  0003D4  1FA1               	comf	(??_main+1)& (0+255),f,b
  1269  0003D6  4BA0               	infsnz	??_main& (0+255),f,b
  1270  0003D8  2BA1               	incf	(??_main+1)& (0+255),f,b
  1271  0003DA  0101               	movlb	1	; () banked
  1272  0003DC  51D8               	movf	_GRAD_cutoff_null& (0+255),w,b
  1273  0003DE  0100               	movlb	0	; () banked
  1274  0003E0  25A0               	addwf	??_main& (0+255),w,b
  1275  0003E2  6E19               	movwf	___lwtoft@c,c
  1276  0003E4  0101               	movlb	1	; () banked
  1277  0003E6  51D9               	movf	(_GRAD_cutoff_null+1)& (0+255),w,b
  1278  0003E8  0100               	movlb	0	; () banked
  1279  0003EA  21A1               	addwfc	(??_main+1)& (0+255),w,b
  1280  0003EC  6E1A               	movwf	___lwtoft@c+1,c
  1281  0003EE  EC4C  F00A         	call	___lwtoft	;wreg free
  1282  0003F2  C019  F01C         	movff	?___lwtoft,___ftmul@f1
  1283  0003F6  C01A  F01D         	movff	?___lwtoft+1,___ftmul@f1+1
  1284  0003FA  C01B  F01E         	movff	?___lwtoft+2,___ftmul@f1+2
  1285  0003FE  EC6A  F007         	call	___ftmul	;wreg free
  1286  000402  C01C  F02A         	movff	?___ftmul,___fttol@f1
  1287  000406  C01D  F02B         	movff	?___ftmul+1,___fttol@f1+1
  1288  00040A  C01E  F02C         	movff	?___ftmul+2,___fttol@f1+2
  1289  00040E  ECF5  F006         	call	___fttol	;wreg free
  1290  000412  C02A  F0A2         	movff	?___fttol,??_main+2
  1291  000416  C02B  F0A3         	movff	?___fttol+1,??_main+3
  1292  00041A  C02C  F0A4         	movff	?___fttol+2,??_main+4
  1293  00041E  C02D  F0A5         	movff	?___fttol+3,??_main+5
  1294  000422  C0A2  F1D8         	movff	??_main+2,_GRAD_cutoff_null
  1295  000426  C0A3  F1D9         	movff	??_main+3,_GRAD_cutoff_null+1
  1296                           
  1297                           ;Turn_counter.c: 932: if((GRAD_cutoff_null < 0)||(GRAD_cutoff_null > 4096))
  1298  00042A  0E01               	movlw	1
  1299  00042C  0101               	movlb	1	; () banked
  1300  00042E  5DD8               	subwf	_GRAD_cutoff_null& (0+255),w,b
  1301  000430  0E10               	movlw	16
  1302  000432  59D9               	subwfb	(_GRAD_cutoff_null+1)& (0+255),w,b
  1303  000434  E303               	bnc	l380
  1304                           
  1305                           ; BSR set to: 1
  1306                           ;Turn_counter.c: 933: {
  1307                           ;Turn_counter.c: 934: grad = 0;
  1308  000436  6BDF               	clrf	(_grad+1)& (0+255),b
  1309  000438  6BDE               	clrf	_grad& (0+255),b
  1310                           
  1311                           ;Turn_counter.c: 935: }
  1312  00043A  D004               	goto	l3039
  1313  00043C                     l380:
  1314                           
  1315                           ; BSR set to: 1
  1316                           ;Turn_counter.c: 936: else
  1317                           ;Turn_counter.c: 937: {
  1318                           ;Turn_counter.c: 938: grad = GRAD_cutoff_null;
  1319  00043C  C1D8  F1DE         	movff	_GRAD_cutoff_null,_grad
  1320  000440  C1D9  F1DF         	movff	_GRAD_cutoff_null+1,_grad+1
  1321  000444                     l3039:
  1322                           
  1323                           ; BSR set to: 1
  1324                           ;Turn_counter.c: 939: }
  1325                           ;Turn_counter.c: 940: turns_percent = grad/((num_of_turns * 360)/100);
  1326  000444  6A14               	clrf	___lwdiv@divisor+1,c
  1327  000446  0E64               	movlw	100
  1328  000448  6E13               	movwf	___lwdiv@divisor,c
  1329  00044A  0E68               	movlw	104
  1330  00044C  0100               	movlb	0	; () banked
  1331  00044E  6FA0               	movwf	??_main& (0+255),b
  1332  000450  0E01               	movlw	1
  1333  000452  6FA1               	movwf	(??_main+1)& (0+255),b
  1334  000454  51A0               	movf	??_main& (0+255),w,b
  1335  000456  0101               	movlb	1	; () banked
  1336  000458  03F2               	mulwf	_num_of_turns& (0+255),b
  1337  00045A  CFF3 F0A2          	movff	prodl,??_main+2
  1338  00045E  CFF4 F0A3          	movff	prodh,??_main+3
  1339  000462  03F3               	mulwf	(_num_of_turns+1)& (0+255),b
  1340  000464  50F3               	movf	243,w,c
  1341  000466  0100               	movlb	0	; () banked
  1342  000468  27A3               	addwf	(??_main+3)& (0+255),f,b
  1343  00046A  51A1               	movf	(??_main+1)& (0+255),w,b
  1344  00046C  0101               	movlb	1	; () banked
  1345  00046E  03F2               	mulwf	_num_of_turns& (0+255),b
  1346  000470  0100               	movlb	0	; () banked
  1347  000472  50F3               	movf	243,w,c
  1348  000474  27A3               	addwf	(??_main+3)& (0+255),f,b
  1349  000476  C0A2  F011         	movff	??_main+2,___lwdiv@dividend
  1350  00047A  C0A3  F012         	movff	??_main+3,___lwdiv@dividend+1
  1351  00047E  ECA2  F009         	call	___lwdiv	;wreg free
  1352  000482  C011  F1C8         	movff	?___lwdiv,_main$2017
  1353  000486  C012  F1C9         	movff	?___lwdiv+1,_main$2017+1
  1354                           
  1355                           ;Turn_counter.c: 939: }
  1356                           ;Turn_counter.c: 940: turns_percent = grad/((num_of_turns * 360)/100);
  1357  00048A  C1DE  F011         	movff	_grad,___lwdiv@dividend
  1358  00048E  C1DF  F012         	movff	_grad+1,___lwdiv@dividend+1
  1359  000492  C1C8  F013         	movff	_main$2017,___lwdiv@divisor
  1360  000496  C1C9  F014         	movff	_main$2017+1,___lwdiv@divisor+1
  1361  00049A  ECA2  F009         	call	___lwdiv	;wreg free
  1362  00049E  C011  F1EC         	movff	?___lwdiv,_turns_percent
  1363  0004A2  C012  F1ED         	movff	?___lwdiv+1,_turns_percent+1
  1364                           
  1365                           ;Turn_counter.c: 941: turns_percent_press = (grad*10)/((num_of_turns * 360)/100);
  1366  0004A6  6A14               	clrf	___lwdiv@divisor+1,c
  1367  0004A8  0E64               	movlw	100
  1368  0004AA  6E13               	movwf	___lwdiv@divisor,c
  1369  0004AC  0E68               	movlw	104
  1370  0004AE  0100               	movlb	0	; () banked
  1371  0004B0  6FA0               	movwf	??_main& (0+255),b
  1372  0004B2  0E01               	movlw	1
  1373  0004B4  6FA1               	movwf	(??_main+1)& (0+255),b
  1374  0004B6  51A0               	movf	??_main& (0+255),w,b
  1375  0004B8  0101               	movlb	1	; () banked
  1376  0004BA  03F2               	mulwf	_num_of_turns& (0+255),b
  1377  0004BC  CFF3 F0A2          	movff	prodl,??_main+2
  1378  0004C0  CFF4 F0A3          	movff	prodh,??_main+3
  1379  0004C4  03F3               	mulwf	(_num_of_turns+1)& (0+255),b
  1380  0004C6  50F3               	movf	243,w,c
  1381  0004C8  0100               	movlb	0	; () banked
  1382  0004CA  27A3               	addwf	(??_main+3)& (0+255),f,b
  1383  0004CC  51A1               	movf	(??_main+1)& (0+255),w,b
  1384  0004CE  0101               	movlb	1	; () banked
  1385  0004D0  03F2               	mulwf	_num_of_turns& (0+255),b
  1386  0004D2  0100               	movlb	0	; () banked
  1387  0004D4  50F3               	movf	243,w,c
  1388  0004D6  27A3               	addwf	(??_main+3)& (0+255),f,b
  1389  0004D8  C0A2  F011         	movff	??_main+2,___lwdiv@dividend
  1390  0004DC  C0A3  F012         	movff	??_main+3,___lwdiv@dividend+1
  1391  0004E0  ECA2  F009         	call	___lwdiv	;wreg free
  1392  0004E4  C011  F1C8         	movff	?___lwdiv,_main$2017
  1393  0004E8  C012  F1C9         	movff	?___lwdiv+1,_main$2017+1
  1394                           
  1395                           ;Turn_counter.c: 941: turns_percent_press = (grad*10)/((num_of_turns * 360)/100);
  1396  0004EC  0E0A               	movlw	10
  1397  0004EE  0101               	movlb	1	; () banked
  1398  0004F0  03DE               	mulwf	_grad& (0+255),b
  1399  0004F2  CFF3 F0A0          	movff	prodl,??_main
  1400  0004F6  CFF4 F0A1          	movff	prodh,??_main+1
  1401  0004FA  03DF               	mulwf	(_grad+1)& (0+255),b
  1402  0004FC  50F3               	movf	243,w,c
  1403  0004FE  0100               	movlb	0	; () banked
  1404  000500  27A1               	addwf	(??_main+1)& (0+255),f,b
  1405  000502  C0A0  F011         	movff	??_main,___lwdiv@dividend
  1406  000506  C0A1  F012         	movff	??_main+1,___lwdiv@dividend+1
  1407  00050A  C1C8  F013         	movff	_main$2017,___lwdiv@divisor
  1408  00050E  C1C9  F014         	movff	_main$2017+1,___lwdiv@divisor+1
  1409  000512  ECA2  F009         	call	___lwdiv	;wreg free
  1410  000516  C011  F1EE         	movff	?___lwdiv,_turns_percent_press
  1411  00051A  C012  F1EF         	movff	?___lwdiv+1,_turns_percent_press+1
  1412                           
  1413                           ;Turn_counter.c: 943: if(ADC_current_rms > current_max)
  1414  00051E  0101               	movlb	1	; () banked
  1415  000520  51D6               	movf	_ADC_current_rms& (0+255),w,b
  1416  000522  5DF0               	subwf	_current_max& (0+255),w,b
  1417  000524  51D7               	movf	(_ADC_current_rms+1)& (0+255),w,b
  1418  000526  59F1               	subwfb	(_current_max+1)& (0+255),w,b
  1419  000528  E203               	bc	l3051
  1420                           
  1421                           ; BSR set to: 1
  1422                           ;Turn_counter.c: 944: overcurrent = 1;
  1423  00052A  6BE5               	clrf	(_overcurrent+1)& (0+255),b
  1424  00052C  0E01               	movlw	1
  1425  00052E  D003               	goto	L4
  1426  000530                     l3051:
  1427                           
  1428                           ; BSR set to: 1
  1429                           ;Turn_counter.c: 945: else
  1430                           ;Turn_counter.c: 946: overcurrent = 0;
  1431  000530  0E00               	movlw	0
  1432  000532  0101               	movlb	1	; () banked
  1433  000534  6BE5               	clrf	(_overcurrent+1)& (0+255),b
  1434  000536                     L4:
  1435  000536  0101               	movlb	1	; () banked
  1436  000538  6FE4               	movwf	_overcurrent& (0+255),b
  1437  00053A                     l3053:
  1438                           
  1439                           ; BSR set to: 1
  1440                           ;Turn_counter.c: 947: }
  1441                           ;Turn_counter.c: 948: if(CHANGE_MOTOR == 2)
  1442  00053A  5046               	movf	_CHANGE_MOTOR,w,c
  1443  00053C  0A02               	xorlw	2
  1444  00053E  1047               	iorwf	_CHANGE_MOTOR+1,w,c
  1445  000540  E001 D119          	bnz	l3121
  1446                           
  1447                           ; BSR set to: 1
  1448                           ;Turn_counter.c: 949: {
  1449                           ;Turn_counter.c: 952: if(SET_MIN)
  1450  000544  0101               	movlb	1	; () banked
  1451  000546  51DD               	movf	(_SET_MIN+1)& (0+255),w,b
  1452  000548  11DC               	iorwf	_SET_MIN& (0+255),w,b
  1453  00054A  E040               	bz	l3077
  1454                           
  1455                           ; BSR set to: 1
  1456                           ;Turn_counter.c: 953: {
  1457                           ;Turn_counter.c: 955: ADCON0bits.CHS = 0;
  1458  00054C  94C2               	bcf	4034,2,c	;volatile
  1459  00054E  96C2               	bcf	4034,3,c	;volatile
  1460  000550  98C2               	bcf	4034,4,c	;volatile
  1461  000552  9AC2               	bcf	4034,5,c	;volatile
  1462  000554  9CC2               	bcf	4034,6,c	;volatile
  1463                           
  1464                           ; BSR set to: 1
  1465                           ;Turn_counter.c: 956: _delay((unsigned long)((10)*(40000000/4000000.0)));
  1466  000556  0E21               	movlw	33
  1467  000558                     u2037:
  1468  000558  2EE8               	decfsz	wreg,f,c
  1469  00055A  D7FE               	goto	u2037
  1470  00055C  F000               	nop	
  1471                           
  1472                           ;Turn_counter.c: 957: GO_nDONE = 1;
  1473  00055E  82C2               	bsf	4034,1,c	;volatile
  1474                           
  1475                           ;Turn_counter.c: 958: _delay((unsigned long)((20)*(40000000/4000000.0)));
  1476  000560  0E42               	movlw	66
  1477  000562                     u2047:
  1478  000562  2EE8               	decfsz	wreg,f,c
  1479  000564  D7FE               	goto	u2047
  1480  000566  D000               	nop2		;nop
  1481                           
  1482                           ;Turn_counter.c: 960: POT_MIN = (ADRESH<<8) | ADRESL;
  1483  000568  50C3               	movf	4035,w,c	;volatile
  1484  00056A  CFC4 F0A0          	movff	4036,??_main	;volatile
  1485  00056E  0100               	movlb	0	; () banked
  1486  000570  6BA1               	clrf	(??_main+1)& (0+255),b
  1487  000572  C0A0  F0A1         	movff	??_main,??_main+1
  1488  000576  6BA0               	clrf	??_main& (0+255),b
  1489  000578  11A0               	iorwf	??_main& (0+255),w,b
  1490  00057A  6E4A               	movwf	_POT_MIN,c
  1491  00057C  51A1               	movf	(??_main+1)& (0+255),w,b
  1492  00057E  6E4B               	movwf	_POT_MIN+1,c
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;Turn_counter.c: 961: PIR1bits.ADIF = 0;
  1496  000580  9C9E               	bcf	3998,6,c	;volatile
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;Turn_counter.c: 963: EEPROM_WrByte(9,POT_MIN & 0x00ff);
  1500  000582  C04A  F011         	movff	_POT_MIN,EEPROM_WrByte@bData
  1501  000586  0E09               	movlw	9
  1502  000588  ECC7  F009         	call	_EEPROM_WrByte
  1503                           
  1504                           ;Turn_counter.c: 964: _delay((unsigned long)((5)*(40000000/4000.0)));
  1505  00058C  0E41               	movlw	65
  1506  00058E  0100               	movlb	0	; () banked
  1507  000590  6FA0               	movwf	??_main& (0+255),b
  1508  000592  0EEE               	movlw	238
  1509  000594                     u2057:
  1510  000594  2EE8               	decfsz	wreg,f,c
  1511  000596  D7FE               	goto	u2057
  1512  000598  2FA0               	decfsz	??_main& (0+255),f,b
  1513  00059A  D7FC               	goto	u2057
  1514  00059C  D000               	nop2	
  1515                           
  1516                           ;Turn_counter.c: 965: EEPROM_WrByte(10,POT_MIN >> 8);
  1517  00059E  C04B  F0A0         	movff	_POT_MIN+1,??_main
  1518  0005A2  C0A0  F0A1         	movff	??_main,??_main+1
  1519  0005A6  0100               	movlb	0	; () banked
  1520  0005A8  6BA2               	clrf	(??_main+2)& (0+255),b
  1521  0005AA  51A1               	movf	(??_main+1)& (0+255),w,b
  1522  0005AC  6E11               	movwf	EEPROM_WrByte@bData,c
  1523  0005AE  0E0A               	movlw	10
  1524  0005B0  ECC7  F009         	call	_EEPROM_WrByte
  1525                           
  1526                           ;Turn_counter.c: 966: _delay((unsigned long)((5)*(40000000/4000.0)));
  1527  0005B4  0E41               	movlw	65
  1528  0005B6  0100               	movlb	0	; () banked
  1529  0005B8  6FA0               	movwf	??_main& (0+255),b
  1530  0005BA  0EEE               	movlw	238
  1531  0005BC                     u2067:
  1532  0005BC  2EE8               	decfsz	wreg,f,c
  1533  0005BE  D7FE               	goto	u2067
  1534  0005C0  2FA0               	decfsz	??_main& (0+255),f,b
  1535  0005C2  D7FC               	goto	u2067
  1536  0005C4  D000               	nop2	
  1537                           
  1538                           ;Turn_counter.c: 967: SET_MIN = 0;
  1539  0005C6  0101               	movlb	1	; () banked
  1540  0005C8  6BDD               	clrf	(_SET_MIN+1)& (0+255),b
  1541  0005CA  6BDC               	clrf	_SET_MIN& (0+255),b
  1542  0005CC                     l3077:
  1543                           
  1544                           ; BSR set to: 1
  1545                           ;Turn_counter.c: 968: }
  1546                           ;Turn_counter.c: 970: if (SET_MAX)
  1547  0005CC  0101               	movlb	1	; () banked
  1548  0005CE  51DB               	movf	(_SET_MAX+1)& (0+255),w,b
  1549  0005D0  11DA               	iorwf	_SET_MAX& (0+255),w,b
  1550  0005D2  E040               	bz	l3099
  1551                           
  1552                           ; BSR set to: 1
  1553                           ;Turn_counter.c: 971: {
  1554                           ;Turn_counter.c: 972: ADCON0bits.CHS = 0;
  1555  0005D4  94C2               	bcf	4034,2,c	;volatile
  1556  0005D6  96C2               	bcf	4034,3,c	;volatile
  1557  0005D8  98C2               	bcf	4034,4,c	;volatile
  1558  0005DA  9AC2               	bcf	4034,5,c	;volatile
  1559  0005DC  9CC2               	bcf	4034,6,c	;volatile
  1560                           
  1561                           ; BSR set to: 1
  1562                           ;Turn_counter.c: 973: _delay((unsigned long)((10)*(40000000/4000000.0)));
  1563  0005DE  0E21               	movlw	33
  1564  0005E0                     u2077:
  1565  0005E0  2EE8               	decfsz	wreg,f,c
  1566  0005E2  D7FE               	goto	u2077
  1567  0005E4  F000               	nop	
  1568                           
  1569                           ;Turn_counter.c: 974: GO_nDONE = 1;
  1570  0005E6  82C2               	bsf	4034,1,c	;volatile
  1571                           
  1572                           ;Turn_counter.c: 975: _delay((unsigned long)((20)*(40000000/4000000.0)));
  1573  0005E8  0E42               	movlw	66
  1574  0005EA                     u2087:
  1575  0005EA  2EE8               	decfsz	wreg,f,c
  1576  0005EC  D7FE               	goto	u2087
  1577  0005EE  D000               	nop2		;nop
  1578                           
  1579                           ;Turn_counter.c: 977: POT_MAX = (ADRESH<<8) | ADRESL;
  1580  0005F0  50C3               	movf	4035,w,c	;volatile
  1581  0005F2  CFC4 F0A0          	movff	4036,??_main	;volatile
  1582  0005F6  0100               	movlb	0	; () banked
  1583  0005F8  6BA1               	clrf	(??_main+1)& (0+255),b
  1584  0005FA  C0A0  F0A1         	movff	??_main,??_main+1
  1585  0005FE  6BA0               	clrf	??_main& (0+255),b
  1586  000600  11A0               	iorwf	??_main& (0+255),w,b
  1587  000602  6E48               	movwf	_POT_MAX,c
  1588  000604  51A1               	movf	(??_main+1)& (0+255),w,b
  1589  000606  6E49               	movwf	_POT_MAX+1,c
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;Turn_counter.c: 978: PIR1bits.ADIF = 0;
  1593  000608  9C9E               	bcf	3998,6,c	;volatile
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;Turn_counter.c: 980: EEPROM_WrByte(11,POT_MAX & 0x00ff);
  1597  00060A  C048  F011         	movff	_POT_MAX,EEPROM_WrByte@bData
  1598  00060E  0E0B               	movlw	11
  1599  000610  ECC7  F009         	call	_EEPROM_WrByte
  1600                           
  1601                           ;Turn_counter.c: 981: _delay((unsigned long)((5)*(40000000/4000.0)));
  1602  000614  0E41               	movlw	65
  1603  000616  0100               	movlb	0	; () banked
  1604  000618  6FA0               	movwf	??_main& (0+255),b
  1605  00061A  0EEE               	movlw	238
  1606  00061C                     u2097:
  1607  00061C  2EE8               	decfsz	wreg,f,c
  1608  00061E  D7FE               	goto	u2097
  1609  000620  2FA0               	decfsz	??_main& (0+255),f,b
  1610  000622  D7FC               	goto	u2097
  1611  000624  D000               	nop2	
  1612                           
  1613                           ;Turn_counter.c: 982: EEPROM_WrByte(12,POT_MAX >> 8);
  1614  000626  C049  F0A0         	movff	_POT_MAX+1,??_main
  1615  00062A  C0A0  F0A1         	movff	??_main,??_main+1
  1616  00062E  0100               	movlb	0	; () banked
  1617  000630  6BA2               	clrf	(??_main+2)& (0+255),b
  1618  000632  51A1               	movf	(??_main+1)& (0+255),w,b
  1619  000634  6E11               	movwf	EEPROM_WrByte@bData,c
  1620  000636  0E0C               	movlw	12
  1621  000638  ECC7  F009         	call	_EEPROM_WrByte
  1622                           
  1623                           ;Turn_counter.c: 983: _delay((unsigned long)((5)*(40000000/4000.0)));
  1624  00063C  0E41               	movlw	65
  1625  00063E  0100               	movlb	0	; () banked
  1626  000640  6FA0               	movwf	??_main& (0+255),b
  1627  000642  0EEE               	movlw	238
  1628  000644                     u2107:
  1629  000644  2EE8               	decfsz	wreg,f,c
  1630  000646  D7FE               	goto	u2107
  1631  000648  2FA0               	decfsz	??_main& (0+255),f,b
  1632  00064A  D7FC               	goto	u2107
  1633  00064C  D000               	nop2	
  1634                           
  1635                           ;Turn_counter.c: 984: SET_MAX = 0;
  1636  00064E  0101               	movlb	1	; () banked
  1637  000650  6BDB               	clrf	(_SET_MAX+1)& (0+255),b
  1638  000652  6BDA               	clrf	_SET_MAX& (0+255),b
  1639  000654                     l3099:
  1640                           
  1641                           ; BSR set to: 1
  1642                           ;Turn_counter.c: 985: }
  1643                           ;Turn_counter.c: 986: grad_step = (POT_MAX-POT_MIN)/90;
  1644  000654  C04A  F0A0         	movff	_POT_MIN,??_main
  1645  000658  C04B  F0A1         	movff	_POT_MIN+1,??_main+1
  1646  00065C  0100               	movlb	0	; () banked
  1647  00065E  1FA0               	comf	??_main& (0+255),f,b
  1648  000660  1FA1               	comf	(??_main+1)& (0+255),f,b
  1649  000662  4BA0               	infsnz	??_main& (0+255),f,b
  1650  000664  2BA1               	incf	(??_main+1)& (0+255),f,b
  1651  000666  5048               	movf	_POT_MAX,w,c
  1652  000668  25A0               	addwf	??_main& (0+255),w,b
  1653  00066A  6E11               	movwf	___lwdiv@dividend,c
  1654  00066C  5049               	movf	_POT_MAX+1,w,c
  1655  00066E  21A1               	addwfc	(??_main+1)& (0+255),w,b
  1656  000670  6E12               	movwf	___lwdiv@dividend+1,c
  1657  000672  6A14               	clrf	___lwdiv@divisor+1,c
  1658  000674  0E5A               	movlw	90
  1659  000676  6E13               	movwf	___lwdiv@divisor,c
  1660  000678  ECA2  F009         	call	___lwdiv	;wreg free
  1661  00067C  C011  F1E0         	movff	?___lwdiv,_grad_step
  1662  000680  C012  F1E1         	movff	?___lwdiv+1,_grad_step+1
  1663                           
  1664                           ;Turn_counter.c: 987: percent_step = (POT_MAX-POT_MIN)/100;
  1665  000684  C04A  F0A0         	movff	_POT_MIN,??_main
  1666  000688  C04B  F0A1         	movff	_POT_MIN+1,??_main+1
  1667  00068C  0100               	movlb	0	; () banked
  1668  00068E  1FA0               	comf	??_main& (0+255),f,b
  1669  000690  1FA1               	comf	(??_main+1)& (0+255),f,b
  1670  000692  4BA0               	infsnz	??_main& (0+255),f,b
  1671  000694  2BA1               	incf	(??_main+1)& (0+255),f,b
  1672  000696  5048               	movf	_POT_MAX,w,c
  1673  000698  25A0               	addwf	??_main& (0+255),w,b
  1674  00069A  6E11               	movwf	___lwdiv@dividend,c
  1675  00069C  5049               	movf	_POT_MAX+1,w,c
  1676  00069E  21A1               	addwfc	(??_main+1)& (0+255),w,b
  1677  0006A0  6E12               	movwf	___lwdiv@dividend+1,c
  1678  0006A2  6A14               	clrf	___lwdiv@divisor+1,c
  1679  0006A4  0E64               	movlw	100
  1680  0006A6  6E13               	movwf	___lwdiv@divisor,c
  1681  0006A8  ECA2  F009         	call	___lwdiv	;wreg free
  1682  0006AC  C011  F1E6         	movff	?___lwdiv,_percent_step
  1683  0006B0  C012  F1E7         	movff	?___lwdiv+1,_percent_step+1
  1684                           
  1685                           ;Turn_counter.c: 990: ADCON0bits.CHS = 0;
  1686  0006B4  94C2               	bcf	4034,2,c	;volatile
  1687  0006B6  96C2               	bcf	4034,3,c	;volatile
  1688  0006B8  98C2               	bcf	4034,4,c	;volatile
  1689  0006BA  9AC2               	bcf	4034,5,c	;volatile
  1690  0006BC  9CC2               	bcf	4034,6,c	;volatile
  1691                           
  1692                           ;Turn_counter.c: 991: _delay((unsigned long)((10)*(40000000/4000000.0)));
  1693  0006BE  0E21               	movlw	33
  1694  0006C0                     u2117:
  1695  0006C0  2EE8               	decfsz	wreg,f,c
  1696  0006C2  D7FE               	goto	u2117
  1697  0006C4  F000               	nop	
  1698                           
  1699                           ;Turn_counter.c: 992: GO_nDONE = 1;
  1700  0006C6  82C2               	bsf	4034,1,c	;volatile
  1701                           
  1702                           ;Turn_counter.c: 993: _delay((unsigned long)((20)*(40000000/4000000.0)));
  1703  0006C8  0E42               	movlw	66
  1704  0006CA                     u2127:
  1705  0006CA  2EE8               	decfsz	wreg,f,c
  1706  0006CC  D7FE               	goto	u2127
  1707  0006CE  D000               	nop2		;nop
  1708                           
  1709                           ;Turn_counter.c: 995: ADC_RES_BUF = (ADRESH<<8) | ADRESL;
  1710  0006D0  50C3               	movf	4035,w,c	;volatile
  1711  0006D2  CFC4 F0A0          	movff	4036,??_main	;volatile
  1712  0006D6  0100               	movlb	0	; () banked
  1713  0006D8  6BA1               	clrf	(??_main+1)& (0+255),b
  1714  0006DA  C0A0  F0A1         	movff	??_main,??_main+1
  1715  0006DE  6BA0               	clrf	??_main& (0+255),b
  1716  0006E0  11A0               	iorwf	??_main& (0+255),w,b
  1717  0006E2  0101               	movlb	1	; () banked
  1718  0006E4  6FD0               	movwf	_ADC_RES_BUF& (0+255),b
  1719  0006E6  0100               	movlb	0	; () banked
  1720  0006E8  51A1               	movf	(??_main+1)& (0+255),w,b
  1721  0006EA  0101               	movlb	1	; () banked
  1722  0006EC  6FD1               	movwf	(_ADC_RES_BUF+1)& (0+255),b
  1723                           
  1724                           ; BSR set to: 1
  1725                           ;Turn_counter.c: 996: PIR1bits.ADIF = 0;
  1726  0006EE  9C9E               	bcf	3998,6,c	;volatile
  1727                           
  1728                           ; BSR set to: 1
  1729                           ;Turn_counter.c: 998: if(ADC_RES_BUF < POT_MIN)
  1730  0006F0  504A               	movf	_POT_MIN,w,c
  1731  0006F2  5DD0               	subwf	_ADC_RES_BUF& (0+255),w,b
  1732  0006F4  504B               	movf	_POT_MIN+1,w,c
  1733  0006F6  59D1               	subwfb	(_ADC_RES_BUF+1)& (0+255),w,b
  1734  0006F8  E204               	bc	l3119
  1735                           
  1736                           ; BSR set to: 1
  1737                           ;Turn_counter.c: 999: {
  1738                           ;Turn_counter.c: 1000: ADC_RES_BUF = POT_MIN;
  1739  0006FA  C04A  F1D0         	movff	_POT_MIN,_ADC_RES_BUF
  1740  0006FE  C04B  F1D1         	movff	_POT_MIN+1,_ADC_RES_BUF+1
  1741  000702                     l3119:
  1742                           
  1743                           ; BSR set to: 1
  1744                           ;Turn_counter.c: 1001: }
  1745                           ;Turn_counter.c: 1003: grad = (ADC_RES_BUF-POT_MIN)/grad_step;
  1746  000702  C04A  F0A0         	movff	_POT_MIN,??_main
  1747  000706  C04B  F0A1         	movff	_POT_MIN+1,??_main+1
  1748  00070A  0100               	movlb	0	; () banked
  1749  00070C  1FA0               	comf	??_main& (0+255),f,b
  1750  00070E  1FA1               	comf	(??_main+1)& (0+255),f,b
  1751  000710  4BA0               	infsnz	??_main& (0+255),f,b
  1752  000712  2BA1               	incf	(??_main+1)& (0+255),f,b
  1753  000714  0101               	movlb	1	; () banked
  1754  000716  51D0               	movf	_ADC_RES_BUF& (0+255),w,b
  1755  000718  0100               	movlb	0	; () banked
  1756  00071A  25A0               	addwf	??_main& (0+255),w,b
  1757  00071C  6E11               	movwf	___lwdiv@dividend,c
  1758  00071E  0101               	movlb	1	; () banked
  1759  000720  51D1               	movf	(_ADC_RES_BUF+1)& (0+255),w,b
  1760  000722  0100               	movlb	0	; () banked
  1761  000724  21A1               	addwfc	(??_main+1)& (0+255),w,b
  1762  000726  6E12               	movwf	___lwdiv@dividend+1,c
  1763  000728  C1E0  F013         	movff	_grad_step,___lwdiv@divisor
  1764  00072C  C1E1  F014         	movff	_grad_step+1,___lwdiv@divisor+1
  1765  000730  ECA2  F009         	call	___lwdiv	;wreg free
  1766  000734  C011  F1DE         	movff	?___lwdiv,_grad
  1767  000738  C012  F1DF         	movff	?___lwdiv+1,_grad+1
  1768                           
  1769                           ;Turn_counter.c: 1004: turns_percent = (ADC_RES_BUF-POT_MIN)/percent_step;
  1770  00073C  C04A  F0A0         	movff	_POT_MIN,??_main
  1771  000740  C04B  F0A1         	movff	_POT_MIN+1,??_main+1
  1772  000744  0100               	movlb	0	; () banked
  1773  000746  1FA0               	comf	??_main& (0+255),f,b
  1774  000748  1FA1               	comf	(??_main+1)& (0+255),f,b
  1775  00074A  4BA0               	infsnz	??_main& (0+255),f,b
  1776  00074C  2BA1               	incf	(??_main+1)& (0+255),f,b
  1777  00074E  0101               	movlb	1	; () banked
  1778  000750  51D0               	movf	_ADC_RES_BUF& (0+255),w,b
  1779  000752  0100               	movlb	0	; () banked
  1780  000754  25A0               	addwf	??_main& (0+255),w,b
  1781  000756  6E11               	movwf	___lwdiv@dividend,c
  1782  000758  0101               	movlb	1	; () banked
  1783  00075A  51D1               	movf	(_ADC_RES_BUF+1)& (0+255),w,b
  1784  00075C  0100               	movlb	0	; () banked
  1785  00075E  21A1               	addwfc	(??_main+1)& (0+255),w,b
  1786  000760  6E12               	movwf	___lwdiv@dividend+1,c
  1787  000762  C1E6  F013         	movff	_percent_step,___lwdiv@divisor
  1788  000766  C1E7  F014         	movff	_percent_step+1,___lwdiv@divisor+1
  1789  00076A  ECA2  F009         	call	___lwdiv	;wreg free
  1790  00076E  C011  F1EC         	movff	?___lwdiv,_turns_percent
  1791  000772  C012  F1ED         	movff	?___lwdiv+1,_turns_percent+1
  1792  000776                     l3121:
  1793                           
  1794                           ;Turn_counter.c: 1005: }
  1795                           ;Turn_counter.c: 1007: modbus_rx_sm();
  1796  000776  EC68  F006         	call	_modbus_rx_sm	;wreg free
  1797                           
  1798                           ;Turn_counter.c: 1008: modbus_poll();
  1799  00077A  ECDA  F007         	call	_modbus_poll	;wreg free
  1800                           
  1801                           ;Turn_counter.c: 1010: led_cnt++;
  1802  00077E  0101               	movlb	1	; () banked
  1803  000780  4BF6               	infsnz	_led_cnt& (0+255),f,b
  1804  000782  2BF7               	incf	(_led_cnt+1)& (0+255),f,b
  1805                           
  1806                           ; BSR set to: 1
  1807                           ;Turn_counter.c: 1011: if(led_cnt > 5)
  1808  000784  0E06               	movlw	6
  1809  000786  5DF6               	subwf	_led_cnt& (0+255),w,b
  1810  000788  0E00               	movlw	0
  1811  00078A  59F7               	subwfb	(_led_cnt+1)& (0+255),w,b
  1812  00078C  E304               	bnc	l3135
  1813                           
  1814                           ; BSR set to: 1
  1815                           ;Turn_counter.c: 1012: {
  1816                           ;Turn_counter.c: 1013: led_cnt = 0;
  1817  00078E  6BF7               	clrf	(_led_cnt+1)& (0+255),b
  1818  000790  6BF6               	clrf	_led_cnt& (0+255),b
  1819                           
  1820                           ; BSR set to: 1
  1821                           ;Turn_counter.c: 1014: LATCbits.LATC4 = 0;
  1822  000792  988B               	bcf	3979,4,c	;volatile
  1823                           
  1824                           ; BSR set to: 1
  1825                           ;Turn_counter.c: 1015: LATCbits.LATC5 = 0;
  1826  000794  9A8B               	bcf	3979,5,c	;volatile
  1827  000796                     l3135:
  1828                           
  1829                           ; BSR set to: 1
  1830                           ;Turn_counter.c: 1016: }
  1831                           ;Turn_counter.c: 1018: if (set_zero)
  1832  000796  0101               	movlb	1	; () banked
  1833  000798  51EB               	movf	(_set_zero+1)& (0+255),w,b
  1834  00079A  11EA               	iorwf	_set_zero& (0+255),w,b
  1835  00079C  E101 D4C5          	bz	l2949
  1836                           
  1837                           ; BSR set to: 1
  1838                           ;Turn_counter.c: 1019: {
  1839                           ;Turn_counter.c: 1020: set_zero = 0;
  1840  0007A0  6BEB               	clrf	(_set_zero+1)& (0+255),b
  1841  0007A2  6BEA               	clrf	_set_zero& (0+255),b
  1842                           
  1843                           ; BSR set to: 1
  1844                           ;Turn_counter.c: 1021: ADCON0bits.CHS = 0;
  1845  0007A4  94C2               	bcf	4034,2,c	;volatile
  1846  0007A6  96C2               	bcf	4034,3,c	;volatile
  1847  0007A8  98C2               	bcf	4034,4,c	;volatile
  1848  0007AA  9AC2               	bcf	4034,5,c	;volatile
  1849  0007AC  9CC2               	bcf	4034,6,c	;volatile
  1850                           
  1851                           ; BSR set to: 1
  1852                           ;Turn_counter.c: 1022: _delay((unsigned long)((10)*(40000000/4000000.0)));
  1853  0007AE  0E21               	movlw	33
  1854  0007B0                     u2137:
  1855  0007B0  2EE8               	decfsz	wreg,f,c
  1856  0007B2  D7FE               	goto	u2137
  1857  0007B4  F000               	nop	
  1858                           
  1859                           ;Turn_counter.c: 1023: GO_nDONE = 1;
  1860  0007B6  82C2               	bsf	4034,1,c	;volatile
  1861                           
  1862                           ;Turn_counter.c: 1024: _delay((unsigned long)((100)*(40000000/4000000.0)));
  1863  0007B8  0EFA               	movlw	250
  1864  0007BA                     u2147:
  1865  0007BA  F000               	nop	
  1866  0007BC  2EE8               	decfsz	wreg,f,c
  1867  0007BE  D7FD               	goto	u2147
  1868                           
  1869                           ;Turn_counter.c: 1026: offset = (ADRESH<<8) | ADRESL;
  1870  0007C0  50C3               	movf	4035,w,c	;volatile
  1871  0007C2  CFC4 F0A0          	movff	4036,??_main	;volatile
  1872  0007C6  0100               	movlb	0	; () banked
  1873  0007C8  6BA1               	clrf	(??_main+1)& (0+255),b
  1874  0007CA  C0A0  F0A1         	movff	??_main,??_main+1
  1875  0007CE  6BA0               	clrf	??_main& (0+255),b
  1876  0007D0  11A0               	iorwf	??_main& (0+255),w,b
  1877  0007D2  0101               	movlb	1	; () banked
  1878  0007D4  6FE2               	movwf	_offset& (0+255),b
  1879  0007D6  0100               	movlb	0	; () banked
  1880  0007D8  51A1               	movf	(??_main+1)& (0+255),w,b
  1881  0007DA  0101               	movlb	1	; () banked
  1882  0007DC  6FE3               	movwf	(_offset+1)& (0+255),b
  1883                           
  1884                           ; BSR set to: 1
  1885                           ;Turn_counter.c: 1027: PIR1bits.ADIF = 0;
  1886  0007DE  9C9E               	bcf	3998,6,c	;volatile
  1887                           
  1888                           ; BSR set to: 1
  1889                           ;Turn_counter.c: 1029: EEPROM_WrByte(7,(unsigned char)offset & 0x00ff);
  1890  0007E0  C1E2  F011         	movff	_offset,EEPROM_WrByte@bData
  1891  0007E4  0E07               	movlw	7
  1892  0007E6  ECC7  F009         	call	_EEPROM_WrByte
  1893                           
  1894                           ;Turn_counter.c: 1030: _delay((unsigned long)((5)*(40000000/4000.0)));
  1895  0007EA  0E41               	movlw	65
  1896  0007EC  0100               	movlb	0	; () banked
  1897  0007EE  6FA0               	movwf	??_main& (0+255),b
  1898  0007F0  0EEE               	movlw	238
  1899  0007F2                     u2157:
  1900  0007F2  2EE8               	decfsz	wreg,f,c
  1901  0007F4  D7FE               	goto	u2157
  1902  0007F6  2FA0               	decfsz	??_main& (0+255),f,b
  1903  0007F8  D7FC               	goto	u2157
  1904  0007FA  D000               	nop2	
  1905                           
  1906                           ;Turn_counter.c: 1031: EEPROM_WrByte(8,(unsigned char)offset >> 8);
  1907  0007FC  6A11               	clrf	EEPROM_WrByte@bData,c
  1908  0007FE  0E08               	movlw	8
  1909  000800  ECC7  F009         	call	_EEPROM_WrByte
  1910                           
  1911                           ;Turn_counter.c: 1032: _delay((unsigned long)((5)*(40000000/4000.0)));
  1912  000804  0E41               	movlw	65
  1913  000806  0100               	movlb	0	; () banked
  1914  000808  6FA0               	movwf	??_main& (0+255),b
  1915  00080A  0EEE               	movlw	238
  1916  00080C                     u2167:
  1917  00080C  2EE8               	decfsz	wreg,f,c
  1918  00080E  D7FE               	goto	u2167
  1919  000810  2FA0               	decfsz	??_main& (0+255),f,b
  1920  000812  D7FC               	goto	u2167
  1921  000814  D000               	nop2	
  1922  000816  D489               	goto	l2949
  1923  000818                     __end_of_main:
  1924                           	opt stack 0
  1925                           tblptru	equ	0xFF8
  1926                           tblptrh	equ	0xFF7
  1927                           tblptrl	equ	0xFF6
  1928                           tablat	equ	0xFF5
  1929                           prodh	equ	0xFF4
  1930                           prodl	equ	0xFF3
  1931                           postinc0	equ	0xFEE
  1932                           wreg	equ	0xFE8
  1933                           postdec1	equ	0xFE5
  1934                           fsr1l	equ	0xFE1
  1935                           postinc2	equ	0xFDE
  1936                           postdec2	equ	0xFDD
  1937                           fsr2h	equ	0xFDA
  1938                           fsr2l	equ	0xFD9
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _modbus_rx_sm *****************
  1942 ;; Defined at:
  1943 ;;		line 424 in file "Turn_counter.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;		None               void
  1950 ;; Registers used:
  1951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1959 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1960 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;Total ram usage:        3 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    3
  1964 ;; This function calls:
  1965 ;;		_get_rx_ch
  1966 ;;		_modbus_rx_CRC_check
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text1
  1973  000CD0                     __ptext1:
  1974                           	opt stack 0
  1975  000CD0                     _modbus_rx_sm:
  1976                           	opt stack 27
  1977                           
  1978                           ;Turn_counter.c: 428: while(rd_ptr < wr_ptr)
  1979                           
  1980                           ;incstack = 0
  1981  000CD0  D087               	goto	l2323
  1982  000CD2                     l2259:
  1983                           
  1984                           ;Turn_counter.c: 429: {
  1985                           ;Turn_counter.c: 430: rx_byte = get_rx_ch();
  1986  000CD2  ECE8  F009         	call	_get_rx_ch	;wreg free
  1987  000CD6  6E44               	movwf	_rx_byte,c
  1988                           
  1989                           ;Turn_counter.c: 432: switch(rd_state)
  1990  000CD8  D079               	goto	l2321
  1991  000CDA                     l2261:
  1992                           
  1993                           ;Turn_counter.c: 436: if(rx_byte == dev_id)
  1994  000CDA  504D               	movf	_dev_id,w,c
  1995  000CDC  6244               	cpfseq	_rx_byte,c
  1996  000CDE  D080               	goto	l2323
  1997                           
  1998                           ;Turn_counter.c: 437: {
  1999                           ;Turn_counter.c: 439: rd_state = 11;
  2000  000CE0  0E0B               	movlw	11
  2001  000CE2  D003               	goto	L5
  2002  000CE4                     l2265:
  2003                           
  2004                           ;Turn_counter.c: 447: reg_addr_flag = 1;
  2005  000CE4  0E01               	movlw	1
  2006  000CE6  6E41               	movwf	_reg_addr_flag,c
  2007  000CE8  D005               	goto	L6
  2008  000CEA                     L5:
  2009  000CEA  6E4E               	movwf	_rd_state,c
  2010                           
  2011                           ;Turn_counter.c: 451: break;
  2012  000CEC  D079               	goto	l2323
  2013  000CEE                     l2267:
  2014                           
  2015                           ;Turn_counter.c: 454: reg_addr_flag = 1;
  2016  000CEE  0E01               	movlw	1
  2017  000CF0  6E41               	movwf	_reg_addr_flag,c
  2018                           
  2019                           ;Turn_counter.c: 455: reg_wr_flag = 1;
  2020  000CF2  6E43               	movwf	_reg_wr_flag,c
  2021  000CF4                     L6:
  2022                           
  2023                           ;Turn_counter.c: 456: regs2read = 0;
  2024  000CF4  6A39               	clrf	_regs2read+1,c
  2025  000CF6  6A38               	clrf	_regs2read,c
  2026                           
  2027                           ;Turn_counter.c: 457: reg_wr_data = 0;
  2028  000CF8  6A37               	clrf	_reg_wr_data+1,c
  2029  000CFA  6A36               	clrf	_reg_wr_data,c
  2030  000CFC  D02B               	goto	L9
  2031  000CFE                     l2271:
  2032  000CFE  5044               	movf	_rx_byte,w,c
  2033                           
  2034                           ; Switch size 1, requested type "speed"
  2035                           ; Number of cases is 2, Range of values is 3 to 6
  2036                           ; switch strategies available:
  2037                           ; Name         Instructions Cycles
  2038                           ; simple_byte            7     4 (average)
  2039                           ;	Chosen strategy is simple_byte
  2040  000D00  0A03               	xorlw	3	; case 3
  2041  000D02  E0F0               	bz	l2265
  2042  000D04  0A05               	xorlw	5	; case 6
  2043  000D06  E0F3               	bz	l2267
  2044  000D08  D05F               	goto	l2319
  2045  000D0A                     l284:
  2046                           
  2047                           ;Turn_counter.c: 468: temp_buf = (unsigned int)rx_byte;
  2048  000D0A  C044  F03A         	movff	_rx_byte,_temp_buf
  2049  000D0E  6A3B               	clrf	_temp_buf+1,c
  2050                           
  2051                           ;Turn_counter.c: 469: temp_buf = temp_buf << 8;
  2052  000D10  503A               	movf	_temp_buf,w,c
  2053  000D12  6E3B               	movwf	_temp_buf+1,c
  2054  000D14  6A3A               	clrf	_temp_buf,c
  2055                           
  2056                           ;Turn_counter.c: 470: rd_state = 13;
  2057  000D16  0E0D               	movlw	13
  2058  000D18  D7E8               	goto	L5
  2059  000D1A                     l2275:
  2060                           
  2061                           ;Turn_counter.c: 474: temp_buf |= (unsigned int)rx_byte;
  2062  000D1A  5044               	movf	_rx_byte,w,c
  2063  000D1C  123A               	iorwf	_temp_buf,f,c
  2064                           
  2065                           ;Turn_counter.c: 476: if(reg_addr_flag)
  2066  000D1E  5041               	movf	_reg_addr_flag,w,c
  2067  000D20  E010               	bz	l2287
  2068                           
  2069                           ;Turn_counter.c: 477: {
  2070                           ;Turn_counter.c: 478: modbus_reg_addr = temp_buf;
  2071  000D22  C03A  F034         	movff	_temp_buf,_modbus_reg_addr
  2072  000D26  C03B  F035         	movff	_temp_buf+1,_modbus_reg_addr+1
  2073                           
  2074                           ;Turn_counter.c: 479: reg_addr_flag = 0;
  2075  000D2A  0E00               	movlw	0
  2076  000D2C  6E41               	movwf	_reg_addr_flag,c
  2077                           
  2078                           ;Turn_counter.c: 480: if(reg_wr_flag) reg_qty_flag = 0;
  2079  000D2E  5043               	movf	_reg_wr_flag,w,c
  2080  000D30  0E00               	movlw	0
  2081  000D32  B4D8               	btfsc	status,2,c
  2082                           
  2083                           ;Turn_counter.c: 481: else reg_qty_flag = 1;
  2084  000D34  0E01               	movlw	1
  2085  000D36  6E42               	movwf	_reg_qty_flag,c
  2086                           
  2087                           ;Turn_counter.c: 482: rd_state = 12;
  2088  000D38  0E0C               	movlw	12
  2089  000D3A  6E4E               	movwf	_rd_state,c
  2090                           
  2091                           ;Turn_counter.c: 483: temp_buf = 0;
  2092  000D3C  6A3B               	clrf	_temp_buf+1,c
  2093  000D3E  6A3A               	clrf	_temp_buf,c
  2094                           
  2095                           ;Turn_counter.c: 484: break;
  2096  000D40  D04F               	goto	l2323
  2097  000D42                     l2287:
  2098                           
  2099                           ;Turn_counter.c: 485: }
  2100                           ;Turn_counter.c: 487: if(reg_wr_flag)
  2101  000D42  5043               	movf	_reg_wr_flag,w,c
  2102  000D44  E009               	bz	l2293
  2103                           
  2104                           ;Turn_counter.c: 488: {
  2105                           ;Turn_counter.c: 489: reg_wr_data = temp_buf;
  2106  000D46  C03A  F036         	movff	_temp_buf,_reg_wr_data
  2107  000D4A  C03B  F037         	movff	_temp_buf+1,_reg_wr_data+1
  2108                           
  2109                           ;Turn_counter.c: 490: reg_wr_flag = 0;
  2110  000D4E  6A43               	clrf	_reg_wr_flag,c
  2111                           
  2112                           ;Turn_counter.c: 491: get_crc_flag = 0x06;
  2113  000D50  0E06               	movlw	6
  2114  000D52  6E3E               	movwf	_get_crc_flag,c
  2115  000D54                     L9:
  2116                           
  2117                           ;Turn_counter.c: 492: rd_state = 12;
  2118  000D54  0E0C               	movlw	12
  2119  000D56  D7C9               	goto	L5
  2120  000D58                     l2293:
  2121                           
  2122                           ;Turn_counter.c: 494: }
  2123                           ;Turn_counter.c: 496: if(reg_qty_flag)
  2124  000D58  5042               	movf	_reg_qty_flag,w,c
  2125  000D5A  E031               	bz	l2317
  2126                           
  2127                           ;Turn_counter.c: 497: {
  2128                           ;Turn_counter.c: 498: if(temp_buf < 125)
  2129  000D5C  0E7D               	movlw	125
  2130  000D5E  5C3A               	subwf	_temp_buf,w,c
  2131  000D60  0E00               	movlw	0
  2132  000D62  583B               	subwfb	_temp_buf+1,w,c
  2133  000D64  E208               	bc	l2301
  2134                           
  2135                           ;Turn_counter.c: 499: {
  2136                           ;Turn_counter.c: 500: regs2read = temp_buf;
  2137  000D66  C03A  F038         	movff	_temp_buf,_regs2read
  2138  000D6A  C03B  F039         	movff	_temp_buf+1,_regs2read+1
  2139                           
  2140                           ;Turn_counter.c: 501: get_crc_flag = 0x03 ;
  2141  000D6E  0E03               	movlw	3
  2142  000D70  6E3E               	movwf	_get_crc_flag,c
  2143                           
  2144                           ;Turn_counter.c: 502: rd_state = 12;
  2145  000D72  0E0C               	movlw	12
  2146  000D74  D001               	goto	L8
  2147  000D76                     l2301:
  2148                           
  2149                           ;Turn_counter.c: 505: else
  2150                           ;Turn_counter.c: 506: {
  2151                           ;Turn_counter.c: 507: rd_state = 10;
  2152  000D76  0E0A               	movlw	10
  2153  000D78                     L8:
  2154  000D78  6E4E               	movwf	_rd_state,c
  2155                           
  2156                           ;Turn_counter.c: 508: }
  2157                           ;Turn_counter.c: 509: reg_qty_flag = 0;
  2158  000D7A  6A42               	clrf	_reg_qty_flag,c
  2159                           
  2160                           ;Turn_counter.c: 510: break;
  2161  000D7C  D031               	goto	l2323
  2162  000D7E                     l2303:
  2163                           
  2164                           ;Turn_counter.c: 516: crc_buf[1] = (unsigned char) 0x06;
  2165  000D7E  0E06               	movlw	6
  2166  000D80  0103               	movlb	3	; () banked
  2167  000D82  6F01               	movwf	(_crc_buf+1)& (0+255),b
  2168                           
  2169                           ;Turn_counter.c: 517: crc_buf[4] = (unsigned char)(reg_wr_data >> 8);
  2170  000D84  C037  F023         	movff	_reg_wr_data+1,??_modbus_rx_sm
  2171  000D88  C023  F024         	movff	??_modbus_rx_sm,??_modbus_rx_sm+1
  2172  000D8C  6A25               	clrf	(??_modbus_rx_sm+2)& (0+255),c
  2173  000D8E  5024               	movf	??_modbus_rx_sm+1,w,c
  2174  000D90  6F04               	movwf	(_crc_buf+4)& (0+255),b
  2175                           
  2176                           ; BSR set to: 3
  2177                           ;Turn_counter.c: 518: crc_buf[5] = (unsigned char)(reg_wr_data & 0x00ff);
  2178  000D92  C036  F305         	movff	_reg_wr_data,_crc_buf+5
  2179                           
  2180                           ; BSR set to: 3
  2181                           ;Turn_counter.c: 519: modbus_rx_CRC_check(0x06);
  2182  000D96  0E06               	movlw	6
  2183  000D98  EC7C  F009         	call	_modbus_rx_CRC_check
  2184                           
  2185                           ;Turn_counter.c: 520: break;
  2186  000D9C  D021               	goto	l2323
  2187  000D9E                     l2309:
  2188                           
  2189                           ;Turn_counter.c: 523: crc_buf[1] = (unsigned char) 0x03;
  2190  000D9E  0E03               	movlw	3
  2191  000DA0  0103               	movlb	3	; () banked
  2192  000DA2  6F01               	movwf	(_crc_buf+1)& (0+255),b
  2193                           
  2194                           ;Turn_counter.c: 524: crc_buf[4] = (unsigned char)(regs2read >> 8);
  2195  000DA4  C039  F023         	movff	_regs2read+1,??_modbus_rx_sm
  2196  000DA8  C023  F024         	movff	??_modbus_rx_sm,??_modbus_rx_sm+1
  2197  000DAC  6A25               	clrf	(??_modbus_rx_sm+2)& (0+255),c
  2198  000DAE  5024               	movf	??_modbus_rx_sm+1,w,c
  2199  000DB0  6F04               	movwf	(_crc_buf+4)& (0+255),b
  2200                           
  2201                           ; BSR set to: 3
  2202                           ;Turn_counter.c: 525: crc_buf[5] = (unsigned char)(regs2read & 0x00ff);
  2203  000DB2  C038  F305         	movff	_regs2read,_crc_buf+5
  2204                           
  2205                           ; BSR set to: 3
  2206                           ;Turn_counter.c: 526: modbus_rx_CRC_check(0x03);
  2207  000DB6  0E03               	movlw	3
  2208  000DB8  EC7C  F009         	call	_modbus_rx_CRC_check
  2209                           
  2210                           ;Turn_counter.c: 527: break;
  2211  000DBC  D011               	goto	l2323
  2212  000DBE                     l2317:
  2213  000DBE  503E               	movf	_get_crc_flag,w,c
  2214                           
  2215                           ; Switch size 1, requested type "speed"
  2216                           ; Number of cases is 2, Range of values is 3 to 6
  2217                           ; switch strategies available:
  2218                           ; Name         Instructions Cycles
  2219                           ; simple_byte            7     4 (average)
  2220                           ;	Chosen strategy is simple_byte
  2221  000DC0  0A03               	xorlw	3	; case 3
  2222  000DC2  E0ED               	bz	l2309
  2223  000DC4  0A05               	xorlw	5	; case 6
  2224  000DC6  E0DB               	bz	l2303
  2225  000DC8                     l2319:
  2226  000DC8  0E0A               	movlw	10
  2227  000DCA  D78F               	goto	L5
  2228  000DCC                     l2321:
  2229  000DCC  504E               	movf	_rd_state,w,c
  2230                           
  2231                           ; Switch size 1, requested type "speed"
  2232                           ; Number of cases is 4, Range of values is 10 to 13
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte           13     7 (average)
  2236                           ;	Chosen strategy is simple_byte
  2237  000DCE  0A0A               	xorlw	10	; case 10
  2238  000DD0  E084               	bz	l2261
  2239  000DD2  0A01               	xorlw	1	; case 11
  2240  000DD4  E094               	bz	l2271
  2241  000DD6  0A07               	xorlw	7	; case 12
  2242  000DD8  E098               	bz	l284
  2243  000DDA  0A01               	xorlw	1	; case 13
  2244  000DDC  E09E               	bz	l2275
  2245  000DDE  D7F4               	goto	l2319
  2246  000DE0                     l2323:
  2247  000DE0  5045               	movf	_wr_ptr,w,c
  2248  000DE2  5C40               	subwf	_rd_ptr,w,c
  2249  000DE4  B0D8               	btfsc	status,0,c
  2250  000DE6  0012               	return	
  2251  000DE8  D774               	goto	l2259
  2252  000DEA                     __end_of_modbus_rx_sm:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           prodh	equ	0xFF4
  2259                           prodl	equ	0xFF3
  2260                           postinc0	equ	0xFEE
  2261                           wreg	equ	0xFE8
  2262                           postdec1	equ	0xFE5
  2263                           fsr1l	equ	0xFE1
  2264                           postinc2	equ	0xFDE
  2265                           postdec2	equ	0xFDD
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _modbus_rx_CRC_check *****************
  2271 ;; Defined at:
  2272 ;;		line 404 in file "Turn_counter.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  modbus_cmd      1    wreg     unsigned char 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  modbus_cmd      1   33[COMRAM] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;		None               void
  2279 ;; Registers used:
  2280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2288 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;Total ram usage:        4 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    2
  2293 ;; This function calls:
  2294 ;;		_modbus_CRC16
  2295 ;; This function is called by:
  2296 ;;		_modbus_rx_sm
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text2
  2301  0012F8                     __ptext2:
  2302                           	opt stack 0
  2303  0012F8                     _modbus_rx_CRC_check:
  2304                           	opt stack 27
  2305                           
  2306                           ;incstack = 0
  2307                           ;modbus_rx_CRC_check@modbus_cmd stored from wreg
  2308  0012F8  6E22               	movwf	modbus_rx_CRC_check@modbus_cmd,c
  2309                           
  2310                           ;Turn_counter.c: 407: crc_buf[0] = dev_id;
  2311  0012FA  C04D  F300         	movff	_dev_id,_crc_buf
  2312                           
  2313                           ;Turn_counter.c: 408: crc_buf[2] = (unsigned char)(modbus_reg_addr >> 8);
  2314  0012FE  C035  F01F         	movff	_modbus_reg_addr+1,??_modbus_rx_CRC_check
  2315  001302  C01F  F020         	movff	??_modbus_rx_CRC_check,??_modbus_rx_CRC_check+1
  2316  001306  6A21               	clrf	(??_modbus_rx_CRC_check+2)& (0+255),c
  2317  001308  5020               	movf	??_modbus_rx_CRC_check+1,w,c
  2318  00130A  0103               	movlb	3	; () banked
  2319  00130C  6F02               	movwf	(_crc_buf+2)& (0+255),b
  2320                           
  2321                           ; BSR set to: 3
  2322                           ;Turn_counter.c: 409: crc_buf[3] = (unsigned char)(modbus_reg_addr & 0x00ff);
  2323  00130E  C034  F303         	movff	_modbus_reg_addr,_crc_buf+3
  2324                           
  2325                           ; BSR set to: 3
  2326                           ;Turn_counter.c: 410: CRC16 = modbus_CRC16(crc_buf,6);
  2327  001312  0E03               	movlw	high _crc_buf
  2328  001314  6E12               	movwf	modbus_CRC16@buf+1,c
  2329  001316  0E00               	movlw	low _crc_buf
  2330  001318  6E11               	movwf	modbus_CRC16@buf,c
  2331  00131A  0E06               	movlw	6
  2332  00131C  6E13               	movwf	modbus_CRC16@len,c
  2333  00131E  EC10  F009         	call	_modbus_CRC16	;wreg free
  2334  001322  C011  F02E         	movff	?_modbus_CRC16,_CRC16
  2335  001326  C012  F02F         	movff	?_modbus_CRC16+1,_CRC16+1
  2336                           
  2337                           ;Turn_counter.c: 411: if(CRC16 == temp_buf)
  2338  00132A  503B               	movf	_temp_buf+1,w,c
  2339  00132C  182F               	xorwf	_CRC16+1,w,c
  2340  00132E  E102               	bnz	u1035
  2341  001330  503A               	movf	_temp_buf,w,c
  2342  001332  182E               	xorwf	_CRC16,w,c
  2343  001334                     u1035:
  2344  001334  B4D8               	btfsc	status,2,c
  2345                           
  2346                           ;Turn_counter.c: 412: {
  2347                           ;Turn_counter.c: 413: answer = modbus_cmd;
  2348  001336  C022  F03C         	movff	modbus_rx_CRC_check@modbus_cmd,_answer
  2349                           
  2350                           ;Turn_counter.c: 416: else
  2351                           ;Turn_counter.c: 417: {
  2352                           ;Turn_counter.c: 418: rd_state = 10;
  2353                           
  2354                           ;Turn_counter.c: 415: }
  2355                           
  2356                           ;Turn_counter.c: 414: rd_state = 10;
  2357  00133A  0E0A               	movlw	10
  2358  00133C  6E4E               	movwf	_rd_state,c
  2359                           
  2360                           ;Turn_counter.c: 419: }
  2361                           ;Turn_counter.c: 421: get_crc_flag = 0;
  2362  00133E  0E00               	movlw	0
  2363  001340  6E3E               	movwf	_get_crc_flag,c
  2364  001342  0C00               	retlw	0
  2365  001344                     __end_of_modbus_rx_CRC_check:
  2366                           	opt stack 0
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           prodh	equ	0xFF4
  2372                           prodl	equ	0xFF3
  2373                           postinc0	equ	0xFEE
  2374                           wreg	equ	0xFE8
  2375                           postdec1	equ	0xFE5
  2376                           fsr1l	equ	0xFE1
  2377                           postinc2	equ	0xFDE
  2378                           postdec2	equ	0xFDD
  2379                           fsr2h	equ	0xFDA
  2380                           fsr2l	equ	0xFD9
  2381                           status	equ	0xFD8
  2382                           
  2383 ;; *************** function _get_rx_ch *****************
  2384 ;; Defined at:
  2385 ;;		line 285 in file "Turn_counter.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;		None
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  rch             1   18[COMRAM] unsigned char 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      unsigned char 
  2392 ;; Registers used:
  2393 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2401 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2402 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2403 ;;Total ram usage:        3 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_modbus_rx_sm
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text3
  2414  0013D0                     __ptext3:
  2415                           	opt stack 0
  2416  0013D0                     _get_rx_ch:
  2417                           	opt stack 28
  2418                           
  2419                           ;Turn_counter.c: 287: unsigned char rch;
  2420                           ;Turn_counter.c: 289: if (rd_ptr < wr_ptr)
  2421                           
  2422                           ;incstack = 0
  2423  0013D0  5045               	movf	_wr_ptr,w,c
  2424  0013D2  5C40               	subwf	_rd_ptr,w,c
  2425  0013D4  E20E               	bc	l2091
  2426                           
  2427                           ;Turn_counter.c: 290: {
  2428                           ;Turn_counter.c: 291: rd_ptr++;
  2429  0013D6  2A40               	incf	_rd_ptr,f,c
  2430                           
  2431                           ;Turn_counter.c: 292: rch = rx_buf[rd_ptr & 0x0f];
  2432  0013D8  5040               	movf	_rd_ptr,w,c
  2433  0013DA  0B0F               	andlw	15
  2434  0013DC  6E11               	movwf	??_get_rx_ch& (0+255),c
  2435  0013DE  6A12               	clrf	(??_get_rx_ch+1)& (0+255),c
  2436  0013E0  0E60               	movlw	low _rx_buf
  2437  0013E2  2411               	addwf	??_get_rx_ch,w,c
  2438  0013E4  6ED9               	movwf	fsr2l,c
  2439  0013E6  0100               	movlb	0	; () banked
  2440  0013E8  0E00               	movlw	high _rx_buf
  2441  0013EA  2012               	addwfc	??_get_rx_ch+1,w,c
  2442  0013EC  6EDA               	movwf	fsr2h,c
  2443  0013EE  50DF               	movf	indf2,w,c
  2444  0013F0  D001               	goto	L10
  2445  0013F2                     l2091:
  2446                           
  2447                           ;Turn_counter.c: 294: else rch = 'x';
  2448  0013F2  0E78               	movlw	120
  2449  0013F4                     L10:
  2450  0013F4  6E13               	movwf	get_rx_ch@rch,c
  2451                           
  2452                           ;Turn_counter.c: 300: if (wr_ptr==rd_ptr && wr_ptr > 15)
  2453  0013F6  5040               	movf	_rd_ptr,w,c
  2454  0013F8  6245               	cpfseq	_wr_ptr,c
  2455  0013FA  D006               	goto	l241
  2456  0013FC  0E0F               	movlw	15
  2457  0013FE  6445               	cpfsgt	_wr_ptr,c
  2458  001400  D003               	goto	l241
  2459                           
  2460                           ;Turn_counter.c: 301: {
  2461                           ;Turn_counter.c: 303: wr_ptr=0;
  2462  001402  0E00               	movlw	0
  2463  001404  6E45               	movwf	_wr_ptr,c
  2464                           
  2465                           ;Turn_counter.c: 304: rd_ptr=0;
  2466  001406  6E40               	movwf	_rd_ptr,c
  2467  001408                     l241:
  2468                           
  2469                           ;Turn_counter.c: 306: }
  2470                           ;Turn_counter.c: 309: return rch;
  2471  001408  5013               	movf	get_rx_ch@rch,w,c
  2472  00140A  0012               	return	
  2473  00140C                     __end_of_get_rx_ch:
  2474                           	opt stack 0
  2475                           tblptru	equ	0xFF8
  2476                           tblptrh	equ	0xFF7
  2477                           tblptrl	equ	0xFF6
  2478                           tablat	equ	0xFF5
  2479                           prodh	equ	0xFF4
  2480                           prodl	equ	0xFF3
  2481                           postinc0	equ	0xFEE
  2482                           wreg	equ	0xFE8
  2483                           postdec1	equ	0xFE5
  2484                           fsr1l	equ	0xFE1
  2485                           indf2	equ	0xFDF
  2486                           postinc2	equ	0xFDE
  2487                           postdec2	equ	0xFDD
  2488                           fsr2h	equ	0xFDA
  2489                           fsr2l	equ	0xFD9
  2490                           status	equ	0xFD8
  2491                           
  2492 ;; *************** function _modbus_poll *****************
  2493 ;; Defined at:
  2494 ;;		line 540 in file "Turn_counter.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;		None               void
  2501 ;; Registers used:
  2502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2512 ;;Total ram usage:        2 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    3
  2515 ;; This function calls:
  2516 ;;		_EEPROM_WrByte
  2517 ;;		_modbus_refresh
  2518 ;;		_modbus_reset
  2519 ;;		_modbus_rhr_answer
  2520 ;;		_modbus_wsr_answer
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text4
  2527  000FB4                     __ptext4:
  2528                           	opt stack 0
  2529  000FB4                     _modbus_poll:
  2530                           	opt stack 27
  2531                           
  2532                           ;Turn_counter.c: 544: if(answer == 0x03)
  2533                           
  2534                           ;incstack = 0
  2535  000FB4  503C               	movf	_answer,w,c
  2536  000FB6  0A03               	xorlw	3
  2537  000FB8  E10F               	bnz	l2337
  2538                           
  2539                           ;Turn_counter.c: 545: {
  2540                           ;Turn_counter.c: 546: addr_buf_1 = modbus_reg_addr - 1000;
  2541  000FBA  0E18               	movlw	24
  2542  000FBC  2434               	addwf	_modbus_reg_addr,w,c
  2543  000FBE  6E30               	movwf	_addr_buf_1,c
  2544  000FC0  0EFC               	movlw	252
  2545  000FC2  2035               	addwfc	_modbus_reg_addr+1,w,c
  2546  000FC4  6E31               	movwf	_addr_buf_1+1,c
  2547                           
  2548                           ;Turn_counter.c: 547: modbus_refresh(0x03);
  2549  000FC6  0E03               	movlw	3
  2550  000FC8  EC0C  F004         	call	_modbus_refresh
  2551                           
  2552                           ;Turn_counter.c: 548: modbus_rhr_answer();
  2553  000FCC  ECAF  F005         	call	_modbus_rhr_answer	;wreg free
  2554                           
  2555                           ;Turn_counter.c: 549: answer = 0;
  2556  000FD0  0E00               	movlw	0
  2557  000FD2  6A3C               	clrf	_answer,c
  2558                           
  2559                           ;Turn_counter.c: 550: modbus_reset();
  2560  000FD4  EC06  F00A         	call	_modbus_reset	;wreg free
  2561  000FD8                     l2337:
  2562                           
  2563                           ;Turn_counter.c: 551: }
  2564                           ;Turn_counter.c: 554: if(answer == 0x06)
  2565  000FD8  503C               	movf	_answer,w,c
  2566  000FDA  0A06               	xorlw	6
  2567  000FDC  E120               	bnz	l2351
  2568                           
  2569                           ;Turn_counter.c: 555: {
  2570                           ;Turn_counter.c: 556: addr_buf_1 = modbus_reg_addr - 1000;
  2571  000FDE  0E18               	movlw	24
  2572  000FE0  2434               	addwf	_modbus_reg_addr,w,c
  2573  000FE2  6E30               	movwf	_addr_buf_1,c
  2574  000FE4  0EFC               	movlw	252
  2575  000FE6  2035               	addwfc	_modbus_reg_addr+1,w,c
  2576  000FE8  6E31               	movwf	_addr_buf_1+1,c
  2577                           
  2578                           ;Turn_counter.c: 557: holding_register[addr_buf_1] = reg_wr_data;
  2579  000FEA  0E00               	movlw	low _holding_register
  2580  000FEC  6E26               	movwf	??_modbus_poll& (0+255),c
  2581  000FEE  0E02               	movlw	high _holding_register
  2582  000FF0  6E27               	movwf	(??_modbus_poll+1)& (0+255),c
  2583  000FF2  90D8               	bcf	status,0,c
  2584  000FF4  3430               	rlcf	_addr_buf_1,w,c
  2585  000FF6  6ED9               	movwf	fsr2l,c
  2586  000FF8  3431               	rlcf	_addr_buf_1+1,w,c
  2587  000FFA  6EDA               	movwf	fsr2h,c
  2588  000FFC  5026               	movf	??_modbus_poll,w,c
  2589  000FFE  26D9               	addwf	fsr2l,f,c
  2590  001000  5027               	movf	??_modbus_poll+1,w,c
  2591  001002  22DA               	addwfc	fsr2h,f,c
  2592  001004  C036  FFDE         	movff	_reg_wr_data,postinc2
  2593  001008  C037  FFDD         	movff	_reg_wr_data+1,postdec2
  2594                           
  2595                           ;Turn_counter.c: 558: modbus_refresh(0x06);
  2596  00100C  0E06               	movlw	6
  2597  00100E  EC0C  F004         	call	_modbus_refresh
  2598                           
  2599                           ;Turn_counter.c: 559: modbus_wsr_answer();
  2600  001012  EC35  F008         	call	_modbus_wsr_answer	;wreg free
  2601                           
  2602                           ;Turn_counter.c: 560: answer = 0;
  2603  001016  0E00               	movlw	0
  2604  001018  6A3C               	clrf	_answer,c
  2605                           
  2606                           ;Turn_counter.c: 561: modbus_reset();
  2607  00101A  EC06  F00A         	call	_modbus_reset	;wreg free
  2608  00101E                     l2351:
  2609                           
  2610                           ;Turn_counter.c: 562: }
  2611                           ;Turn_counter.c: 564: if(bd_rate_fl)
  2612  00101E  503D               	movf	_bd_rate_fl,w,c
  2613  001020  E00B               	bz	l2363
  2614                           
  2615                           ;Turn_counter.c: 565: {
  2616                           ;Turn_counter.c: 566: PIE1bits.RC1IE = 0;
  2617  001022  9A9D               	bcf	3997,5,c	;volatile
  2618                           
  2619                           ;Turn_counter.c: 567: EEPROM_WrByte(1,bd_rate_code);
  2620  001024  C04C  F011         	movff	_bd_rate_code,EEPROM_WrByte@bData
  2621  001028  0E01               	movlw	1
  2622  00102A  ECC7  F009         	call	_EEPROM_WrByte
  2623                           
  2624                           ;Turn_counter.c: 568: bd_rate_fl = 0;
  2625  00102E  0E00               	movlw	0
  2626  001030  6A3D               	clrf	_bd_rate_fl,c
  2627                           
  2628                           ;Turn_counter.c: 569: modbus_reset();
  2629  001032  EC06  F00A         	call	_modbus_reset	;wreg free
  2630                           
  2631                           ;Turn_counter.c: 570: PIE1bits.RC1IE = 1;
  2632  001036  8A9D               	bsf	3997,5,c	;volatile
  2633  001038                     l2363:
  2634                           
  2635                           ;Turn_counter.c: 572: }
  2636                           ;Turn_counter.c: 574: if(id_change == 1)
  2637  001038  043F               	decf	_id_change,w,c
  2638  00103A  A4D8               	btfss	status,2,c
  2639  00103C  0012               	return	
  2640                           
  2641                           ;Turn_counter.c: 575: {
  2642                           ;Turn_counter.c: 576: if((dev_id >= 255 )|| (dev_id == 0)) return;
  2643  00103E  284D               	incf	_dev_id,w,c
  2644  001040  B4D8               	btfsc	status,2,c
  2645  001042  0012               	return	
  2646  001044  664D               	tstfsz	_dev_id,c
  2647  001046  D001               	goto	l307
  2648  001048  0012               	return	
  2649  00104A                     l307:
  2650                           
  2651                           ;Turn_counter.c: 578: dev_id = (unsigned char)holding_register[20];
  2652  00104A  C228  F04D         	movff	_holding_register+40,_dev_id
  2653                           
  2654                           ;Turn_counter.c: 579: EEPROM_WrByte(2,dev_id);
  2655  00104E  C04D  F011         	movff	_dev_id,EEPROM_WrByte@bData
  2656  001052  0E02               	movlw	2
  2657  001054  ECC7  F009         	call	_EEPROM_WrByte
  2658                           
  2659                           ;Turn_counter.c: 580: holding_register[19] = 0;
  2660  001058  0E00               	movlw	0
  2661  00105A  0102               	movlb	2	; () banked
  2662  00105C  6B27               	clrf	(_holding_register+39)& (0+255),b
  2663  00105E  6B26               	clrf	(_holding_register+38)& (0+255),b
  2664                           
  2665                           ; BSR set to: 2
  2666                           ;Turn_counter.c: 581: modbus_reset();
  2667  001060  EC06  F00A         	call	_modbus_reset	;wreg free
  2668                           
  2669                           ;Turn_counter.c: 583: id_change = 0;
  2670  001064  0E00               	movlw	0
  2671  001066  6E3F               	movwf	_id_change,c
  2672  001068  0C00               	retlw	0
  2673  00106A                     __end_of_modbus_poll:
  2674                           	opt stack 0
  2675                           tblptru	equ	0xFF8
  2676                           tblptrh	equ	0xFF7
  2677                           tblptrl	equ	0xFF6
  2678                           tablat	equ	0xFF5
  2679                           prodh	equ	0xFF4
  2680                           prodl	equ	0xFF3
  2681                           postinc0	equ	0xFEE
  2682                           wreg	equ	0xFE8
  2683                           postdec1	equ	0xFE5
  2684                           fsr1l	equ	0xFE1
  2685                           indf2	equ	0xFDF
  2686                           postinc2	equ	0xFDE
  2687                           postdec2	equ	0xFDD
  2688                           fsr2h	equ	0xFDA
  2689                           fsr2l	equ	0xFD9
  2690                           status	equ	0xFD8
  2691                           
  2692 ;; *************** function _modbus_wsr_answer *****************
  2693 ;; Defined at:
  2694 ;;		line 338 in file "Turn_counter.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;		None               void
  2701 ;; Registers used:
  2702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2710 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2711 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2712 ;;Total ram usage:        3 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    2
  2715 ;; This function calls:
  2716 ;;		_modbus_CRC16
  2717 ;;		_uart_send_hex
  2718 ;; This function is called by:
  2719 ;;		_modbus_poll
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text5
  2724  00106A                     __ptext5:
  2725                           	opt stack 0
  2726  00106A                     _modbus_wsr_answer:
  2727                           	opt stack 27
  2728                           
  2729                           ;Turn_counter.c: 340: crc_buf[0] = dev_id;
  2730                           
  2731                           ;incstack = 0
  2732  00106A  C04D  F300         	movff	_dev_id,_crc_buf
  2733                           
  2734                           ;Turn_counter.c: 341: crc_buf[1] = 0x06;
  2735  00106E  0E06               	movlw	6
  2736  001070  0103               	movlb	3	; () banked
  2737  001072  6F01               	movwf	(_crc_buf+1)& (0+255),b
  2738                           
  2739                           ;Turn_counter.c: 342: crc_buf[2] = (unsigned char)(modbus_reg_addr >> 8);
  2740  001074  C035  F01F         	movff	_modbus_reg_addr+1,??_modbus_wsr_answer
  2741  001078  C01F  F020         	movff	??_modbus_wsr_answer,??_modbus_wsr_answer+1
  2742  00107C  6A21               	clrf	(??_modbus_wsr_answer+2)& (0+255),c
  2743  00107E  5020               	movf	??_modbus_wsr_answer+1,w,c
  2744  001080  6F02               	movwf	(_crc_buf+2)& (0+255),b
  2745                           
  2746                           ; BSR set to: 3
  2747                           ;Turn_counter.c: 343: crc_buf[3] = (unsigned char)(modbus_reg_addr & 0x00ff);
  2748  001082  C034  F303         	movff	_modbus_reg_addr,_crc_buf+3
  2749                           
  2750                           ;Turn_counter.c: 344: crc_buf[4] = (unsigned char)(reg_wr_data >> 8);
  2751  001086  C037  F01F         	movff	_reg_wr_data+1,??_modbus_wsr_answer
  2752  00108A  C01F  F020         	movff	??_modbus_wsr_answer,??_modbus_wsr_answer+1
  2753  00108E  6A21               	clrf	(??_modbus_wsr_answer+2)& (0+255),c
  2754  001090  5020               	movf	??_modbus_wsr_answer+1,w,c
  2755  001092  6F04               	movwf	(_crc_buf+4)& (0+255),b
  2756                           
  2757                           ; BSR set to: 3
  2758                           ;Turn_counter.c: 345: crc_buf[5] = (unsigned char)(reg_wr_data & 0x00ff);
  2759  001094  C036  F305         	movff	_reg_wr_data,_crc_buf+5
  2760                           
  2761                           ; BSR set to: 3
  2762                           ;Turn_counter.c: 346: CRC16 = modbus_CRC16(crc_buf, 6);
  2763  001098  0E03               	movlw	high _crc_buf
  2764  00109A  6E12               	movwf	modbus_CRC16@buf+1,c
  2765  00109C  0E00               	movlw	low _crc_buf
  2766  00109E  6E11               	movwf	modbus_CRC16@buf,c
  2767  0010A0  0E06               	movlw	6
  2768  0010A2  6E13               	movwf	modbus_CRC16@len,c
  2769  0010A4  EC10  F009         	call	_modbus_CRC16	;wreg free
  2770  0010A8  C011  F02E         	movff	?_modbus_CRC16,_CRC16
  2771  0010AC  C012  F02F         	movff	?_modbus_CRC16+1,_CRC16+1
  2772                           
  2773                           ;Turn_counter.c: 349: LATCbits.LATC3=1;
  2774  0010B0  868B               	bsf	3979,3,c	;volatile
  2775                           
  2776                           ;Turn_counter.c: 351: uart_send_hex((unsigned char)dev_id);
  2777  0010B2  504D               	movf	_dev_id,w,c
  2778  0010B4  EC70  F00A         	call	_uart_send_hex
  2779                           
  2780                           ;Turn_counter.c: 352: uart_send_hex(0x06);
  2781  0010B8  0E06               	movlw	6
  2782  0010BA  EC70  F00A         	call	_uart_send_hex
  2783                           
  2784                           ;Turn_counter.c: 353: uart_send_hex((unsigned char)(modbus_reg_addr >> 8));
  2785  0010BE  C035  F01F         	movff	_modbus_reg_addr+1,??_modbus_wsr_answer
  2786  0010C2  C01F  F020         	movff	??_modbus_wsr_answer,??_modbus_wsr_answer+1
  2787  0010C6  6A21               	clrf	(??_modbus_wsr_answer+2)& (0+255),c
  2788  0010C8  5020               	movf	??_modbus_wsr_answer+1,w,c
  2789  0010CA  EC70  F00A         	call	_uart_send_hex
  2790                           
  2791                           ;Turn_counter.c: 354: uart_send_hex((unsigned char)(modbus_reg_addr & 0x00ff));
  2792  0010CE  5034               	movf	_modbus_reg_addr,w,c
  2793  0010D0  EC70  F00A         	call	_uart_send_hex
  2794                           
  2795                           ;Turn_counter.c: 355: uart_send_hex((unsigned char)(reg_wr_data >> 8));
  2796  0010D4  C037  F01F         	movff	_reg_wr_data+1,??_modbus_wsr_answer
  2797  0010D8  C01F  F020         	movff	??_modbus_wsr_answer,??_modbus_wsr_answer+1
  2798  0010DC  6A21               	clrf	(??_modbus_wsr_answer+2)& (0+255),c
  2799  0010DE  5020               	movf	??_modbus_wsr_answer+1,w,c
  2800  0010E0  EC70  F00A         	call	_uart_send_hex
  2801                           
  2802                           ;Turn_counter.c: 356: uart_send_hex((unsigned char)(reg_wr_data & 0x00ff));
  2803  0010E4  5036               	movf	_reg_wr_data,w,c
  2804  0010E6  EC70  F00A         	call	_uart_send_hex
  2805                           
  2806                           ;Turn_counter.c: 358: uart_send_hex((unsigned char)(CRC16 >> 8));
  2807  0010EA  C02F  F01F         	movff	_CRC16+1,??_modbus_wsr_answer
  2808  0010EE  C01F  F020         	movff	??_modbus_wsr_answer,??_modbus_wsr_answer+1
  2809  0010F2  6A21               	clrf	(??_modbus_wsr_answer+2)& (0+255),c
  2810  0010F4  5020               	movf	??_modbus_wsr_answer+1,w,c
  2811  0010F6  EC70  F00A         	call	_uart_send_hex
  2812                           
  2813                           ;Turn_counter.c: 359: uart_send_hex((unsigned char)(CRC16 & 0x00ff));
  2814  0010FA  502E               	movf	_CRC16,w,c
  2815  0010FC  EC70  F00A         	call	_uart_send_hex
  2816                           
  2817                           ;Turn_counter.c: 360: _delay((unsigned long)((2)*(40000000/4000.0)));
  2818  001100  0E1A               	movlw	26
  2819  001102  6E1F               	movwf	??_modbus_wsr_answer& (0+255),c
  2820  001104  0EF8               	movlw	248
  2821  001106                     u2177:
  2822  001106  2EE8               	decfsz	wreg,f,c
  2823  001108  D7FE               	goto	u2177
  2824  00110A  2E1F               	decfsz	??_modbus_wsr_answer& (0+255),f,c
  2825  00110C  D7FC               	goto	u2177
  2826  00110E  D000               	nop2	
  2827                           
  2828                           ;Turn_counter.c: 361: LATCbits.LATC3=0;
  2829  001110  968B               	bcf	3979,3,c	;volatile
  2830  001112  0012               	return	
  2831  001114                     __end_of_modbus_wsr_answer:
  2832                           	opt stack 0
  2833                           tblptru	equ	0xFF8
  2834                           tblptrh	equ	0xFF7
  2835                           tblptrl	equ	0xFF6
  2836                           tablat	equ	0xFF5
  2837                           prodh	equ	0xFF4
  2838                           prodl	equ	0xFF3
  2839                           postinc0	equ	0xFEE
  2840                           wreg	equ	0xFE8
  2841                           postdec1	equ	0xFE5
  2842                           fsr1l	equ	0xFE1
  2843                           indf2	equ	0xFDF
  2844                           postinc2	equ	0xFDE
  2845                           postdec2	equ	0xFDD
  2846                           fsr2h	equ	0xFDA
  2847                           fsr2l	equ	0xFD9
  2848                           status	equ	0xFD8
  2849                           
  2850 ;; *************** function _modbus_rhr_answer *****************
  2851 ;; Defined at:
  2852 ;;		line 365 in file "Turn_counter.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  j               1   35[COMRAM] unsigned char 
  2857 ;;  i               1   34[COMRAM] unsigned char 
  2858 ;;  cnt             1   36[COMRAM] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;		None               void
  2861 ;; Registers used:
  2862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2872 ;;Total ram usage:        7 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    2
  2875 ;; This function calls:
  2876 ;;		_modbus_CRC16
  2877 ;;		_uart_send_hex
  2878 ;; This function is called by:
  2879 ;;		_modbus_poll
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text6
  2884  000B5E                     __ptext6:
  2885                           	opt stack 0
  2886  000B5E                     _modbus_rhr_answer:
  2887                           	opt stack 27
  2888                           
  2889                           ;Turn_counter.c: 367: addr_buf_2 = addr_buf_1;
  2890                           
  2891                           ;incstack = 0
  2892  000B5E  C030  F08C         	movff	_addr_buf_1,_addr_buf_2
  2893  000B62  C031  F08D         	movff	_addr_buf_1+1,_addr_buf_2+1
  2894                           
  2895                           ;Turn_counter.c: 369: crc_buf[0] = dev_id;
  2896  000B66  C04D  F300         	movff	_dev_id,_crc_buf
  2897                           
  2898                           ;Turn_counter.c: 370: crc_buf[1] = 0x03;
  2899  000B6A  0E03               	movlw	3
  2900  000B6C  0103               	movlb	3	; () banked
  2901  000B6E  6F01               	movwf	(_crc_buf+1)& (0+255),b
  2902                           
  2903                           ; BSR set to: 3
  2904                           ;Turn_counter.c: 371: crc_buf[2] = regs2read*2;
  2905  000B70  5038               	movf	_regs2read,w,c
  2906  000B72  2438               	addwf	_regs2read,w,c
  2907  000B74  6F02               	movwf	(_crc_buf+2)& (0+255),b
  2908                           
  2909                           ; BSR set to: 3
  2910                           ;Turn_counter.c: 373: unsigned char cnt = 3;
  2911  000B76  0E03               	movlw	3
  2912  000B78  6E25               	movwf	modbus_rhr_answer@cnt,c
  2913                           
  2914                           ; BSR set to: 3
  2915                           ;Turn_counter.c: 375: for(unsigned char i = 0; i < regs2read; i++)
  2916  000B7A  6A23               	clrf	modbus_rhr_answer@i,c
  2917  000B7C  D03B               	goto	l2147
  2918  000B7E                     l2141:
  2919                           
  2920                           ; BSR set to: 3
  2921                           ;Turn_counter.c: 376: {
  2922                           ;Turn_counter.c: 377: crc_buf[cnt++] = (unsigned char)(holding_register[addr_buf_1] >> 8
      +                          );
  2923  000B7E  5025               	movf	modbus_rhr_answer@cnt,w,c
  2924  000B80  0D01               	mullw	1
  2925  000B82  0E00               	movlw	low _crc_buf
  2926  000B84  24F3               	addwf	prodl,w,c
  2927  000B86  6ED9               	movwf	fsr2l,c
  2928  000B88  0E03               	movlw	high _crc_buf
  2929  000B8A  20F4               	addwfc	prodh,w,c
  2930  000B8C  6EDA               	movwf	fsr2h,c
  2931  000B8E  0E00               	movlw	low _holding_register
  2932  000B90  6E1F               	movwf	??_modbus_rhr_answer& (0+255),c
  2933  000B92  0E02               	movlw	high _holding_register
  2934  000B94  6E20               	movwf	(??_modbus_rhr_answer+1)& (0+255),c
  2935  000B96  90D8               	bcf	status,0,c
  2936  000B98  3430               	rlcf	_addr_buf_1,w,c
  2937  000B9A  6EE1               	movwf	fsr1l,c
  2938  000B9C  3431               	rlcf	_addr_buf_1+1,w,c
  2939  000B9E  6EE2               	movwf	fsr1h,c
  2940  000BA0  501F               	movf	??_modbus_rhr_answer,w,c
  2941  000BA2  26E1               	addwf	fsr1l,f,c
  2942  000BA4  5020               	movf	??_modbus_rhr_answer+1,w,c
  2943  000BA6  22E2               	addwfc	fsr1h,f,c
  2944  000BA8  CFE6 F021          	movff	postinc1,??_modbus_rhr_answer+2
  2945  000BAC  CFE5 F022          	movff	postdec1,??_modbus_rhr_answer+3
  2946  000BB0  C022  F021         	movff	??_modbus_rhr_answer+3,??_modbus_rhr_answer+2
  2947  000BB4  6A22               	clrf	??_modbus_rhr_answer+3,c
  2948  000BB6  5021               	movf	??_modbus_rhr_answer+2,w,c
  2949  000BB8  6EDF               	movwf	indf2,c
  2950                           
  2951                           ; BSR set to: 3
  2952  000BBA  2A25               	incf	modbus_rhr_answer@cnt,f,c
  2953                           
  2954                           ; BSR set to: 3
  2955                           ;Turn_counter.c: 378: crc_buf[cnt++] = (unsigned char)(holding_register[addr_buf_1] & 0x
      +                          00ff);
  2956  000BBC  0E00               	movlw	low _holding_register
  2957  000BBE  6E1F               	movwf	??_modbus_rhr_answer& (0+255),c
  2958  000BC0  0E02               	movlw	high _holding_register
  2959  000BC2  6E20               	movwf	(??_modbus_rhr_answer+1)& (0+255),c
  2960  000BC4  90D8               	bcf	status,0,c
  2961  000BC6  3430               	rlcf	_addr_buf_1,w,c
  2962  000BC8  6ED9               	movwf	fsr2l,c
  2963  000BCA  3431               	rlcf	_addr_buf_1+1,w,c
  2964  000BCC  6EDA               	movwf	fsr2h,c
  2965  000BCE  501F               	movf	??_modbus_rhr_answer,w,c
  2966  000BD0  26D9               	addwf	fsr2l,f,c
  2967  000BD2  5020               	movf	??_modbus_rhr_answer+1,w,c
  2968  000BD4  22DA               	addwfc	fsr2h,f,c
  2969  000BD6  5025               	movf	modbus_rhr_answer@cnt,w,c
  2970  000BD8  0D01               	mullw	1
  2971  000BDA  0E00               	movlw	low _crc_buf
  2972  000BDC  24F3               	addwf	prodl,w,c
  2973  000BDE  6EE1               	movwf	fsr1l,c
  2974  000BE0  0103               	movlb	3	; () banked
  2975  000BE2  0E03               	movlw	high _crc_buf
  2976  000BE4  20F4               	addwfc	prodh,w,c
  2977  000BE6  6EE2               	movwf	fsr1h,c
  2978  000BE8  CFDF FFE7          	movff	indf2,indf1
  2979  000BEC  2A25               	incf	modbus_rhr_answer@cnt,f,c
  2980                           
  2981                           ;Turn_counter.c: 379: ++addr_buf_1;
  2982  000BEE  4A30               	infsnz	_addr_buf_1,f,c
  2983  000BF0  2A31               	incf	_addr_buf_1+1,f,c
  2984  000BF2  2A23               	incf	modbus_rhr_answer@i,f,c
  2985  000BF4                     l2147:
  2986                           
  2987                           ; BSR set to: 3
  2988  000BF4  5023               	movf	modbus_rhr_answer@i,w,c
  2989  000BF6  6E1F               	movwf	??_modbus_rhr_answer& (0+255),c
  2990  000BF8  6A20               	clrf	(??_modbus_rhr_answer+1)& (0+255),c
  2991  000BFA  5038               	movf	_regs2read,w,c
  2992  000BFC  5C1F               	subwf	??_modbus_rhr_answer,w,c
  2993  000BFE  5039               	movf	_regs2read+1,w,c
  2994  000C00  5820               	subwfb	??_modbus_rhr_answer+1,w,c
  2995  000C02  E3BD               	bnc	l2141
  2996                           
  2997                           ; BSR set to: 3
  2998                           ;Turn_counter.c: 380: }
  2999                           ;Turn_counter.c: 382: CRC16 = modbus_CRC16(crc_buf,(regs2read*2)+3);
  3000                           
  3001                           ; BSR set to: 3
  3002  000C04  0E03               	movlw	high _crc_buf
  3003  000C06  6E12               	movwf	modbus_CRC16@buf+1,c
  3004  000C08  0103               	movlb	3	; () banked
  3005  000C0A  0E00               	movlw	low _crc_buf
  3006  000C0C  6E11               	movwf	modbus_CRC16@buf,c
  3007  000C0E  5038               	movf	_regs2read,w,c
  3008  000C10  2438               	addwf	_regs2read,w,c
  3009  000C12  0F03               	addlw	3
  3010  000C14  6E13               	movwf	modbus_CRC16@len,c
  3011  000C16  EC10  F009         	call	_modbus_CRC16	;wreg free
  3012  000C1A  C011  F02E         	movff	?_modbus_CRC16,_CRC16
  3013  000C1E  C012  F02F         	movff	?_modbus_CRC16+1,_CRC16+1
  3014                           
  3015                           ;Turn_counter.c: 385: LATCbits.LATC3=1;
  3016  000C22  868B               	bsf	3979,3,c	;volatile
  3017                           
  3018                           ;Turn_counter.c: 386: uart_send_hex((unsigned char)dev_id);
  3019  000C24  504D               	movf	_dev_id,w,c
  3020  000C26  EC70  F00A         	call	_uart_send_hex
  3021                           
  3022                           ;Turn_counter.c: 387: uart_send_hex(0x03);
  3023  000C2A  0E03               	movlw	3
  3024  000C2C  EC70  F00A         	call	_uart_send_hex
  3025                           
  3026                           ;Turn_counter.c: 388: uart_send_hex(regs2read*2);
  3027  000C30  5038               	movf	_regs2read,w,c
  3028  000C32  2438               	addwf	_regs2read,w,c
  3029  000C34  EC70  F00A         	call	_uart_send_hex
  3030                           
  3031                           ;Turn_counter.c: 389: for(unsigned char j = 0; j < regs2read; j++)
  3032  000C38  6A24               	clrf	modbus_rhr_answer@j,c
  3033  000C3A  D02D               	goto	l2167
  3034  000C3C                     l2161:
  3035                           
  3036                           ;Turn_counter.c: 390: {
  3037                           ;Turn_counter.c: 391: uart_send_hex((unsigned char)(holding_register[addr_buf_2] >> 8));
  3038  000C3C  0E00               	movlw	low _holding_register
  3039  000C3E  6E1F               	movwf	??_modbus_rhr_answer& (0+255),c
  3040  000C40  0E02               	movlw	high _holding_register
  3041  000C42  6E20               	movwf	(??_modbus_rhr_answer+1)& (0+255),c
  3042  000C44  90D8               	bcf	status,0,c
  3043  000C46  0100               	movlb	0	; () banked
  3044  000C48  358C               	rlcf	_addr_buf_2& (0+255),w,b
  3045  000C4A  6ED9               	movwf	fsr2l,c
  3046  000C4C  358D               	rlcf	(_addr_buf_2+1)& (0+255),w,b
  3047  000C4E  6EDA               	movwf	fsr2h,c
  3048  000C50  501F               	movf	??_modbus_rhr_answer,w,c
  3049  000C52  26D9               	addwf	fsr2l,f,c
  3050  000C54  5020               	movf	??_modbus_rhr_answer+1,w,c
  3051  000C56  22DA               	addwfc	fsr2h,f,c
  3052  000C58  CFDE F021          	movff	postinc2,??_modbus_rhr_answer+2
  3053  000C5C  CFDD F022          	movff	postdec2,??_modbus_rhr_answer+3
  3054  000C60  C022  F021         	movff	??_modbus_rhr_answer+3,??_modbus_rhr_answer+2
  3055  000C64  6A22               	clrf	??_modbus_rhr_answer+3,c
  3056  000C66  5021               	movf	??_modbus_rhr_answer+2,w,c
  3057  000C68  EC70  F00A         	call	_uart_send_hex
  3058                           
  3059                           ;Turn_counter.c: 392: uart_send_hex((unsigned char)(holding_register[addr_buf_2] & 0x00f
      +                          f));
  3060  000C6C  0E00               	movlw	low _holding_register
  3061  000C6E  6E1F               	movwf	??_modbus_rhr_answer& (0+255),c
  3062  000C70  0E02               	movlw	high _holding_register
  3063  000C72  6E20               	movwf	(??_modbus_rhr_answer+1)& (0+255),c
  3064  000C74  90D8               	bcf	status,0,c
  3065  000C76  0100               	movlb	0	; () banked
  3066  000C78  358C               	rlcf	_addr_buf_2& (0+255),w,b
  3067  000C7A  6ED9               	movwf	fsr2l,c
  3068  000C7C  358D               	rlcf	(_addr_buf_2+1)& (0+255),w,b
  3069  000C7E  6EDA               	movwf	fsr2h,c
  3070  000C80  501F               	movf	??_modbus_rhr_answer,w,c
  3071  000C82  26D9               	addwf	fsr2l,f,c
  3072  000C84  5020               	movf	??_modbus_rhr_answer+1,w,c
  3073  000C86  22DA               	addwfc	fsr2h,f,c
  3074  000C88  50DF               	movf	indf2,w,c
  3075  000C8A  EC70  F00A         	call	_uart_send_hex
  3076                           
  3077                           ;Turn_counter.c: 393: ++addr_buf_2;
  3078  000C8E  0100               	movlb	0	; () banked
  3079  000C90  4B8C               	infsnz	_addr_buf_2& (0+255),f,b
  3080  000C92  2B8D               	incf	(_addr_buf_2+1)& (0+255),f,b
  3081                           
  3082                           ; BSR set to: 0
  3083  000C94  2A24               	incf	modbus_rhr_answer@j,f,c
  3084  000C96                     l2167:
  3085  000C96  5024               	movf	modbus_rhr_answer@j,w,c
  3086  000C98  6E1F               	movwf	??_modbus_rhr_answer& (0+255),c
  3087  000C9A  6A20               	clrf	(??_modbus_rhr_answer+1)& (0+255),c
  3088  000C9C  5038               	movf	_regs2read,w,c
  3089  000C9E  5C1F               	subwf	??_modbus_rhr_answer,w,c
  3090  000CA0  5039               	movf	_regs2read+1,w,c
  3091  000CA2  5820               	subwfb	??_modbus_rhr_answer+1,w,c
  3092  000CA4  E3CB               	bnc	l2161
  3093                           
  3094                           ;Turn_counter.c: 394: }
  3095                           ;Turn_counter.c: 396: uart_send_hex((unsigned char)(CRC16 >> 8));
  3096  000CA6  C02F  F01F         	movff	_CRC16+1,??_modbus_rhr_answer
  3097  000CAA  C01F  F020         	movff	??_modbus_rhr_answer,??_modbus_rhr_answer+1
  3098  000CAE  6A21               	clrf	(??_modbus_rhr_answer+2)& (0+255),c
  3099  000CB0  5020               	movf	??_modbus_rhr_answer+1,w,c
  3100  000CB2  EC70  F00A         	call	_uart_send_hex
  3101                           
  3102                           ;Turn_counter.c: 397: uart_send_hex((unsigned char)(CRC16 & 0x00ff));
  3103  000CB6  502E               	movf	_CRC16,w,c
  3104  000CB8  EC70  F00A         	call	_uart_send_hex
  3105                           
  3106                           ;Turn_counter.c: 398: _delay((unsigned long)((2)*(40000000/4000.0)));
  3107  000CBC  0E1A               	movlw	26
  3108  000CBE  6E1F               	movwf	??_modbus_rhr_answer& (0+255),c
  3109  000CC0  0EF8               	movlw	248
  3110  000CC2                     u2187:
  3111  000CC2  2EE8               	decfsz	wreg,f,c
  3112  000CC4  D7FE               	goto	u2187
  3113  000CC6  2E1F               	decfsz	??_modbus_rhr_answer& (0+255),f,c
  3114  000CC8  D7FC               	goto	u2187
  3115  000CCA  D000               	nop2	
  3116                           
  3117                           ;Turn_counter.c: 399: LATCbits.LATC3=0;
  3118  000CCC  968B               	bcf	3979,3,c	;volatile
  3119  000CCE  0012               	return	
  3120  000CD0                     __end_of_modbus_rhr_answer:
  3121                           	opt stack 0
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           prodh	equ	0xFF4
  3127                           prodl	equ	0xFF3
  3128                           postinc0	equ	0xFEE
  3129                           wreg	equ	0xFE8
  3130                           indf1	equ	0xFE7
  3131                           postinc1	equ	0xFE6
  3132                           postdec1	equ	0xFE5
  3133                           fsr1h	equ	0xFE2
  3134                           fsr1l	equ	0xFE1
  3135                           indf2	equ	0xFDF
  3136                           postinc2	equ	0xFDE
  3137                           postdec2	equ	0xFDD
  3138                           fsr2h	equ	0xFDA
  3139                           fsr2l	equ	0xFD9
  3140                           status	equ	0xFD8
  3141                           
  3142 ;; *************** function _uart_send_hex *****************
  3143 ;; Defined at:
  3144 ;;		line 161 in file "Turn_counter.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  temp            1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  temp            1   16[COMRAM] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;		None               void
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;Total ram usage:        1 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    1
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_modbus_wsr_answer
  3169 ;;		_modbus_rhr_answer
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text7
  3174  0014E0                     __ptext7:
  3175                           	opt stack 0
  3176  0014E0                     _uart_send_hex:
  3177                           	opt stack 27
  3178                           
  3179                           ;incstack = 0
  3180                           ;uart_send_hex@temp stored from wreg
  3181  0014E0  6E11               	movwf	uart_send_hex@temp,c
  3182  0014E2                     l204:
  3183  0014E2  A2AC               	btfss	4012,1,c	;volatile
  3184  0014E4  D7FE               	goto	l204
  3185                           
  3186                           ;Turn_counter.c: 168: TXREG1bits.TXREG1 = temp;
  3187  0014E6  50AD               	movf	4013,w,c	;volatile
  3188  0014E8  1811               	xorwf	uart_send_hex@temp,w,c
  3189  0014EA  0B00               	andlw	-256
  3190  0014EC  1811               	xorwf	uart_send_hex@temp,w,c
  3191  0014EE  6EAD               	movwf	4013,c	;volatile
  3192                           
  3193                           ;Turn_counter.c: 169: _delay((unsigned long)((100)*(40000000/4000000.0)));
  3194  0014F0  0EFA               	movlw	250
  3195  0014F2                     u2197:
  3196  0014F2  F000               	nop	
  3197  0014F4  2EE8               	decfsz	wreg,f,c
  3198  0014F6  D7FD               	goto	u2197
  3199  0014F8  0012               	return	
  3200  0014FA                     __end_of_uart_send_hex:
  3201                           	opt stack 0
  3202                           tblptru	equ	0xFF8
  3203                           tblptrh	equ	0xFF7
  3204                           tblptrl	equ	0xFF6
  3205                           tablat	equ	0xFF5
  3206                           prodh	equ	0xFF4
  3207                           prodl	equ	0xFF3
  3208                           postinc0	equ	0xFEE
  3209                           wreg	equ	0xFE8
  3210                           indf1	equ	0xFE7
  3211                           postinc1	equ	0xFE6
  3212                           postdec1	equ	0xFE5
  3213                           fsr1h	equ	0xFE2
  3214                           fsr1l	equ	0xFE1
  3215                           indf2	equ	0xFDF
  3216                           postinc2	equ	0xFDE
  3217                           postdec2	equ	0xFDD
  3218                           fsr2h	equ	0xFDA
  3219                           fsr2l	equ	0xFD9
  3220                           status	equ	0xFD8
  3221                           
  3222 ;; *************** function _modbus_CRC16 *****************
  3223 ;; Defined at:
  3224 ;;		line 312 in file "Turn_counter.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  buf             2   16[COMRAM] PTR unsigned char 
  3227 ;;		 -> crc_buf(250), 
  3228 ;;  len             1   18[COMRAM] unsigned char 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  i               1   27[COMRAM] unsigned char 
  3231 ;;  pos             1   26[COMRAM] unsigned char 
  3232 ;;  crc             2   28[COMRAM] unsigned int 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  2   16[COMRAM] unsigned int 
  3235 ;; Registers used:
  3236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3242 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3243 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3244 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3245 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3246 ;;Total ram usage:       14 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_modbus_wsr_answer
  3253 ;;		_modbus_rhr_answer
  3254 ;;		_modbus_rx_CRC_check
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text8
  3259  001220                     __ptext8:
  3260                           	opt stack 0
  3261  001220                     _modbus_CRC16:
  3262                           	opt stack 27
  3263                           
  3264                           ;Turn_counter.c: 313: unsigned int crc = 0xFFFF;
  3265                           
  3266                           ;incstack = 0
  3267  001220  681D               	setf	modbus_CRC16@crc,c
  3268  001222  681E               	setf	modbus_CRC16@crc+1,c
  3269                           
  3270                           ;Turn_counter.c: 315: for (unsigned char pos = 0; pos < len; pos++)
  3271  001224  6A1B               	clrf	modbus_CRC16@pos,c
  3272  001226  D020               	goto	l2003
  3273  001228                     l1985:
  3274                           
  3275                           ;Turn_counter.c: 316: {
  3276                           ;Turn_counter.c: 317: crc ^= (unsigned int)buf[pos];
  3277  001228  501B               	movf	modbus_CRC16@pos,w,c
  3278  00122A  0D01               	mullw	1
  3279  00122C  50F3               	movf	prodl,w,c
  3280  00122E  2411               	addwf	modbus_CRC16@buf,w,c
  3281  001230  6ED9               	movwf	fsr2l,c
  3282  001232  50F4               	movf	prodh,w,c
  3283  001234  2012               	addwfc	modbus_CRC16@buf+1,w,c
  3284  001236  6EDA               	movwf	fsr2h,c
  3285  001238  50DF               	movf	indf2,w,c
  3286  00123A  6E14               	movwf	??_modbus_CRC16& (0+255),c
  3287  00123C  5014               	movf	??_modbus_CRC16,w,c
  3288  00123E  1A1D               	xorwf	modbus_CRC16@crc,f,c
  3289                           
  3290                           ;Turn_counter.c: 318: for (unsigned char i = 8; i != 0; i--)
  3291  001240  0E08               	movlw	8
  3292  001242  6E1C               	movwf	modbus_CRC16@i,c
  3293  001244  D00E               	goto	L11
  3294  001246                     l247:
  3295                           
  3296                           ;Turn_counter.c: 319: {
  3297                           ;Turn_counter.c: 320: if ((crc & 0x0001) != 0)
  3298  001246  A01D               	btfss	modbus_CRC16@crc,0,c
  3299  001248  D008               	goto	l1997
  3300                           
  3301                           ;Turn_counter.c: 321: {
  3302                           ;Turn_counter.c: 322: crc >>= 1;
  3303  00124A  90D8               	bcf	status,0,c
  3304  00124C  321E               	rrcf	modbus_CRC16@crc+1,f,c
  3305  00124E  321D               	rrcf	modbus_CRC16@crc,f,c
  3306                           
  3307                           ;Turn_counter.c: 323: crc ^= 0xA001;
  3308  001250  0E01               	movlw	1
  3309  001252  1A1D               	xorwf	modbus_CRC16@crc,f,c
  3310  001254  0EA0               	movlw	160
  3311  001256  1A1E               	xorwf	modbus_CRC16@crc+1,f,c
  3312                           
  3313                           ;Turn_counter.c: 324: }
  3314  001258  D003               	goto	l250
  3315  00125A                     l1997:
  3316                           
  3317                           ;Turn_counter.c: 325: else
  3318                           ;Turn_counter.c: 326: crc >>= 1;
  3319  00125A  90D8               	bcf	status,0,c
  3320  00125C  321E               	rrcf	modbus_CRC16@crc+1,f,c
  3321  00125E  321D               	rrcf	modbus_CRC16@crc,f,c
  3322  001260                     l250:
  3323  001260  061C               	decf	modbus_CRC16@i,f,c
  3324  001262                     L11:
  3325  001262  661C               	tstfsz	modbus_CRC16@i,c
  3326  001264  D7F0               	goto	l247
  3327  001266  2A1B               	incf	modbus_CRC16@pos,f,c
  3328  001268                     l2003:
  3329  001268  5013               	movf	modbus_CRC16@len,w,c
  3330  00126A  5C1B               	subwf	modbus_CRC16@pos,w,c
  3331  00126C  E3DD               	bnc	l1985
  3332                           
  3333                           ;Turn_counter.c: 327: }
  3334                           ;Turn_counter.c: 328: }
  3335                           ;Turn_counter.c: 333: crc = ((crc<<8)&0xff00)|((crc>>8)&0x00ff);
  3336  00126E  6A14               	clrf	??_modbus_CRC16& (0+255),c
  3337  001270  6815               	setf	(??_modbus_CRC16+1)& (0+255),c
  3338  001272  501D               	movf	modbus_CRC16@crc,w,c
  3339  001274  6E17               	movwf	(??_modbus_CRC16+3)& (0+255),c
  3340  001276  6A16               	clrf	(??_modbus_CRC16+2)& (0+255),c
  3341  001278  5014               	movf	??_modbus_CRC16,w,c
  3342  00127A  1616               	andwf	??_modbus_CRC16+2,f,c
  3343  00127C  5015               	movf	??_modbus_CRC16+1,w,c
  3344  00127E  1617               	andwf	??_modbus_CRC16+3,f,c
  3345  001280  C01E  F018         	movff	modbus_CRC16@crc+1,??_modbus_CRC16+4
  3346  001284  C018  F019         	movff	??_modbus_CRC16+4,??_modbus_CRC16+5
  3347  001288  6A1A               	clrf	(??_modbus_CRC16+6)& (0+255),c
  3348  00128A  5019               	movf	??_modbus_CRC16+5,w,c
  3349  00128C  1016               	iorwf	??_modbus_CRC16+2,w,c
  3350  00128E  6E1D               	movwf	modbus_CRC16@crc,c
  3351  001290  5017               	movf	??_modbus_CRC16+3,w,c
  3352  001292  6E1E               	movwf	modbus_CRC16@crc+1,c
  3353                           
  3354                           ;Turn_counter.c: 335: return crc;
  3355  001294  C01D  F011         	movff	modbus_CRC16@crc,?_modbus_CRC16
  3356  001298  C01E  F012         	movff	modbus_CRC16@crc+1,?_modbus_CRC16+1
  3357  00129C  0012               	return	
  3358  00129E                     __end_of_modbus_CRC16:
  3359                           	opt stack 0
  3360                           tblptru	equ	0xFF8
  3361                           tblptrh	equ	0xFF7
  3362                           tblptrl	equ	0xFF6
  3363                           tablat	equ	0xFF5
  3364                           prodh	equ	0xFF4
  3365                           prodl	equ	0xFF3
  3366                           postinc0	equ	0xFEE
  3367                           wreg	equ	0xFE8
  3368                           indf1	equ	0xFE7
  3369                           postinc1	equ	0xFE6
  3370                           postdec1	equ	0xFE5
  3371                           fsr1h	equ	0xFE2
  3372                           fsr1l	equ	0xFE1
  3373                           indf2	equ	0xFDF
  3374                           postinc2	equ	0xFDE
  3375                           postdec2	equ	0xFDD
  3376                           fsr2h	equ	0xFDA
  3377                           fsr2l	equ	0xFD9
  3378                           status	equ	0xFD8
  3379                           
  3380 ;; *************** function _modbus_reset *****************
  3381 ;; Defined at:
  3382 ;;		line 189 in file "Turn_counter.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  i               2   16[COMRAM] int 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;		None               void
  3389 ;; Registers used:
  3390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3397 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3400 ;;Total ram usage:        2 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    1
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_modbus_poll
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text9
  3412  00140C                     __ptext9:
  3413                           	opt stack 0
  3414  00140C                     _modbus_reset:
  3415                           	opt stack 29
  3416                           
  3417                           ;Turn_counter.c: 191: for(int i = 0; i < 32; i++)
  3418                           
  3419                           ;incstack = 0
  3420  00140C  6A12               	clrf	modbus_reset@i+1,c
  3421  00140E  6A11               	clrf	modbus_reset@i,c
  3422  001410  5012               	movf	modbus_reset@i+1,w,c
  3423  001412  0A80               	xorlw	128
  3424  001414  0F80               	addlw	-128
  3425  001416  0E20               	movlw	32
  3426  001418  B4D8               	btfsc	status,2,c
  3427  00141A  5C11               	subwf	modbus_reset@i,w,c
  3428  00141C  E20B               	bc	l2039
  3429                           
  3430                           ;Turn_counter.c: 192: rx_buf[i] = 0;
  3431  00141E  0E60               	movlw	low _rx_buf
  3432  001420  2411               	addwf	modbus_reset@i,w,c
  3433  001422  6ED9               	movwf	fsr2l,c
  3434  001424  0100               	movlb	0	; () banked
  3435  001426  0E00               	movlw	high _rx_buf
  3436  001428  2012               	addwfc	modbus_reset@i+1,w,c
  3437  00142A  6EDA               	movwf	fsr2h,c
  3438  00142C  6ADF               	clrf	indf2,c
  3439                           
  3440                           ; BSR set to: 0
  3441  00142E  4A11               	infsnz	modbus_reset@i,f,c
  3442  001430  2A12               	incf	modbus_reset@i+1,f,c
  3443  001432  D7EE               	goto	L12
  3444  001434                     l2039:
  3445                           
  3446                           ;Turn_counter.c: 195: wr_ptr=0;
  3447  001434  0E00               	movlw	0
  3448  001436  6E45               	movwf	_wr_ptr,c
  3449                           
  3450                           ;Turn_counter.c: 196: rd_ptr=0;
  3451  001438  6E40               	movwf	_rd_ptr,c
  3452  00143A  0C00               	retlw	0
  3453  00143C                     __end_of_modbus_reset:
  3454                           	opt stack 0
  3455                           tblptru	equ	0xFF8
  3456                           tblptrh	equ	0xFF7
  3457                           tblptrl	equ	0xFF6
  3458                           tablat	equ	0xFF5
  3459                           prodh	equ	0xFF4
  3460                           prodl	equ	0xFF3
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           indf1	equ	0xFE7
  3464                           postinc1	equ	0xFE6
  3465                           postdec1	equ	0xFE5
  3466                           fsr1h	equ	0xFE2
  3467                           fsr1l	equ	0xFE1
  3468                           indf2	equ	0xFDF
  3469                           postinc2	equ	0xFDE
  3470                           postdec2	equ	0xFDD
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _modbus_refresh *****************
  3476 ;; Defined at:
  3477 ;;		line 199 in file "Turn_counter.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  cmd_type        1    wreg     unsigned char 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  cmd_type        1   22[COMRAM] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3493 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3494 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3495 ;;Total ram usage:        4 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    2
  3498 ;; This function calls:
  3499 ;;		_EEPROM_WrByte
  3500 ;; This function is called by:
  3501 ;;		_modbus_poll
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text10
  3506  000818                     __ptext10:
  3507                           	opt stack 0
  3508  000818                     _modbus_refresh:
  3509                           	opt stack 27
  3510                           
  3511                           ;incstack = 0
  3512                           ;modbus_refresh@cmd_type stored from wreg
  3513  000818  6E17               	movwf	modbus_refresh@cmd_type,c
  3514                           
  3515                           ;Turn_counter.c: 202: if(cmd_type == 0x03)
  3516  00081A  5017               	movf	modbus_refresh@cmd_type,w,c
  3517  00081C  0A03               	xorlw	3
  3518  00081E  E15E               	bnz	l2061
  3519                           
  3520                           ;Turn_counter.c: 203: {
  3521                           ;Turn_counter.c: 204: holding_register[0] = set_zero;
  3522  000820  C1EA  F200         	movff	_set_zero,_holding_register
  3523  000824  C1EB  F201         	movff	_set_zero+1,_holding_register+1
  3524                           
  3525                           ;Turn_counter.c: 205: holding_register[1] = offset;
  3526  000828  C1E2  F202         	movff	_offset,_holding_register+2
  3527  00082C  C1E3  F203         	movff	_offset+1,_holding_register+3
  3528                           
  3529                           ;Turn_counter.c: 206: holding_register[2] = num_of_turns;
  3530  000830  C1F2  F204         	movff	_num_of_turns,_holding_register+4
  3531  000834  C1F3  F205         	movff	_num_of_turns+1,_holding_register+5
  3532                           
  3533                           ;Turn_counter.c: 207: holding_register[3] = grad;
  3534  000838  C1DE  F206         	movff	_grad,_holding_register+6
  3535  00083C  C1DF  F207         	movff	_grad+1,_holding_register+7
  3536                           
  3537                           ;Turn_counter.c: 208: holding_register[4] = turns_percent;
  3538  000840  C1EC  F208         	movff	_turns_percent,_holding_register+8
  3539  000844  C1ED  F209         	movff	_turns_percent+1,_holding_register+9
  3540                           
  3541                           ;Turn_counter.c: 209: holding_register[5] = V_detect;
  3542  000848  C08A  F20A         	movff	_V_detect,_holding_register+10
  3543  00084C  C08B  F20B         	movff	_V_detect+1,_holding_register+11
  3544                           
  3545                           ;Turn_counter.c: 210: holding_register[6] = current_max;
  3546  000850  C1F0  F20C         	movff	_current_max,_holding_register+12
  3547  000854  C1F1  F20D         	movff	_current_max+1,_holding_register+13
  3548                           
  3549                           ;Turn_counter.c: 211: holding_register[7] = ADC_current_rms;
  3550  000858  C1D6  F20E         	movff	_ADC_current_rms,_holding_register+14
  3551  00085C  C1D7  F20F         	movff	_ADC_current_rms+1,_holding_register+15
  3552                           
  3553                           ;Turn_counter.c: 212: holding_register[8] = overcurrent;
  3554  000860  C1E4  F210         	movff	_overcurrent,_holding_register+16
  3555  000864  C1E5  F211         	movff	_overcurrent+1,_holding_register+17
  3556                           
  3557                           ;Turn_counter.c: 213: holding_register[10] = turns_percent_press;
  3558  000868  C1EE  F214         	movff	_turns_percent_press,_holding_register+20
  3559  00086C  C1EF  F215         	movff	_turns_percent_press+1,_holding_register+21
  3560                           
  3561                           ;Turn_counter.c: 216: holding_register[11] = read_turns;
  3562  000870  C1E8  F216         	movff	_read_turns,_holding_register+22
  3563  000874  C1E9  F217         	movff	_read_turns+1,_holding_register+23
  3564                           
  3565                           ;Turn_counter.c: 217: holding_register[12] = ADC_current_result;
  3566  000878  C080  F218         	movff	_ADC_current_result,_holding_register+24
  3567  00087C  C081  F219         	movff	_ADC_current_result+1,_holding_register+25
  3568                           
  3569                           ;Turn_counter.c: 218: holding_register[13] = ADC_current_max;
  3570  000880  C1D4  F21A         	movff	_ADC_current_max,_holding_register+26
  3571  000884  C1D5  F21B         	movff	_ADC_current_max+1,_holding_register+27
  3572                           
  3573                           ;Turn_counter.c: 219: holding_register[14] = ADC_current_min;
  3574  000888  C1F4  F21C         	movff	_ADC_current_min,_holding_register+28
  3575  00088C  C1F5  F21D         	movff	_ADC_current_min+1,_holding_register+29
  3576                           
  3577                           ;Turn_counter.c: 220: holding_register[16] = (unsigned int)bd_rate_code;
  3578  000890  C04C  F220         	movff	_bd_rate_code,_holding_register+32
  3579  000894  0102               	movlb	2	; () banked
  3580  000896  6B21               	clrf	(_holding_register+33)& (0+255),b
  3581                           
  3582                           ;Turn_counter.c: 222: holding_register[21] = (unsigned int)dev_id;
  3583  000898  C04D  F22A         	movff	_dev_id,_holding_register+42
  3584  00089C  6B2B               	clrf	(_holding_register+43)& (0+255),b
  3585                           
  3586                           ; BSR set to: 2
  3587                           ;Turn_counter.c: 223: holding_register[25] = (unsigned int)16;
  3588  00089E  6B33               	clrf	(_holding_register+51)& (0+255),b
  3589  0008A0  0E10               	movlw	16
  3590  0008A2  6F32               	movwf	(_holding_register+50)& (0+255),b
  3591                           
  3592                           ; BSR set to: 2
  3593                           ;Turn_counter.c: 225: holding_register[30] = (unsigned int)CHANGE_MOTOR;
  3594  0008A4  C046  F23C         	movff	_CHANGE_MOTOR,_holding_register+60
  3595  0008A8  C047  F23D         	movff	_CHANGE_MOTOR+1,_holding_register+61
  3596                           
  3597                           ; BSR set to: 2
  3598                           ;Turn_counter.c: 226: holding_register[31] = (unsigned int)POT_MIN;
  3599  0008AC  C04A  F23E         	movff	_POT_MIN,_holding_register+62
  3600  0008B0  C04B  F23F         	movff	_POT_MIN+1,_holding_register+63
  3601                           
  3602                           ; BSR set to: 2
  3603                           ;Turn_counter.c: 227: holding_register[32] = (unsigned int)SET_MIN;
  3604  0008B4  C1DC  F240         	movff	_SET_MIN,_holding_register+64
  3605  0008B8  C1DD  F241         	movff	_SET_MIN+1,_holding_register+65
  3606                           
  3607                           ; BSR set to: 2
  3608                           ;Turn_counter.c: 228: holding_register[33] = (unsigned int)POT_MAX;
  3609  0008BC  C048  F242         	movff	_POT_MAX,_holding_register+66
  3610  0008C0  C049  F243         	movff	_POT_MAX+1,_holding_register+67
  3611                           
  3612                           ; BSR set to: 2
  3613                           ;Turn_counter.c: 229: holding_register[34] = (unsigned int)SET_MAX;
  3614  0008C4  C1DA  F244         	movff	_SET_MAX,_holding_register+68
  3615  0008C8  C1DB  F245         	movff	_SET_MAX+1,_holding_register+69
  3616                           
  3617                           ; BSR set to: 2
  3618                           ;Turn_counter.c: 230: holding_register[35] = (unsigned int)GRAD_2;
  3619  0008CC  C086  F246         	movff	_GRAD_2,_holding_register+70
  3620  0008D0  C087  F247         	movff	_GRAD_2+1,_holding_register+71
  3621                           
  3622                           ; BSR set to: 2
  3623                           ;Turn_counter.c: 231: holding_register[36] = (unsigned int)TURN_PERCENT_2;
  3624  0008D4  C088  F248         	movff	_TURN_PERCENT_2,_holding_register+72
  3625  0008D8  C089  F249         	movff	_TURN_PERCENT_2+1,_holding_register+73
  3626  0008DC                     l2061:
  3627                           
  3628                           ;Turn_counter.c: 233: }
  3629                           ;Turn_counter.c: 236: if(cmd_type == 0x06)
  3630  0008DC  5017               	movf	modbus_refresh@cmd_type,w,c
  3631  0008DE  0A06               	xorlw	6
  3632  0008E0  E056               	bz	l2077
  3633  0008E2  D06B               	goto	l224
  3634  0008E4                     l226:
  3635                           
  3636                           ;Turn_counter.c: 240: set_zero = holding_register[0];
  3637  0008E4  C200  F1EA         	movff	_holding_register,_set_zero
  3638  0008E8  C201  F1EB         	movff	_holding_register+1,_set_zero+1
  3639                           
  3640                           ;Turn_counter.c: 241: break;
  3641  0008EC  D066               	goto	l224
  3642  0008EE                     l228:
  3643                           
  3644                           ;Turn_counter.c: 244: num_of_turns = holding_register[2];
  3645  0008EE  C204  F1F2         	movff	_holding_register+4,_num_of_turns
  3646  0008F2  C205  F1F3         	movff	_holding_register+5,_num_of_turns+1
  3647                           
  3648                           ;Turn_counter.c: 245: EEPROM_WrByte(3,num_of_turns & 0x00ff);
  3649  0008F6  C1F2  F011         	movff	_num_of_turns,EEPROM_WrByte@bData
  3650  0008FA  0E03               	movlw	3
  3651  0008FC  ECC7  F009         	call	_EEPROM_WrByte
  3652                           
  3653                           ;Turn_counter.c: 246: EEPROM_WrByte(4,num_of_turns >> 8);
  3654  000900  0101               	movlb	1	; () banked
  3655  000902  C1F3  F014         	movff	_num_of_turns+1,??_modbus_refresh
  3656  000906  C014  F015         	movff	??_modbus_refresh,??_modbus_refresh+1
  3657  00090A  6A16               	clrf	(??_modbus_refresh+2)& (0+255),c
  3658  00090C  5015               	movf	??_modbus_refresh+1,w,c
  3659  00090E  6E11               	movwf	EEPROM_WrByte@bData,c
  3660  000910  0E04               	movlw	4
  3661  000912  ECC7  F009         	call	_EEPROM_WrByte
  3662                           
  3663                           ;Turn_counter.c: 247: break;
  3664  000916  D051               	goto	l224
  3665  000918                     l229:
  3666                           
  3667                           ;Turn_counter.c: 250: current_max = holding_register[6];
  3668  000918  C20C  F1F0         	movff	_holding_register+12,_current_max
  3669  00091C  C20D  F1F1         	movff	_holding_register+13,_current_max+1
  3670                           
  3671                           ;Turn_counter.c: 251: EEPROM_WrByte(5,current_max & 0x00ff);
  3672  000920  C1F0  F011         	movff	_current_max,EEPROM_WrByte@bData
  3673  000924  0E05               	movlw	5
  3674  000926  ECC7  F009         	call	_EEPROM_WrByte
  3675                           
  3676                           ;Turn_counter.c: 252: EEPROM_WrByte(6,current_max >> 8);
  3677  00092A  0101               	movlb	1	; () banked
  3678  00092C  C1F1  F014         	movff	_current_max+1,??_modbus_refresh
  3679  000930  C014  F015         	movff	??_modbus_refresh,??_modbus_refresh+1
  3680  000934  6A16               	clrf	(??_modbus_refresh+2)& (0+255),c
  3681  000936  5015               	movf	??_modbus_refresh+1,w,c
  3682  000938  6E11               	movwf	EEPROM_WrByte@bData,c
  3683  00093A  0E06               	movlw	6
  3684  00093C  ECC7  F009         	call	_EEPROM_WrByte
  3685                           
  3686                           ;Turn_counter.c: 253: break;
  3687  000940  D03C               	goto	l224
  3688  000942                     l230:
  3689                           
  3690                           ;Turn_counter.c: 256: bd_rate_code = (unsigned char)holding_register[16];
  3691  000942  C220  F04C         	movff	_holding_register+32,_bd_rate_code
  3692                           
  3693                           ;Turn_counter.c: 257: bd_rate_fl = 1;
  3694  000946  0E01               	movlw	1
  3695  000948  6E3D               	movwf	_bd_rate_fl,c
  3696                           
  3697                           ;Turn_counter.c: 258: break;
  3698  00094A  D037               	goto	l224
  3699  00094C                     l2071:
  3700                           
  3701                           ;Turn_counter.c: 261: id_change = 1;
  3702  00094C  0E01               	movlw	1
  3703  00094E  6E3F               	movwf	_id_change,c
  3704                           
  3705                           ;Turn_counter.c: 262: break;
  3706  000950  D034               	goto	l224
  3707  000952                     l232:
  3708                           
  3709                           ;Turn_counter.c: 265: CHANGE_MOTOR = (unsigned char)holding_register[30];
  3710  000952  0102               	movlb	2	; () banked
  3711  000954  C23C  F046         	movff	_holding_register+60,_CHANGE_MOTOR
  3712  000958  6A47               	clrf	_CHANGE_MOTOR+1,c
  3713                           
  3714                           ; BSR set to: 2
  3715                           ;Turn_counter.c: 266: EEPROM_WrByte(13,CHANGE_MOTOR & 0x00ff);
  3716  00095A  C046  F011         	movff	_CHANGE_MOTOR,EEPROM_WrByte@bData
  3717  00095E  0E0D               	movlw	13
  3718  000960  ECC7  F009         	call	_EEPROM_WrByte
  3719                           
  3720                           ;Turn_counter.c: 267: EEPROM_WrByte(14,CHANGE_MOTOR >> 8);
  3721  000964  C047  F014         	movff	_CHANGE_MOTOR+1,??_modbus_refresh
  3722  000968  C014  F015         	movff	??_modbus_refresh,??_modbus_refresh+1
  3723  00096C  6A16               	clrf	(??_modbus_refresh+2)& (0+255),c
  3724  00096E  5015               	movf	??_modbus_refresh+1,w,c
  3725  000970  6E11               	movwf	EEPROM_WrByte@bData,c
  3726  000972  0E0E               	movlw	14
  3727  000974  ECC7  F009         	call	_EEPROM_WrByte
  3728                           
  3729                           ;Turn_counter.c: 268: break;
  3730  000978  D020               	goto	l224
  3731  00097A                     l233:
  3732                           
  3733                           ;Turn_counter.c: 271: SET_MIN = (unsigned char)holding_register[32];
  3734  00097A  C240  F1DC         	movff	_holding_register+64,_SET_MIN
  3735  00097E  0101               	movlb	1	; () banked
  3736  000980  6BDD               	clrf	(_SET_MIN+1)& (0+255),b
  3737                           
  3738                           ;Turn_counter.c: 272: break;
  3739  000982  D01B               	goto	l224
  3740  000984                     l234:
  3741                           
  3742                           ;Turn_counter.c: 275: SET_MAX = (unsigned char)holding_register[34];
  3743  000984  C244  F1DA         	movff	_holding_register+68,_SET_MAX
  3744  000988  0101               	movlb	1	; () banked
  3745  00098A  6BDB               	clrf	(_SET_MAX+1)& (0+255),b
  3746                           
  3747                           ;Turn_counter.c: 276: break;
  3748  00098C  D016               	goto	l224
  3749  00098E                     l2077:
  3750  00098E  C030  F014         	movff	_addr_buf_1,??_modbus_refresh
  3751  000992  C031  F015         	movff	_addr_buf_1+1,??_modbus_refresh+1
  3752                           
  3753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3754                           ; Switch size 1, requested type "speed"
  3755                           ; Number of cases is 1, Range of values is 0 to 0
  3756                           ; switch strategies available:
  3757                           ; Name         Instructions Cycles
  3758                           ; simple_byte            4     3 (average)
  3759                           ;	Chosen strategy is simple_byte
  3760  000996  5015               	movf	??_modbus_refresh+1,w,c
  3761  000998  E110               	bnz	l224
  3762                           
  3763                           ; Switch size 1, requested type "speed"
  3764                           ; Number of cases is 8, Range of values is 0 to 34
  3765                           ; switch strategies available:
  3766                           ; Name         Instructions Cycles
  3767                           ; simple_byte           25    13 (average)
  3768                           ;	Chosen strategy is simple_byte
  3769  00099A  5014               	movf	??_modbus_refresh,w,c
  3770  00099C  E0A3               	bz	l226
  3771  00099E  0A02               	xorlw	2	; case 2
  3772  0009A0  E0A6               	bz	l228
  3773  0009A2  0A04               	xorlw	4	; case 6
  3774  0009A4  E0B9               	bz	l229
  3775  0009A6  0A16               	xorlw	22	; case 16
  3776  0009A8  E0CC               	bz	l230
  3777  0009AA  0A03               	xorlw	3	; case 19
  3778  0009AC  E0CF               	bz	l2071
  3779  0009AE  0A0D               	xorlw	13	; case 30
  3780  0009B0  E0D0               	bz	l232
  3781  0009B2  0A3E               	xorlw	62	; case 32
  3782  0009B4  E0E2               	bz	l233
  3783  0009B6  0A02               	xorlw	2	; case 34
  3784  0009B8  E0E5               	bz	l234
  3785  0009BA                     l224:
  3786                           
  3787                           ;Turn_counter.c: 279: }
  3788                           ;Turn_counter.c: 280: LATCbits.LATC4 = 1;
  3789  0009BA  888B               	bsf	3979,4,c	;volatile
  3790                           
  3791                           ;Turn_counter.c: 281: LATCbits.LATC5 = 1;
  3792  0009BC  8A8B               	bsf	3979,5,c	;volatile
  3793                           
  3794                           ;Turn_counter.c: 282: led_cnt = 0;
  3795  0009BE  0E00               	movlw	0
  3796  0009C0  0101               	movlb	1	; () banked
  3797  0009C2  6FF7               	movwf	(_led_cnt+1)& (0+255),b
  3798  0009C4  6FF6               	movwf	_led_cnt& (0+255),b
  3799                           
  3800                           ; BSR set to: 1
  3801  0009C6  0C00               	retlw	0
  3802  0009C8                     __end_of_modbus_refresh:
  3803                           	opt stack 0
  3804                           tblptru	equ	0xFF8
  3805                           tblptrh	equ	0xFF7
  3806                           tblptrl	equ	0xFF6
  3807                           tablat	equ	0xFF5
  3808                           prodh	equ	0xFF4
  3809                           prodl	equ	0xFF3
  3810                           postinc0	equ	0xFEE
  3811                           wreg	equ	0xFE8
  3812                           indf1	equ	0xFE7
  3813                           postinc1	equ	0xFE6
  3814                           postdec1	equ	0xFE5
  3815                           fsr1h	equ	0xFE2
  3816                           fsr1l	equ	0xFE1
  3817                           indf2	equ	0xFDF
  3818                           postinc2	equ	0xFDE
  3819                           postdec2	equ	0xFDD
  3820                           fsr2h	equ	0xFDA
  3821                           fsr2l	equ	0xFD9
  3822                           status	equ	0xFD8
  3823                           
  3824 ;; *************** function _EEPROM_WrByte *****************
  3825 ;; Defined at:
  3826 ;;		line 73 in file "Turn_counter.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  bAdd            1    wreg     unsigned char 
  3829 ;;  bData           1   16[COMRAM] unsigned char 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  bAdd            1   17[COMRAM] unsigned char 
  3832 ;;  GIEBitsVal      1   18[COMRAM] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;		None               void
  3835 ;; Registers used:
  3836 ;;		wreg, status,2
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3842 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3845 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3846 ;;Total ram usage:        3 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    1
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_modbus_refresh
  3853 ;;		_modbus_poll
  3854 ;;		_main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text11
  3859  00138E                     __ptext11:
  3860                           	opt stack 0
  3861  00138E                     _EEPROM_WrByte:
  3862                           	opt stack 27
  3863                           
  3864                           ; BSR set to: 1
  3865                           ;incstack = 0
  3866                           ;EEPROM_WrByte@bAdd stored from wreg
  3867  00138E  6E12               	movwf	EEPROM_WrByte@bAdd,c
  3868                           
  3869                           ;Turn_counter.c: 75: unsigned char GIEBitsVal = 0;
  3870  001390  0E00               	movlw	0
  3871  001392  6E13               	movwf	EEPROM_WrByte@GIEBitsVal,c
  3872                           
  3873                           ;Turn_counter.c: 77: EEADR = bAdd & 0xff;
  3874  001394  C012  FF74         	movff	EEPROM_WrByte@bAdd,3956	;volatile
  3875                           
  3876                           ;Turn_counter.c: 78: EEDATA = bData;
  3877  001398  C011  FF73         	movff	EEPROM_WrByte@bData,3955	;volatile
  3878                           
  3879                           ;Turn_counter.c: 79: EECON1bits.EEPGD = 0;
  3880  00139C  9E7F               	bcf	3967,7,c	;volatile
  3881                           
  3882                           ;Turn_counter.c: 80: EECON1bits.CFGS = 0;
  3883  00139E  9C7F               	bcf	3967,6,c	;volatile
  3884                           
  3885                           ;Turn_counter.c: 81: EECON1bits.WREN = 1;
  3886  0013A0  847F               	bsf	3967,2,c	;volatile
  3887                           
  3888                           ;Turn_counter.c: 83: GIEBitsVal = INTCONbits.GIE;
  3889  0013A2  BEF2               	btfsc	intcon,7,c	;volatile
  3890  0013A4  0E01               	movlw	1
  3891  0013A6  6E13               	movwf	EEPROM_WrByte@GIEBitsVal,c
  3892                           
  3893                           ;Turn_counter.c: 84: INTCONbits.GIE = 0;
  3894  0013A8  9EF2               	bcf	intcon,7,c	;volatile
  3895                           
  3896                           ;Turn_counter.c: 85: __nop();
  3897  0013AA  F000               	nop	
  3898                           
  3899                           ;Turn_counter.c: 86: __nop();
  3900  0013AC  F000               	nop	
  3901                           
  3902                           ;Turn_counter.c: 87: EECON2 = 0x55;
  3903  0013AE  0E55               	movlw	85
  3904  0013B0  6E7E               	movwf	3966,c	;volatile
  3905                           
  3906                           ;Turn_counter.c: 88: EECON2 = 0xAA;
  3907  0013B2  0EAA               	movlw	170
  3908  0013B4  6E7E               	movwf	3966,c	;volatile
  3909                           
  3910                           ;Turn_counter.c: 89: EECON1bits.WR = 1;
  3911  0013B6  827F               	bsf	3967,1,c	;volatile
  3912  0013B8                     l153:
  3913  0013B8  B27F               	btfsc	3967,1,c	;volatile
  3914  0013BA  D7FE               	goto	l153
  3915                           
  3916                           ;Turn_counter.c: 91: EECON1bits.WREN = 0;
  3917  0013BC  947F               	bcf	3967,2,c	;volatile
  3918                           
  3919                           ;Turn_counter.c: 92: INTCONbits.GIE = 1;
  3920  0013BE  8EF2               	bsf	intcon,7,c	;volatile
  3921                           
  3922                           ;Turn_counter.c: 93: INTCONbits.GIE = GIEBitsVal;
  3923  0013C0  B013               	btfsc	EEPROM_WrByte@GIEBitsVal,0,c
  3924  0013C2  D002               	bra	u885
  3925  0013C4  9EF2               	bcf	intcon,7,c	;volatile
  3926  0013C6  D001               	bra	u886
  3927  0013C8                     u885:
  3928  0013C8  8EF2               	bsf	intcon,7,c	;volatile
  3929  0013CA                     u886:
  3930                           
  3931                           ;Turn_counter.c: 94: __nop();
  3932  0013CA  F000               	nop	
  3933                           
  3934                           ;Turn_counter.c: 95: __nop();
  3935  0013CC  F000               	nop	
  3936  0013CE  0012               	return	
  3937  0013D0                     __end_of_EEPROM_WrByte:
  3938                           	opt stack 0
  3939                           tblptru	equ	0xFF8
  3940                           tblptrh	equ	0xFF7
  3941                           tblptrl	equ	0xFF6
  3942                           tablat	equ	0xFF5
  3943                           prodh	equ	0xFF4
  3944                           prodl	equ	0xFF3
  3945                           intcon	equ	0xFF2
  3946                           postinc0	equ	0xFEE
  3947                           wreg	equ	0xFE8
  3948                           indf1	equ	0xFE7
  3949                           postinc1	equ	0xFE6
  3950                           postdec1	equ	0xFE5
  3951                           fsr1h	equ	0xFE2
  3952                           fsr1l	equ	0xFE1
  3953                           indf2	equ	0xFDF
  3954                           postinc2	equ	0xFDE
  3955                           postdec2	equ	0xFDD
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function ___lwtoft *****************
  3961 ;; Defined at:
  3962 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  c               2   24[COMRAM] unsigned int 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  3   24[COMRAM] float 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3976 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3979 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3980 ;;Total ram usage:        3 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    2
  3983 ;; This function calls:
  3984 ;;		___ftpack
  3985 ;; This function is called by:
  3986 ;;		_main
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text12
  3991  001498                     __ptext12:
  3992                           	opt stack 0
  3993  001498                     ___lwtoft:
  3994                           	opt stack 28
  3995                           
  3996                           ;incstack = 0
  3997  001498  C019  F011         	movff	___lwtoft@c,___ftpack@arg
  3998  00149C  C01A  F012         	movff	___lwtoft@c+1,___ftpack@arg+1
  3999  0014A0  6A13               	clrf	___ftpack@arg+2,c
  4000  0014A2  0E8E               	movlw	142
  4001  0014A4  6E14               	movwf	___ftpack@exp,c
  4002  0014A6  0E00               	movlw	0
  4003  0014A8  6A15               	clrf	___ftpack@sign,c
  4004  0014AA  ECCD  F008         	call	___ftpack	;wreg free
  4005  0014AE  C011  F019         	movff	?___ftpack,?___lwtoft
  4006  0014B2  C012  F01A         	movff	?___ftpack+1,?___lwtoft+1
  4007  0014B6  C013  F01B         	movff	?___ftpack+2,?___lwtoft+2
  4008  0014BA  0012               	return	
  4009  0014BC                     __end_of___lwtoft:
  4010                           	opt stack 0
  4011                           tblptru	equ	0xFF8
  4012                           tblptrh	equ	0xFF7
  4013                           tblptrl	equ	0xFF6
  4014                           tablat	equ	0xFF5
  4015                           prodh	equ	0xFF4
  4016                           prodl	equ	0xFF3
  4017                           intcon	equ	0xFF2
  4018                           postinc0	equ	0xFEE
  4019                           wreg	equ	0xFE8
  4020                           indf1	equ	0xFE7
  4021                           postinc1	equ	0xFE6
  4022                           postdec1	equ	0xFE5
  4023                           fsr1h	equ	0xFE2
  4024                           fsr1l	equ	0xFE1
  4025                           indf2	equ	0xFDF
  4026                           postinc2	equ	0xFDE
  4027                           postdec2	equ	0xFDD
  4028                           fsr2h	equ	0xFDA
  4029                           fsr2l	equ	0xFD9
  4030                           status	equ	0xFD8
  4031                           
  4032 ;; *************** function ___lwdiv *****************
  4033 ;; Defined at:
  4034 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  dividend        2   16[COMRAM] unsigned int 
  4037 ;;  divisor         2   18[COMRAM] unsigned int 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  quotient        2   20[COMRAM] unsigned int 
  4040 ;;  counter         1   22[COMRAM] unsigned char 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  2   16[COMRAM] unsigned int 
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4051 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4053 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4054 ;;Total ram usage:        7 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    1
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_main
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text13
  4065  001344                     __ptext13:
  4066                           	opt stack 0
  4067  001344                     ___lwdiv:
  4068                           	opt stack 29
  4069                           
  4070                           ;incstack = 0
  4071  001344  6A16               	clrf	___lwdiv@quotient+1,c
  4072  001346  6A15               	clrf	___lwdiv@quotient,c
  4073  001348  5014               	movf	___lwdiv@divisor+1,w,c
  4074  00134A  1013               	iorwf	___lwdiv@divisor,w,c
  4075  00134C  E01B               	bz	l896
  4076  00134E  0E01               	movlw	1
  4077  001350  6E17               	movwf	___lwdiv@counter,c
  4078  001352  D004               	goto	l2581
  4079  001354                     l2579:
  4080  001354  90D8               	bcf	status,0,c
  4081  001356  3613               	rlcf	___lwdiv@divisor,f,c
  4082  001358  3614               	rlcf	___lwdiv@divisor+1,f,c
  4083  00135A  2A17               	incf	___lwdiv@counter,f,c
  4084  00135C                     l2581:
  4085  00135C  AE14               	btfss	___lwdiv@divisor+1,7,c
  4086  00135E  D7FA               	goto	l2579
  4087  001360                     l2583:
  4088  001360  90D8               	bcf	status,0,c
  4089  001362  3615               	rlcf	___lwdiv@quotient,f,c
  4090  001364  3616               	rlcf	___lwdiv@quotient+1,f,c
  4091  001366  5013               	movf	___lwdiv@divisor,w,c
  4092  001368  5C11               	subwf	___lwdiv@dividend,w,c
  4093  00136A  5014               	movf	___lwdiv@divisor+1,w,c
  4094  00136C  5812               	subwfb	___lwdiv@dividend+1,w,c
  4095  00136E  E305               	bnc	l2591
  4096  001370  5013               	movf	___lwdiv@divisor,w,c
  4097  001372  5E11               	subwf	___lwdiv@dividend,f,c
  4098  001374  5014               	movf	___lwdiv@divisor+1,w,c
  4099  001376  5A12               	subwfb	___lwdiv@dividend+1,f,c
  4100  001378  8015               	bsf	___lwdiv@quotient,0,c
  4101  00137A                     l2591:
  4102  00137A  90D8               	bcf	status,0,c
  4103  00137C  3214               	rrcf	___lwdiv@divisor+1,f,c
  4104  00137E  3213               	rrcf	___lwdiv@divisor,f,c
  4105  001380  2E17               	decfsz	___lwdiv@counter,f,c
  4106  001382  D7EE               	goto	l2583
  4107  001384                     l896:
  4108  001384  C015  F011         	movff	___lwdiv@quotient,?___lwdiv
  4109  001388  C016  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4110  00138C  0012               	return	
  4111  00138E                     __end_of___lwdiv:
  4112                           	opt stack 0
  4113                           tblptru	equ	0xFF8
  4114                           tblptrh	equ	0xFF7
  4115                           tblptrl	equ	0xFF6
  4116                           tablat	equ	0xFF5
  4117                           prodh	equ	0xFF4
  4118                           prodl	equ	0xFF3
  4119                           intcon	equ	0xFF2
  4120                           postinc0	equ	0xFEE
  4121                           wreg	equ	0xFE8
  4122                           indf1	equ	0xFE7
  4123                           postinc1	equ	0xFE6
  4124                           postdec1	equ	0xFE5
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           indf2	equ	0xFDF
  4128                           postinc2	equ	0xFDE
  4129                           postdec2	equ	0xFDD
  4130                           fsr2h	equ	0xFDA
  4131                           fsr2l	equ	0xFD9
  4132                           status	equ	0xFD8
  4133                           
  4134 ;; *************** function ___fttol *****************
  4135 ;; Defined at:
  4136 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  f1              3   41[COMRAM] float 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  lval            4    6[BANK0 ] unsigned long 
  4141 ;;  exp1            1   10[BANK0 ] unsigned char 
  4142 ;;  sign1           1    5[BANK0 ] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  4   41[COMRAM] long 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4153 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4155 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4156 ;;Total ram usage:       15 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text14
  4167  000DEA                     __ptext14:
  4168                           	opt stack 0
  4169  000DEA                     ___fttol:
  4170                           	opt stack 29
  4171                           
  4172                           ;incstack = 0
  4173  000DEA  C02C  F095         	movff	___fttol@f1+2,??___fttol
  4174  000DEE  0100               	movlb	0	; () banked
  4175  000DF0  6B96               	clrf	(??___fttol+1)& (0+255),b
  4176  000DF2  6B97               	clrf	(??___fttol+2)& (0+255),b
  4177  000DF4  342B               	rlcf	___fttol@f1+1,w,c
  4178  000DF6  3795               	rlcf	??___fttol& (0+255),f,b
  4179  000DF8  E301               	bnc	u1701
  4180  000DFA  8196               	bsf	(??___fttol+1)& (0+255),0,b
  4181  000DFC                     u1701:
  4182  000DFC  0100               	movlb	0	; () banked
  4183  000DFE  5195               	movf	??___fttol& (0+255),w,b
  4184  000E00  6F9F               	movwf	___fttol@exp1& (0+255),b
  4185  000E02  679F               	tstfsz	___fttol@exp1& (0+255),b
  4186  000E04  D006               	goto	l2883
  4187                           
  4188                           ; BSR set to: 0
  4189  000E06  0E00               	movlw	0
  4190  000E08  6E2A               	movwf	?___fttol,c
  4191  000E0A  6E2B               	movwf	?___fttol+1,c
  4192  000E0C  6E2C               	movwf	?___fttol+2,c
  4193  000E0E  6E2D               	movwf	?___fttol+3,c
  4194  000E10  0C00               	retlw	0
  4195  000E12                     l2883:
  4196                           
  4197                           ; BSR set to: 0
  4198  000E12  0E17               	movlw	23
  4199  000E14  0100               	movlb	0	; () banked
  4200  000E16  6F95               	movwf	??___fttol& (0+255),b
  4201  000E18  C02A  F096         	movff	___fttol@f1,??___fttol+1
  4202  000E1C  C02B  F097         	movff	___fttol@f1+1,??___fttol+2
  4203  000E20  C02C  F098         	movff	___fttol@f1+2,??___fttol+3
  4204  000E24  2995               	incf	??___fttol& (0+255),w,b
  4205  000E26  6F99               	movwf	(??___fttol+4)& (0+255),b
  4206  000E28  D005               	goto	u1720
  4207  000E2A                     u1725:
  4208  000E2A  0100               	movlb	0	; () banked
  4209  000E2C  90D8               	bcf	status,0,c
  4210  000E2E  3398               	rrcf	(??___fttol+3)& (0+255),f,b
  4211  000E30  3397               	rrcf	(??___fttol+2)& (0+255),f,b
  4212  000E32  3396               	rrcf	(??___fttol+1)& (0+255),f,b
  4213  000E34                     u1720:
  4214  000E34  0100               	movlb	0	; () banked
  4215  000E36  2F99               	decfsz	(??___fttol+4)& (0+255),f,b
  4216  000E38  D7F8               	goto	u1725
  4217  000E3A  5196               	movf	(??___fttol+1)& (0+255),w,b
  4218  000E3C  6F9A               	movwf	___fttol@sign1& (0+255),b
  4219                           
  4220                           ; BSR set to: 0
  4221  000E3E  8E2B               	bsf	___fttol@f1+1,7,c
  4222                           
  4223                           ; BSR set to: 0
  4224  000E40  6A2C               	clrf	___fttol@f1+2,c
  4225                           
  4226                           ; BSR set to: 0
  4227  000E42  502A               	movf	___fttol@f1,w,c
  4228  000E44  6F9B               	movwf	___fttol@lval& (0+255),b
  4229  000E46  502B               	movf	___fttol@f1+1,w,c
  4230  000E48  6F9C               	movwf	(___fttol@lval+1)& (0+255),b
  4231  000E4A  502C               	movf	___fttol@f1+2,w,c
  4232  000E4C  6F9D               	movwf	(___fttol@lval+2)& (0+255),b
  4233  000E4E  6B9E               	clrf	(___fttol@lval+3)& (0+255),b
  4234                           
  4235                           ; BSR set to: 0
  4236  000E50  0E8E               	movlw	142
  4237  000E52  5F9F               	subwf	___fttol@exp1& (0+255),f,b
  4238                           
  4239                           ; BSR set to: 0
  4240  000E54  AF9F               	btfss	___fttol@exp1& (0+255),7,b
  4241  000E56  D016               	goto	l2905
  4242                           
  4243                           ; BSR set to: 0
  4244  000E58  519F               	movf	___fttol@exp1& (0+255),w,b
  4245  000E5A  0A80               	xorlw	128
  4246  000E5C  6F95               	movwf	??___fttol& (0+255),b
  4247  000E5E  0EF1               	movlw	241
  4248  000E60  0A80               	xorlw	128
  4249  000E62  5D95               	subwf	??___fttol& (0+255),w,b
  4250  000E64  E206               	bc	l2901
  4251                           
  4252                           ; BSR set to: 0
  4253  000E66  0E00               	movlw	0
  4254  000E68  6E2A               	movwf	?___fttol,c
  4255  000E6A  6E2B               	movwf	?___fttol+1,c
  4256  000E6C  6E2C               	movwf	?___fttol+2,c
  4257  000E6E  6E2D               	movwf	?___fttol+3,c
  4258  000E70  0C00               	retlw	0
  4259  000E72                     l2901:
  4260                           
  4261                           ; BSR set to: 0
  4262  000E72  90D8               	bcf	status,0,c
  4263  000E74  0100               	movlb	0	; () banked
  4264  000E76  339E               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4265  000E78  339D               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4266  000E7A  339C               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4267  000E7C  339B               	rrcf	___fttol@lval& (0+255),f,b
  4268                           
  4269                           ; BSR set to: 0
  4270  000E7E  3F9F               	incfsz	___fttol@exp1& (0+255),f,b
  4271  000E80  D7F8               	goto	l2901
  4272  000E82  D014               	goto	l2915
  4273  000E84                     l2905:
  4274                           
  4275                           ; BSR set to: 0
  4276  000E84  0E17               	movlw	23
  4277  000E86  0100               	movlb	0	; () banked
  4278  000E88  659F               	cpfsgt	___fttol@exp1& (0+255),b
  4279  000E8A  D00D               	goto	l2913
  4280                           
  4281                           ; BSR set to: 0
  4282  000E8C  0E00               	movlw	0
  4283  000E8E  6E2A               	movwf	?___fttol,c
  4284  000E90  6E2B               	movwf	?___fttol+1,c
  4285  000E92  6E2C               	movwf	?___fttol+2,c
  4286  000E94  6E2D               	movwf	?___fttol+3,c
  4287  000E96  0C00               	retlw	0
  4288  000E98                     l2911:
  4289                           
  4290                           ; BSR set to: 0
  4291  000E98  90D8               	bcf	status,0,c
  4292  000E9A  0100               	movlb	0	; () banked
  4293  000E9C  379B               	rlcf	___fttol@lval& (0+255),f,b
  4294  000E9E  379C               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4295  000EA0  379D               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4296  000EA2  379E               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4297  000EA4  079F               	decf	___fttol@exp1& (0+255),f,b
  4298  000EA6                     l2913:
  4299                           
  4300                           ; BSR set to: 0
  4301  000EA6  0100               	movlb	0	; () banked
  4302  000EA8  679F               	tstfsz	___fttol@exp1& (0+255),b
  4303  000EAA  D7F6               	goto	l2911
  4304  000EAC                     l2915:
  4305                           
  4306                           ; BSR set to: 0
  4307  000EAC  0100               	movlb	0	; () banked
  4308  000EAE  519A               	movf	___fttol@sign1& (0+255),w,b
  4309  000EB0  E008               	bz	l2919
  4310                           
  4311                           ; BSR set to: 0
  4312  000EB2  1F9E               	comf	(___fttol@lval+3)& (0+255),f,b
  4313  000EB4  1F9D               	comf	(___fttol@lval+2)& (0+255),f,b
  4314  000EB6  1F9C               	comf	(___fttol@lval+1)& (0+255),f,b
  4315  000EB8  6D9B               	negf	___fttol@lval& (0+255),b
  4316  000EBA  0E00               	movlw	0
  4317  000EBC  239C               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4318  000EBE  239D               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4319  000EC0  239E               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4320  000EC2                     l2919:
  4321                           
  4322                           ; BSR set to: 0
  4323  000EC2  C09B  F02A         	movff	___fttol@lval,?___fttol
  4324  000EC6  C09C  F02B         	movff	___fttol@lval+1,?___fttol+1
  4325  000ECA  C09D  F02C         	movff	___fttol@lval+2,?___fttol+2
  4326  000ECE  C09E  F02D         	movff	___fttol@lval+3,?___fttol+3
  4327  000ED2  0012               	return	
  4328  000ED4                     __end_of___fttol:
  4329                           	opt stack 0
  4330                           tblptru	equ	0xFF8
  4331                           tblptrh	equ	0xFF7
  4332                           tblptrl	equ	0xFF6
  4333                           tablat	equ	0xFF5
  4334                           prodh	equ	0xFF4
  4335                           prodl	equ	0xFF3
  4336                           intcon	equ	0xFF2
  4337                           postinc0	equ	0xFEE
  4338                           wreg	equ	0xFE8
  4339                           indf1	equ	0xFE7
  4340                           postinc1	equ	0xFE6
  4341                           postdec1	equ	0xFE5
  4342                           fsr1h	equ	0xFE2
  4343                           fsr1l	equ	0xFE1
  4344                           indf2	equ	0xFDF
  4345                           postinc2	equ	0xFDE
  4346                           postdec2	equ	0xFDD
  4347                           fsr2h	equ	0xFDA
  4348                           fsr2l	equ	0xFD9
  4349                           status	equ	0xFD8
  4350                           
  4351 ;; *************** function ___ftmul *****************
  4352 ;; Defined at:
  4353 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  f1              3   27[COMRAM] float 
  4356 ;;  f2              3   30[COMRAM] float 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  f3_as_produc    3   38[COMRAM] unsigned um
  4359 ;;  sign            1   37[COMRAM] unsigned char 
  4360 ;;  exp             1   36[COMRAM] unsigned char 
  4361 ;;  cntr            1    0        unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  3   27[COMRAM] float 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4371 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4372 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4373 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4374 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4375 ;;Total ram usage:       14 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    2
  4378 ;; This function calls:
  4379 ;;		___ftpack
  4380 ;; This function is called by:
  4381 ;;		_main
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text15
  4386  000ED4                     __ptext15:
  4387                           	opt stack 0
  4388  000ED4                     ___ftmul:
  4389                           	opt stack 28
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;incstack = 0
  4393  000ED4  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  4394  000ED8  6A23               	clrf	(??___ftmul+1)& (0+255),c
  4395  000EDA  6A24               	clrf	(??___ftmul+2)& (0+255),c
  4396  000EDC  341D               	rlcf	___ftmul@f1+1,w,c
  4397  000EDE  3622               	rlcf	??___ftmul& (0+255),f,c
  4398  000EE0  E301               	bnc	u1331
  4399  000EE2  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  4400  000EE4                     u1331:
  4401  000EE4  5022               	movf	??___ftmul,w,c
  4402  000EE6  6E25               	movwf	___ftmul@exp,c
  4403  000EE8  6625               	tstfsz	___ftmul@exp& (0+255),c
  4404  000EEA  D005               	goto	l2491
  4405  000EEC  0E00               	movlw	0
  4406  000EEE  6E1C               	movwf	?___ftmul,c
  4407  000EF0  6E1D               	movwf	?___ftmul+1,c
  4408  000EF2  6E1E               	movwf	?___ftmul+2,c
  4409  000EF4  0C00               	retlw	0
  4410  000EF6                     l2491:
  4411  000EF6  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  4412  000EFA  6A23               	clrf	(??___ftmul+1)& (0+255),c
  4413  000EFC  6A24               	clrf	(??___ftmul+2)& (0+255),c
  4414  000EFE  3420               	rlcf	___ftmul@f2+1,w,c
  4415  000F00  3622               	rlcf	??___ftmul& (0+255),f,c
  4416  000F02  E301               	bnc	u1351
  4417  000F04  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  4418  000F06                     u1351:
  4419  000F06  5022               	movf	??___ftmul,w,c
  4420  000F08  6E26               	movwf	___ftmul@sign,c
  4421  000F0A  6626               	tstfsz	___ftmul@sign& (0+255),c
  4422  000F0C  D005               	goto	l2497
  4423  000F0E  0E00               	movlw	0
  4424  000F10  6E1C               	movwf	?___ftmul,c
  4425  000F12  6E1D               	movwf	?___ftmul+1,c
  4426  000F14  6E1E               	movwf	?___ftmul+2,c
  4427  000F16  0C00               	retlw	0
  4428  000F18                     l2497:
  4429  000F18  5026               	movf	___ftmul@sign,w,c
  4430  000F1A  0F7B               	addlw	123
  4431  000F1C  2625               	addwf	___ftmul@exp,f,c
  4432  000F1E  C01E  F026         	movff	___ftmul@f1+2,___ftmul@sign
  4433  000F22  5021               	movf	___ftmul@f2+2,w,c
  4434  000F24  1A26               	xorwf	___ftmul@sign,f,c
  4435  000F26  0E80               	movlw	128
  4436  000F28  1626               	andwf	___ftmul@sign,f,c
  4437  000F2A  8E1D               	bsf	___ftmul@f1+1,7,c
  4438  000F2C  8E20               	bsf	___ftmul@f2+1,7,c
  4439  000F2E  6A21               	clrf	___ftmul@f2+2,c
  4440  000F30  6A27               	clrf	___ftmul@f3_as_product,c
  4441  000F32  6A28               	clrf	___ftmul@f3_as_product+1,c
  4442  000F34  6A29               	clrf	___ftmul@f3_as_product+2,c
  4443  000F36  6A1E               	clrf	___ftmul@f1+2,c
  4444  000F38  501C               	movf	___ftmul@f1,w,c
  4445  000F3A  021F               	mulwf	___ftmul@f2,c
  4446  000F3C  CFF4 FFF3          	movff	prodh,prodl
  4447  000F40  6AF4               	clrf	prodh,c
  4448  000F42  CFF3 F027          	movff	prodl,___ftmul@f3_as_product
  4449  000F46  CFF4 F028          	movff	prodh,___ftmul@f3_as_product+1
  4450  000F4A  6A29               	clrf	___ftmul@f3_as_product+2,c
  4451  000F4C  501C               	movf	___ftmul@f1,w,c
  4452  000F4E  0220               	mulwf	___ftmul@f2+1,c
  4453  000F50  50F3               	movf	prodl,w,c
  4454  000F52  2627               	addwf	___ftmul@f3_as_product,f,c
  4455  000F54  50F4               	movf	prodh,w,c
  4456  000F56  2228               	addwfc	___ftmul@f3_as_product+1,f,c
  4457  000F58  0E00               	movlw	0
  4458  000F5A  2229               	addwfc	___ftmul@f3_as_product+2,f,c
  4459  000F5C  501D               	movf	___ftmul@f1+1,w,c
  4460  000F5E  021F               	mulwf	___ftmul@f2,c
  4461  000F60  50F3               	movf	prodl,w,c
  4462  000F62  2627               	addwf	___ftmul@f3_as_product,f,c
  4463  000F64  50F4               	movf	prodh,w,c
  4464  000F66  2228               	addwfc	___ftmul@f3_as_product+1,f,c
  4465  000F68  0E00               	movlw	0
  4466  000F6A  2229               	addwfc	___ftmul@f3_as_product+2,f,c
  4467  000F6C  501D               	movf	___ftmul@f1+1,w,c
  4468  000F6E  0220               	mulwf	___ftmul@f2+1,c
  4469  000F70  50F3               	movf	prodl,w,c
  4470  000F72  2628               	addwf	___ftmul@f3_as_product+1,f,c
  4471  000F74  50F4               	movf	prodh,w,c
  4472  000F76  2229               	addwfc	___ftmul@f3_as_product+2,f,c
  4473  000F78  AE29               	btfss	___ftmul@f3_as_product+2,7,c
  4474  000F7A  D005               	goto	l781
  4475  000F7C  90D8               	bcf	status,0,c
  4476  000F7E  3229               	rrcf	___ftmul@f3_as_product+2,f,c
  4477  000F80  3228               	rrcf	___ftmul@f3_as_product+1,f,c
  4478  000F82  3227               	rrcf	___ftmul@f3_as_product,f,c
  4479  000F84  2A25               	incf	___ftmul@exp,f,c
  4480  000F86                     l781:
  4481  000F86  90D8               	bcf	status,0,c
  4482  000F88  3229               	rrcf	___ftmul@f3_as_product+2,f,c
  4483  000F8A  3228               	rrcf	___ftmul@f3_as_product+1,f,c
  4484  000F8C  3227               	rrcf	___ftmul@f3_as_product,f,c
  4485  000F8E  C027  F011         	movff	___ftmul@f3_as_product,___ftpack@arg
  4486  000F92  C028  F012         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4487  000F96  C029  F013         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4488  000F9A  C025  F014         	movff	___ftmul@exp,___ftpack@exp
  4489  000F9E  C026  F015         	movff	___ftmul@sign,___ftpack@sign
  4490  000FA2  ECCD  F008         	call	___ftpack	;wreg free
  4491  000FA6  C011  F01C         	movff	?___ftpack,?___ftmul
  4492  000FAA  C012  F01D         	movff	?___ftpack+1,?___ftmul+1
  4493  000FAE  C013  F01E         	movff	?___ftpack+2,?___ftmul+2
  4494  000FB2  0012               	return	
  4495  000FB4                     __end_of___ftmul:
  4496                           	opt stack 0
  4497                           tblptru	equ	0xFF8
  4498                           tblptrh	equ	0xFF7
  4499                           tblptrl	equ	0xFF6
  4500                           tablat	equ	0xFF5
  4501                           prodh	equ	0xFF4
  4502                           prodl	equ	0xFF3
  4503                           intcon	equ	0xFF2
  4504                           postinc0	equ	0xFEE
  4505                           wreg	equ	0xFE8
  4506                           indf1	equ	0xFE7
  4507                           postinc1	equ	0xFE6
  4508                           postdec1	equ	0xFE5
  4509                           fsr1h	equ	0xFE2
  4510                           fsr1l	equ	0xFE1
  4511                           indf2	equ	0xFDF
  4512                           postinc2	equ	0xFDE
  4513                           postdec2	equ	0xFDD
  4514                           fsr2h	equ	0xFDA
  4515                           fsr2l	equ	0xFD9
  4516                           status	equ	0xFD8
  4517                           
  4518 ;; *************** function ___ftpack *****************
  4519 ;; Defined at:
  4520 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  arg             3   16[COMRAM] unsigned um
  4523 ;;  exp             1   19[COMRAM] unsigned char 
  4524 ;;  sign            1   20[COMRAM] unsigned char 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;		None
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  3   16[COMRAM] float 
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4536 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4538 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4539 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4540 ;;Total ram usage:        8 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; Hardware stack levels required when called:    1
  4543 ;; This function calls:
  4544 ;;		Nothing
  4545 ;; This function is called by:
  4546 ;;		___ftmul
  4547 ;;		___lwtoft
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           	psect	text16
  4552  00119A                     __ptext16:
  4553                           	opt stack 0
  4554  00119A                     ___ftpack:
  4555                           	opt stack 28
  4556                           
  4557                           ;incstack = 0
  4558  00119A  5014               	movf	___ftpack@exp,w,c
  4559  00119C  E004               	bz	l2227
  4560  00119E  5011               	movf	___ftpack@arg,w,c
  4561  0011A0  1012               	iorwf	___ftpack@arg+1,w,c
  4562  0011A2  1013               	iorwf	___ftpack@arg+2,w,c
  4563  0011A4  E10A               	bnz	l2233
  4564  0011A6                     l2227:
  4565  0011A6  0E00               	movlw	0
  4566  0011A8  6E11               	movwf	?___ftpack,c
  4567  0011AA  6E12               	movwf	?___ftpack+1,c
  4568  0011AC  6E13               	movwf	?___ftpack+2,c
  4569  0011AE  0C00               	retlw	0
  4570  0011B0                     l2231:
  4571  0011B0  2A14               	incf	___ftpack@exp,f,c
  4572  0011B2  90D8               	bcf	status,0,c
  4573  0011B4  3213               	rrcf	___ftpack@arg+2,f,c
  4574  0011B6  3212               	rrcf	___ftpack@arg+1,f,c
  4575  0011B8  3211               	rrcf	___ftpack@arg,f,c
  4576  0011BA                     l2233:
  4577  0011BA  6A16               	clrf	??___ftpack& (0+255),c
  4578  0011BC  6A17               	clrf	(??___ftpack+1)& (0+255),c
  4579  0011BE  0EFE               	movlw	254
  4580  0011C0  1413               	andwf	___ftpack@arg+2,w,c
  4581  0011C2  6E18               	movwf	(??___ftpack+2)& (0+255),c
  4582  0011C4  5016               	movf	??___ftpack,w,c
  4583  0011C6  1017               	iorwf	??___ftpack+1,w,c
  4584  0011C8  1018               	iorwf	??___ftpack+2,w,c
  4585  0011CA  E00A               	bz	l2239
  4586  0011CC  D7F1               	goto	l2231
  4587  0011CE                     l2235:
  4588  0011CE  2A14               	incf	___ftpack@exp,f,c
  4589  0011D0  2A11               	incf	___ftpack@arg,f,c
  4590  0011D2  0E00               	movlw	0
  4591  0011D4  2212               	addwfc	___ftpack@arg+1,f,c
  4592  0011D6  2213               	addwfc	___ftpack@arg+2,f,c
  4593  0011D8  90D8               	bcf	status,0,c
  4594  0011DA  3213               	rrcf	___ftpack@arg+2,f,c
  4595  0011DC  3212               	rrcf	___ftpack@arg+1,f,c
  4596  0011DE  3211               	rrcf	___ftpack@arg,f,c
  4597  0011E0                     l2239:
  4598  0011E0  6A16               	clrf	??___ftpack& (0+255),c
  4599  0011E2  6A17               	clrf	(??___ftpack+1)& (0+255),c
  4600  0011E4  5013               	movf	___ftpack@arg+2,w,c
  4601  0011E6  6E18               	movwf	(??___ftpack+2)& (0+255),c
  4602  0011E8  5016               	movf	??___ftpack,w,c
  4603  0011EA  1017               	iorwf	??___ftpack+1,w,c
  4604  0011EC  1018               	iorwf	??___ftpack+2,w,c
  4605  0011EE  E006               	bz	l2243
  4606  0011F0  D7EE               	goto	l2235
  4607  0011F2                     l2241:
  4608  0011F2  0614               	decf	___ftpack@exp,f,c
  4609  0011F4  90D8               	bcf	status,0,c
  4610  0011F6  3611               	rlcf	___ftpack@arg,f,c
  4611  0011F8  3612               	rlcf	___ftpack@arg+1,f,c
  4612  0011FA  3613               	rlcf	___ftpack@arg+2,f,c
  4613  0011FC                     l2243:
  4614  0011FC  AE12               	btfss	___ftpack@arg+1,7,c
  4615  0011FE  D7F9               	goto	l2241
  4616  001200  A014               	btfss	___ftpack@exp,0,c
  4617  001202  9E12               	bcf	___ftpack@arg+1,7,c
  4618  001204  90D8               	bcf	status,0,c
  4619  001206  3214               	rrcf	___ftpack@exp,f,c
  4620  001208  5014               	movf	___ftpack@exp,w,c
  4621  00120A  1213               	iorwf	___ftpack@arg+2,f,c
  4622  00120C  5015               	movf	___ftpack@sign,w,c
  4623  00120E  A4D8               	btfss	status,2,c
  4624  001210  8E13               	bsf	___ftpack@arg+2,7,c
  4625  001212  C011  F011         	movff	___ftpack@arg,?___ftpack
  4626  001216  C012  F012         	movff	___ftpack@arg+1,?___ftpack+1
  4627  00121A  C013  F013         	movff	___ftpack@arg+2,?___ftpack+2
  4628  00121E  0012               	return	
  4629  001220                     __end_of___ftpack:
  4630                           	opt stack 0
  4631                           tblptru	equ	0xFF8
  4632                           tblptrh	equ	0xFF7
  4633                           tblptrl	equ	0xFF6
  4634                           tablat	equ	0xFF5
  4635                           prodh	equ	0xFF4
  4636                           prodl	equ	0xFF3
  4637                           intcon	equ	0xFF2
  4638                           postinc0	equ	0xFEE
  4639                           wreg	equ	0xFE8
  4640                           indf1	equ	0xFE7
  4641                           postinc1	equ	0xFE6
  4642                           postdec1	equ	0xFE5
  4643                           fsr1h	equ	0xFE2
  4644                           fsr1l	equ	0xFE1
  4645                           indf2	equ	0xFDF
  4646                           postinc2	equ	0xFDE
  4647                           postdec2	equ	0xFDD
  4648                           fsr2h	equ	0xFDA
  4649                           fsr2l	equ	0xFD9
  4650                           status	equ	0xFD8
  4651                           
  4652 ;; *************** function _Timer1_init *****************
  4653 ;; Defined at:
  4654 ;;		line 780 in file "Turn_counter.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;		None
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;		None
  4659 ;; Return value:  Size  Location     Type
  4660 ;;		None               void
  4661 ;; Registers used:
  4662 ;;		wreg, status,2
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4672 ;;Total ram usage:        0 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; Hardware stack levels required when called:    1
  4675 ;; This function calls:
  4676 ;;		Nothing
  4677 ;; This function is called by:
  4678 ;;		_main
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           	psect	text17
  4683  001522                     __ptext17:
  4684                           	opt stack 0
  4685  001522                     _Timer1_init:
  4686                           	opt stack 29
  4687                           
  4688                           ;Turn_counter.c: 782: T1GCONbits.TMR1GE = 0;
  4689                           
  4690                           ;incstack = 0
  4691  001522  9EAA               	bcf	4010,7,c	;volatile
  4692                           
  4693                           ;Turn_counter.c: 783: T1CONbits.SOSCEN = 1;
  4694  001524  86CD               	bsf	4045,3,c	;volatile
  4695                           
  4696                           ;Turn_counter.c: 784: T1CONbits.TMR1CS = 0;
  4697  001526  0E3F               	movlw	-193
  4698  001528  16CD               	andwf	4045,f,c	;volatile
  4699                           
  4700                           ;Turn_counter.c: 785: T1CONbits.T1CKPS = 3;
  4701  00152A  0E30               	movlw	48
  4702  00152C  12CD               	iorwf	4045,f,c	;volatile
  4703                           
  4704                           ;Turn_counter.c: 786: T1CONbits.nT1SYNC = 0;
  4705  00152E  94CD               	bcf	4045,2,c	;volatile
  4706  001530  0C30               	retlw	48
  4707  001532                     __end_of_Timer1_init:
  4708                           	opt stack 0
  4709                           tblptru	equ	0xFF8
  4710                           tblptrh	equ	0xFF7
  4711                           tblptrl	equ	0xFF6
  4712                           tablat	equ	0xFF5
  4713                           prodh	equ	0xFF4
  4714                           prodl	equ	0xFF3
  4715                           intcon	equ	0xFF2
  4716                           postinc0	equ	0xFEE
  4717                           wreg	equ	0xFE8
  4718                           indf1	equ	0xFE7
  4719                           postinc1	equ	0xFE6
  4720                           postdec1	equ	0xFE5
  4721                           fsr1h	equ	0xFE2
  4722                           fsr1l	equ	0xFE1
  4723                           indf2	equ	0xFDF
  4724                           postinc2	equ	0xFDE
  4725                           postdec2	equ	0xFDD
  4726                           fsr2h	equ	0xFDA
  4727                           fsr2l	equ	0xFD9
  4728                           status	equ	0xFD8
  4729                           
  4730 ;; *************** function _Interrupt_Init *****************
  4731 ;; Defined at:
  4732 ;;		line 674 in file "Turn_counter.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;		None               void
  4739 ;; Registers used:
  4740 ;;		wreg, status,2
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4750 ;;Total ram usage:        0 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    1
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text18
  4761  0014BC                     __ptext18:
  4762                           	opt stack 0
  4763  0014BC                     _Interrupt_Init:
  4764                           	opt stack 29
  4765                           
  4766                           ;Turn_counter.c: 676: RCONbits.IPEN = 0;
  4767                           
  4768                           ;incstack = 0
  4769  0014BC  9ED0               	bcf	4048,7,c	;volatile
  4770                           
  4771                           ;Turn_counter.c: 677: INTCONbits.GIEH = 1;
  4772  0014BE  8EF2               	bsf	intcon,7,c	;volatile
  4773                           
  4774                           ;Turn_counter.c: 678: INTCONbits.GIEL = 1;
  4775  0014C0  8CF2               	bsf	intcon,6,c	;volatile
  4776                           
  4777                           ;Turn_counter.c: 679: INTCONbits.TMR0IE = 0;
  4778  0014C2  9AF2               	bcf	intcon,5,c	;volatile
  4779                           
  4780                           ;Turn_counter.c: 681: PIR1bits.ADIF = 0;
  4781  0014C4  9C9E               	bcf	3998,6,c	;volatile
  4782                           
  4783                           ;Turn_counter.c: 682: PIE1bits.ADIE = 0;
  4784  0014C6  9C9D               	bcf	3997,6,c	;volatile
  4785                           
  4786                           ;Turn_counter.c: 684: INTCONbits.RBIE = 0;
  4787  0014C8  96F2               	bcf	intcon,3,c	;volatile
  4788                           
  4789                           ;Turn_counter.c: 685: INTCONbits.RBIF = 0;
  4790  0014CA  90F2               	bcf	intcon,0,c	;volatile
  4791                           
  4792                           ;Turn_counter.c: 687: INTCONbits.INT0IF = 0;
  4793  0014CC  92F2               	bcf	intcon,1,c	;volatile
  4794                           
  4795                           ;Turn_counter.c: 688: IOCB = 0;
  4796  0014CE  0E00               	movlw	0
  4797  0014D0  010F               	movlb	15	; () banked
  4798  0014D2  6F5A               	movwf	90,b	;volatile
  4799                           
  4800                           ; BSR set to: 15
  4801                           ;Turn_counter.c: 689: INTCON2bits.nRBPU = 1;
  4802  0014D4  8EF1               	bsf	intcon2,7,c	;volatile
  4803                           
  4804                           ; BSR set to: 15
  4805                           ;Turn_counter.c: 691: INTCON2bits.INTEDG1 = 1;
  4806  0014D6  8AF1               	bsf	intcon2,5,c	;volatile
  4807                           
  4808                           ; BSR set to: 15
  4809                           ;Turn_counter.c: 693: INTCON3bits.INT1IE = 1;
  4810  0014D8  86F0               	bsf	intcon3,3,c	;volatile
  4811                           
  4812                           ; BSR set to: 15
  4813                           ;Turn_counter.c: 694: PIE1bits.RC1IE = 1;
  4814  0014DA  8A9D               	bsf	3997,5,c	;volatile
  4815                           
  4816                           ; BSR set to: 15
  4817                           ;Turn_counter.c: 696: PIE1bits.TMR1IE = 1;
  4818  0014DC  809D               	bsf	3997,0,c	;volatile
  4819                           
  4820                           ; BSR set to: 15
  4821  0014DE  0C00               	retlw	0
  4822  0014E0                     __end_of_Interrupt_Init:
  4823                           	opt stack 0
  4824                           tblptru	equ	0xFF8
  4825                           tblptrh	equ	0xFF7
  4826                           tblptrl	equ	0xFF6
  4827                           tablat	equ	0xFF5
  4828                           prodh	equ	0xFF4
  4829                           prodl	equ	0xFF3
  4830                           intcon	equ	0xFF2
  4831                           intcon2	equ	0xFF1
  4832                           intcon3	equ	0xFF0
  4833                           postinc0	equ	0xFEE
  4834                           wreg	equ	0xFE8
  4835                           indf1	equ	0xFE7
  4836                           postinc1	equ	0xFE6
  4837                           postdec1	equ	0xFE5
  4838                           fsr1h	equ	0xFE2
  4839                           fsr1l	equ	0xFE1
  4840                           indf2	equ	0xFDF
  4841                           postinc2	equ	0xFDE
  4842                           postdec2	equ	0xFDD
  4843                           fsr2h	equ	0xFDA
  4844                           fsr2l	equ	0xFD9
  4845                           status	equ	0xFD8
  4846                           
  4847 ;; *************** function _Hold_reg_Inint *****************
  4848 ;; Defined at:
  4849 ;;		line 618 in file "Turn_counter.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;		None
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;		None               void
  4856 ;; Registers used:
  4857 ;;		wreg, status,2
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4867 ;;Total ram usage:        0 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    1
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_main
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text19
  4878  0014FA                     __ptext19:
  4879                           	opt stack 0
  4880  0014FA                     _Hold_reg_Inint:
  4881                           	opt stack 29
  4882                           
  4883                           ;Turn_counter.c: 620: num_of_turns = 5;
  4884                           
  4885                           ; BSR set to: 15
  4886                           ;incstack = 0
  4887  0014FA  0E00               	movlw	0
  4888  0014FC  0101               	movlb	1	; () banked
  4889  0014FE  6FF3               	movwf	(_num_of_turns+1)& (0+255),b
  4890  001500  0E05               	movlw	5
  4891  001502  6FF2               	movwf	_num_of_turns& (0+255),b
  4892                           
  4893                           ;Turn_counter.c: 621: current_max = 700;
  4894  001504  0E02               	movlw	2
  4895  001506  6FF1               	movwf	(_current_max+1)& (0+255),b
  4896  001508  0EBC               	movlw	188
  4897  00150A  6FF0               	movwf	_current_max& (0+255),b
  4898                           
  4899                           ; BSR set to: 1
  4900  00150C  0CBC               	retlw	188
  4901  00150E                     __end_of_Hold_reg_Inint:
  4902                           	opt stack 0
  4903                           tblptru	equ	0xFF8
  4904                           tblptrh	equ	0xFF7
  4905                           tblptrl	equ	0xFF6
  4906                           tablat	equ	0xFF5
  4907                           prodh	equ	0xFF4
  4908                           prodl	equ	0xFF3
  4909                           intcon	equ	0xFF2
  4910                           intcon2	equ	0xFF1
  4911                           intcon3	equ	0xFF0
  4912                           postinc0	equ	0xFEE
  4913                           wreg	equ	0xFE8
  4914                           indf1	equ	0xFE7
  4915                           postinc1	equ	0xFE6
  4916                           postdec1	equ	0xFE5
  4917                           fsr1h	equ	0xFE2
  4918                           fsr1l	equ	0xFE1
  4919                           indf2	equ	0xFDF
  4920                           postinc2	equ	0xFDE
  4921                           postdec2	equ	0xFDD
  4922                           fsr2h	equ	0xFDA
  4923                           fsr2l	equ	0xFD9
  4924                           status	equ	0xFD8
  4925                           
  4926 ;; *************** function _GPIO_init *****************
  4927 ;; Defined at:
  4928 ;;		line 590 in file "Turn_counter.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;		None               void
  4935 ;; Registers used:
  4936 ;;		None
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4946 ;;Total ram usage:        0 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_main
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text20
  4957  00143C                     __ptext20:
  4958                           	opt stack 0
  4959  00143C                     _GPIO_init:
  4960                           	opt stack 29
  4961                           
  4962                           ;Turn_counter.c: 593: TRISAbits.TRISA0 = 1;
  4963                           
  4964                           ; BSR set to: 1
  4965                           ;incstack = 0
  4966  00143C  8092               	bsf	3986,0,c	;volatile
  4967                           
  4968                           ;Turn_counter.c: 594: TRISAbits.TRISA1 = 0;
  4969  00143E  9292               	bcf	3986,1,c	;volatile
  4970                           
  4971                           ;Turn_counter.c: 595: TRISAbits.TRISA2 = 0;
  4972  001440  9492               	bcf	3986,2,c	;volatile
  4973                           
  4974                           ;Turn_counter.c: 596: TRISAbits.TRISA3 = 0;
  4975  001442  9692               	bcf	3986,3,c	;volatile
  4976                           
  4977                           ;Turn_counter.c: 598: TRISBbits.TRISB0 = 0;
  4978  001444  9093               	bcf	3987,0,c	;volatile
  4979                           
  4980                           ;Turn_counter.c: 599: TRISBbits.TRISB1 = 1;
  4981  001446  8293               	bsf	3987,1,c	;volatile
  4982                           
  4983                           ;Turn_counter.c: 600: TRISBbits.TRISB2 = 1;
  4984  001448  8493               	bsf	3987,2,c	;volatile
  4985                           
  4986                           ;Turn_counter.c: 601: TRISBbits.TRISB3 = 1;
  4987  00144A  8693               	bsf	3987,3,c	;volatile
  4988                           
  4989                           ;Turn_counter.c: 602: TRISBbits.TRISB4 = 1;
  4990  00144C  8893               	bsf	3987,4,c	;volatile
  4991                           
  4992                           ;Turn_counter.c: 603: TRISBbits.TRISB5 = 0;
  4993  00144E  9A93               	bcf	3987,5,c	;volatile
  4994                           
  4995                           ;Turn_counter.c: 605: TRISCbits.TRISC1 = 0;
  4996  001450  9294               	bcf	3988,1,c	;volatile
  4997                           
  4998                           ;Turn_counter.c: 606: TRISCbits.TRISC2 = 0;
  4999  001452  9494               	bcf	3988,2,c	;volatile
  5000                           
  5001                           ;Turn_counter.c: 607: TRISCbits.TRISC3 = 0;
  5002  001454  9694               	bcf	3988,3,c	;volatile
  5003                           
  5004                           ;Turn_counter.c: 608: TRISCbits.TRISC4 = 0;
  5005  001456  9894               	bcf	3988,4,c	;volatile
  5006                           
  5007                           ;Turn_counter.c: 609: TRISCbits.TRISC5 = 0;
  5008  001458  9A94               	bcf	3988,5,c	;volatile
  5009                           
  5010                           ;Turn_counter.c: 610: TRISCbits.TRISC6 = 0;
  5011  00145A  9C94               	bcf	3988,6,c	;volatile
  5012                           
  5013                           ;Turn_counter.c: 611: TRISCbits.TRISC7 = 1;
  5014  00145C  8E94               	bsf	3988,7,c	;volatile
  5015                           
  5016                           ;Turn_counter.c: 613: ANCON0bits.ANSEL0 = 1;
  5017  00145E  010F               	movlb	15	; () banked
  5018  001460  815D               	bsf	93,0,b	;volatile
  5019                           
  5020                           ;Turn_counter.c: 614: ANCON0bits.ANSEL1 = 1;
  5021  001462  835D               	bsf	93,1,b	;volatile
  5022                           
  5023                           ;Turn_counter.c: 615: ANCON1bits.ANSEL8 = 0;
  5024  001464  915C               	bcf	92,0,b	;volatile
  5025                           
  5026                           ;Turn_counter.c: 616: ANCON1bits.ANSEL10 = 0;
  5027  001466  955C               	bcf	92,2,b	;volatile
  5028                           
  5029                           ; BSR set to: 15
  5030  001468  0012               	return	
  5031  00146A                     __end_of_GPIO_init:
  5032                           	opt stack 0
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           intcon	equ	0xFF2
  5040                           intcon2	equ	0xFF1
  5041                           intcon3	equ	0xFF0
  5042                           postinc0	equ	0xFEE
  5043                           wreg	equ	0xFE8
  5044                           indf1	equ	0xFE7
  5045                           postinc1	equ	0xFE6
  5046                           postdec1	equ	0xFE5
  5047                           fsr1h	equ	0xFE2
  5048                           fsr1l	equ	0xFE1
  5049                           indf2	equ	0xFDF
  5050                           postinc2	equ	0xFDE
  5051                           postdec2	equ	0xFDD
  5052                           fsr2h	equ	0xFDA
  5053                           fsr2l	equ	0xFD9
  5054                           status	equ	0xFD8
  5055                           
  5056 ;; *************** function _EEprom_restore *****************
  5057 ;; Defined at:
  5058 ;;		line 793 in file "Turn_counter.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;		None               void
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5074 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5075 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;Total ram usage:        3 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    2
  5079 ;; This function calls:
  5080 ;;		_EEPROM_RdByte
  5081 ;;		_UART_Init
  5082 ;; This function is called by:
  5083 ;;		_main
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text21
  5088  0009C8                     __ptext21:
  5089                           	opt stack 0
  5090  0009C8                     _EEprom_restore:
  5091                           	opt stack 28
  5092                           
  5093                           ;Turn_counter.c: 795: bd_rate_code = EEPROM_RdByte(1);
  5094                           
  5095                           ; BSR set to: 15
  5096                           ;incstack = 0
  5097  0009C8  0E01               	movlw	1
  5098  0009CA  EC87  F00A         	call	_EEPROM_RdByte
  5099  0009CE  6E4C               	movwf	_bd_rate_code,c
  5100                           
  5101                           ;Turn_counter.c: 796: if(bd_rate_code > 5)
  5102  0009D0  0E05               	movlw	5
  5103  0009D2  644C               	cpfsgt	_bd_rate_code,c
  5104  0009D4  D002               	goto	l2417
  5105                           
  5106                           ;Turn_counter.c: 797: bd_rate_code = 4;
  5107  0009D6  0E04               	movlw	4
  5108  0009D8  6E4C               	movwf	_bd_rate_code,c
  5109  0009DA                     l2417:
  5110                           
  5111                           ;Turn_counter.c: 798: UART_Init(bd_rate_code);
  5112  0009DA  504C               	movf	_bd_rate_code,w,c
  5113  0009DC  EC4F  F009         	call	_UART_Init
  5114                           
  5115                           ;Turn_counter.c: 800: dev_id = EEPROM_RdByte(2);
  5116  0009E0  0E02               	movlw	2
  5117  0009E2  EC87  F00A         	call	_EEPROM_RdByte
  5118  0009E6  6E4D               	movwf	_dev_id,c
  5119                           
  5120                           ;Turn_counter.c: 801: if((dev_id >= 255 )|| (dev_id == 0))
  5121  0009E8  284D               	incf	_dev_id,w,c
  5122  0009EA  E002               	bz	l2423
  5123  0009EC  664D               	tstfsz	_dev_id,c
  5124  0009EE  D002               	goto	l2425
  5125  0009F0                     l2423:
  5126                           
  5127                           ;Turn_counter.c: 802: dev_id = (unsigned char) 10;
  5128  0009F0  0E0A               	movlw	10
  5129  0009F2  6E4D               	movwf	_dev_id,c
  5130  0009F4                     l2425:
  5131                           
  5132                           ;Turn_counter.c: 805: eeprom_buf = 0x00ff & EEPROM_RdByte(3);
  5133  0009F4  0E03               	movlw	3
  5134  0009F6  EC87  F00A         	call	_EEPROM_RdByte
  5135  0009FA  6E12               	movwf	??_EEprom_restore& (0+255),c
  5136  0009FC  5012               	movf	??_EEprom_restore,w,c
  5137  0009FE  6E32               	movwf	_eeprom_buf,c
  5138  000A00  6A33               	clrf	_eeprom_buf+1,c
  5139                           
  5140                           ;Turn_counter.c: 806: eeprom_buf |= EEPROM_RdByte(4) << 8;
  5141  000A02  0E04               	movlw	4
  5142  000A04  EC87  F00A         	call	_EEPROM_RdByte
  5143  000A08  6E12               	movwf	??_EEprom_restore& (0+255),c
  5144  000A0A  5012               	movf	??_EEprom_restore,w,c
  5145  000A0C  6E14               	movwf	(??_EEprom_restore+2)& (0+255),c
  5146  000A0E  6A13               	clrf	(??_EEprom_restore+1)& (0+255),c
  5147  000A10  5013               	movf	??_EEprom_restore+1,w,c
  5148  000A12  1232               	iorwf	_eeprom_buf,f,c
  5149  000A14  5014               	movf	??_EEprom_restore+2,w,c
  5150  000A16  1233               	iorwf	_eeprom_buf+1,f,c
  5151                           
  5152                           ;Turn_counter.c: 807: if(eeprom_buf > 9)
  5153  000A18  0E0A               	movlw	10
  5154  000A1A  5C32               	subwf	_eeprom_buf,w,c
  5155  000A1C  0E00               	movlw	0
  5156  000A1E  5833               	subwfb	_eeprom_buf+1,w,c
  5157  000A20  E303               	bnc	l2433
  5158                           
  5159                           ;Turn_counter.c: 808: eeprom_buf = 5;
  5160  000A22  6A33               	clrf	_eeprom_buf+1,c
  5161  000A24  0E05               	movlw	5
  5162  000A26  6E32               	movwf	_eeprom_buf,c
  5163  000A28                     l2433:
  5164                           
  5165                           ;Turn_counter.c: 809: num_of_turns = eeprom_buf;
  5166  000A28  C032  F1F2         	movff	_eeprom_buf,_num_of_turns
  5167  000A2C  C033  F1F3         	movff	_eeprom_buf+1,_num_of_turns+1
  5168                           
  5169                           ;Turn_counter.c: 812: eeprom_buf = 0x00ff & EEPROM_RdByte(5);
  5170  000A30  0E05               	movlw	5
  5171  000A32  EC87  F00A         	call	_EEPROM_RdByte
  5172  000A36  6E12               	movwf	??_EEprom_restore& (0+255),c
  5173  000A38  5012               	movf	??_EEprom_restore,w,c
  5174  000A3A  6E32               	movwf	_eeprom_buf,c
  5175  000A3C  6A33               	clrf	_eeprom_buf+1,c
  5176                           
  5177                           ;Turn_counter.c: 813: eeprom_buf |= EEPROM_RdByte(6) << 8;
  5178  000A3E  0E06               	movlw	6
  5179  000A40  EC87  F00A         	call	_EEPROM_RdByte
  5180  000A44  6E12               	movwf	??_EEprom_restore& (0+255),c
  5181  000A46  5012               	movf	??_EEprom_restore,w,c
  5182  000A48  6E14               	movwf	(??_EEprom_restore+2)& (0+255),c
  5183  000A4A  6A13               	clrf	(??_EEprom_restore+1)& (0+255),c
  5184  000A4C  5013               	movf	??_EEprom_restore+1,w,c
  5185  000A4E  1232               	iorwf	_eeprom_buf,f,c
  5186  000A50  5014               	movf	??_EEprom_restore+2,w,c
  5187  000A52  1233               	iorwf	_eeprom_buf+1,f,c
  5188                           
  5189                           ;Turn_counter.c: 814: if(eeprom_buf > 1200)
  5190  000A54  0EB1               	movlw	177
  5191  000A56  5C32               	subwf	_eeprom_buf,w,c
  5192  000A58  0E04               	movlw	4
  5193  000A5A  5833               	subwfb	_eeprom_buf+1,w,c
  5194  000A5C  E304               	bnc	l2443
  5195                           
  5196                           ;Turn_counter.c: 815: eeprom_buf = 1000;
  5197  000A5E  0E03               	movlw	3
  5198  000A60  6E33               	movwf	_eeprom_buf+1,c
  5199  000A62  0EE8               	movlw	232
  5200  000A64  6E32               	movwf	_eeprom_buf,c
  5201  000A66                     l2443:
  5202                           
  5203                           ;Turn_counter.c: 816: current_max = eeprom_buf;
  5204  000A66  C032  F1F0         	movff	_eeprom_buf,_current_max
  5205  000A6A  C033  F1F1         	movff	_eeprom_buf+1,_current_max+1
  5206                           
  5207                           ;Turn_counter.c: 819: eeprom_buf = 0x00ff & EEPROM_RdByte(7);
  5208  000A6E  0E07               	movlw	7
  5209  000A70  EC87  F00A         	call	_EEPROM_RdByte
  5210  000A74  6E12               	movwf	??_EEprom_restore& (0+255),c
  5211  000A76  5012               	movf	??_EEprom_restore,w,c
  5212  000A78  6E32               	movwf	_eeprom_buf,c
  5213  000A7A  6A33               	clrf	_eeprom_buf+1,c
  5214                           
  5215                           ;Turn_counter.c: 820: eeprom_buf |= EEPROM_RdByte(8) << 8;
  5216  000A7C  0E08               	movlw	8
  5217  000A7E  EC87  F00A         	call	_EEPROM_RdByte
  5218  000A82  6E12               	movwf	??_EEprom_restore& (0+255),c
  5219  000A84  5012               	movf	??_EEprom_restore,w,c
  5220  000A86  6E14               	movwf	(??_EEprom_restore+2)& (0+255),c
  5221  000A88  6A13               	clrf	(??_EEprom_restore+1)& (0+255),c
  5222  000A8A  5013               	movf	??_EEprom_restore+1,w,c
  5223  000A8C  1232               	iorwf	_eeprom_buf,f,c
  5224  000A8E  5014               	movf	??_EEprom_restore+2,w,c
  5225  000A90  1233               	iorwf	_eeprom_buf+1,f,c
  5226                           
  5227                           ;Turn_counter.c: 821: if(eeprom_buf >= 4095)
  5228  000A92  0EFF               	movlw	255
  5229  000A94  5C32               	subwf	_eeprom_buf,w,c
  5230  000A96  0E0F               	movlw	15
  5231  000A98  5833               	subwfb	_eeprom_buf+1,w,c
  5232  000A9A  E302               	bnc	l2453
  5233                           
  5234                           ;Turn_counter.c: 822: eeprom_buf = 0;
  5235  000A9C  6A33               	clrf	_eeprom_buf+1,c
  5236  000A9E  6A32               	clrf	_eeprom_buf,c
  5237  000AA0                     l2453:
  5238                           
  5239                           ;Turn_counter.c: 823: offset = eeprom_buf;
  5240  000AA0  C032  F1E2         	movff	_eeprom_buf,_offset
  5241  000AA4  C033  F1E3         	movff	_eeprom_buf+1,_offset+1
  5242                           
  5243                           ;Turn_counter.c: 825: eeprom_buf = 0x00ff & EEPROM_RdByte(9);
  5244  000AA8  0E09               	movlw	9
  5245  000AAA  EC87  F00A         	call	_EEPROM_RdByte
  5246  000AAE  6E12               	movwf	??_EEprom_restore& (0+255),c
  5247  000AB0  5012               	movf	??_EEprom_restore,w,c
  5248  000AB2  6E32               	movwf	_eeprom_buf,c
  5249  000AB4  6A33               	clrf	_eeprom_buf+1,c
  5250                           
  5251                           ;Turn_counter.c: 826: eeprom_buf |= EEPROM_RdByte(10) << 8;
  5252  000AB6  0E0A               	movlw	10
  5253  000AB8  EC87  F00A         	call	_EEPROM_RdByte
  5254  000ABC  6E12               	movwf	??_EEprom_restore& (0+255),c
  5255  000ABE  5012               	movf	??_EEprom_restore,w,c
  5256  000AC0  6E14               	movwf	(??_EEprom_restore+2)& (0+255),c
  5257  000AC2  6A13               	clrf	(??_EEprom_restore+1)& (0+255),c
  5258  000AC4  5013               	movf	??_EEprom_restore+1,w,c
  5259  000AC6  1232               	iorwf	_eeprom_buf,f,c
  5260  000AC8  5014               	movf	??_EEprom_restore+2,w,c
  5261  000ACA  1233               	iorwf	_eeprom_buf+1,f,c
  5262                           
  5263                           ;Turn_counter.c: 827: if(eeprom_buf > 4095) eeprom_buf = 0;
  5264  000ACC  0E00               	movlw	0
  5265  000ACE  5C32               	subwf	_eeprom_buf,w,c
  5266  000AD0  0E10               	movlw	16
  5267  000AD2  5833               	subwfb	_eeprom_buf+1,w,c
  5268  000AD4  E302               	bnc	l2463
  5269  000AD6  6A33               	clrf	_eeprom_buf+1,c
  5270  000AD8  6A32               	clrf	_eeprom_buf,c
  5271  000ADA                     l2463:
  5272                           
  5273                           ;Turn_counter.c: 828: POT_MIN = eeprom_buf;
  5274  000ADA  C032  F04A         	movff	_eeprom_buf,_POT_MIN
  5275  000ADE  C033  F04B         	movff	_eeprom_buf+1,_POT_MIN+1
  5276                           
  5277                           ;Turn_counter.c: 830: eeprom_buf = 0x00ff & EEPROM_RdByte(11);
  5278  000AE2  0E0B               	movlw	11
  5279  000AE4  EC87  F00A         	call	_EEPROM_RdByte
  5280  000AE8  6E12               	movwf	??_EEprom_restore& (0+255),c
  5281  000AEA  5012               	movf	??_EEprom_restore,w,c
  5282  000AEC  6E32               	movwf	_eeprom_buf,c
  5283  000AEE  6A33               	clrf	_eeprom_buf+1,c
  5284                           
  5285                           ;Turn_counter.c: 831: eeprom_buf |= EEPROM_RdByte(12) << 8;
  5286  000AF0  0E0C               	movlw	12
  5287  000AF2  EC87  F00A         	call	_EEPROM_RdByte
  5288  000AF6  6E12               	movwf	??_EEprom_restore& (0+255),c
  5289  000AF8  5012               	movf	??_EEprom_restore,w,c
  5290  000AFA  6E14               	movwf	(??_EEprom_restore+2)& (0+255),c
  5291  000AFC  6A13               	clrf	(??_EEprom_restore+1)& (0+255),c
  5292  000AFE  5013               	movf	??_EEprom_restore+1,w,c
  5293  000B00  1232               	iorwf	_eeprom_buf,f,c
  5294  000B02  5014               	movf	??_EEprom_restore+2,w,c
  5295  000B04  1233               	iorwf	_eeprom_buf+1,f,c
  5296                           
  5297                           ;Turn_counter.c: 832: if(eeprom_buf > 4095) eeprom_buf = 4095;
  5298  000B06  0E00               	movlw	0
  5299  000B08  5C32               	subwf	_eeprom_buf,w,c
  5300  000B0A  0E10               	movlw	16
  5301  000B0C  5833               	subwfb	_eeprom_buf+1,w,c
  5302  000B0E  E303               	bnc	l2473
  5303  000B10  0E0F               	movlw	15
  5304  000B12  6E33               	movwf	_eeprom_buf+1,c
  5305  000B14  6832               	setf	_eeprom_buf,c
  5306  000B16                     l2473:
  5307                           
  5308                           ;Turn_counter.c: 833: POT_MAX = eeprom_buf;
  5309  000B16  C032  F048         	movff	_eeprom_buf,_POT_MAX
  5310  000B1A  C033  F049         	movff	_eeprom_buf+1,_POT_MAX+1
  5311                           
  5312                           ;Turn_counter.c: 835: eeprom_buf = 0x00ff & EEPROM_RdByte(13);
  5313  000B1E  0E0D               	movlw	13
  5314  000B20  EC87  F00A         	call	_EEPROM_RdByte
  5315  000B24  6E12               	movwf	??_EEprom_restore& (0+255),c
  5316  000B26  5012               	movf	??_EEprom_restore,w,c
  5317  000B28  6E32               	movwf	_eeprom_buf,c
  5318  000B2A  6A33               	clrf	_eeprom_buf+1,c
  5319                           
  5320                           ;Turn_counter.c: 836: eeprom_buf |= EEPROM_RdByte(14) << 8;
  5321  000B2C  0E0E               	movlw	14
  5322  000B2E  EC87  F00A         	call	_EEPROM_RdByte
  5323  000B32  6E12               	movwf	??_EEprom_restore& (0+255),c
  5324  000B34  5012               	movf	??_EEprom_restore,w,c
  5325  000B36  6E14               	movwf	(??_EEprom_restore+2)& (0+255),c
  5326  000B38  6A13               	clrf	(??_EEprom_restore+1)& (0+255),c
  5327  000B3A  5013               	movf	??_EEprom_restore+1,w,c
  5328  000B3C  1232               	iorwf	_eeprom_buf,f,c
  5329  000B3E  5014               	movf	??_EEprom_restore+2,w,c
  5330  000B40  1233               	iorwf	_eeprom_buf+1,f,c
  5331                           
  5332                           ;Turn_counter.c: 837: if(eeprom_buf > 2) eeprom_buf = 1;
  5333  000B42  0E03               	movlw	3
  5334  000B44  5C32               	subwf	_eeprom_buf,w,c
  5335  000B46  0E00               	movlw	0
  5336  000B48  5833               	subwfb	_eeprom_buf+1,w,c
  5337  000B4A  E304               	bnc	l2483
  5338  000B4C  0E00               	movlw	0
  5339  000B4E  6E33               	movwf	_eeprom_buf+1,c
  5340  000B50  0E01               	movlw	1
  5341  000B52  6E32               	movwf	_eeprom_buf,c
  5342  000B54                     l2483:
  5343                           
  5344                           ;Turn_counter.c: 838: CHANGE_MOTOR = eeprom_buf;
  5345  000B54  C032  F046         	movff	_eeprom_buf,_CHANGE_MOTOR
  5346  000B58  C033  F047         	movff	_eeprom_buf+1,_CHANGE_MOTOR+1
  5347  000B5C  0012               	return	
  5348  000B5E                     __end_of_EEprom_restore:
  5349                           	opt stack 0
  5350                           tblptru	equ	0xFF8
  5351                           tblptrh	equ	0xFF7
  5352                           tblptrl	equ	0xFF6
  5353                           tablat	equ	0xFF5
  5354                           prodh	equ	0xFF4
  5355                           prodl	equ	0xFF3
  5356                           intcon	equ	0xFF2
  5357                           intcon2	equ	0xFF1
  5358                           intcon3	equ	0xFF0
  5359                           postinc0	equ	0xFEE
  5360                           wreg	equ	0xFE8
  5361                           indf1	equ	0xFE7
  5362                           postinc1	equ	0xFE6
  5363                           postdec1	equ	0xFE5
  5364                           fsr1h	equ	0xFE2
  5365                           fsr1l	equ	0xFE1
  5366                           indf2	equ	0xFDF
  5367                           postinc2	equ	0xFDE
  5368                           postdec2	equ	0xFDD
  5369                           fsr2h	equ	0xFDA
  5370                           fsr2l	equ	0xFD9
  5371                           status	equ	0xFD8
  5372                           
  5373 ;; *************** function _UART_Init *****************
  5374 ;; Defined at:
  5375 ;;		line 638 in file "Turn_counter.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  bd_rate_code    1    wreg     unsigned char 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  bd_rate_code    1   16[COMRAM] unsigned char 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;		None               void
  5382 ;; Registers used:
  5383 ;;		wreg, status,2, status,0
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5393 ;;Total ram usage:        1 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    1
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_EEprom_restore
  5400 ;;		_main
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text22
  5405  00129E                     __ptext22:
  5406                           	opt stack 0
  5407  00129E                     _UART_Init:
  5408                           	opt stack 29
  5409                           
  5410                           ;incstack = 0
  5411                           ;UART_Init@bd_rate_code stored from wreg
  5412  00129E  6E11               	movwf	UART_Init@bd_rate_code,c
  5413                           
  5414                           ;Turn_counter.c: 640: switch(bd_rate_code)
  5415  0012A0  D010               	goto	l2221
  5416  0012A2                     l2197:
  5417  0012A2  0E81               	movlw	129
  5418  0012A4  D007               	goto	L16
  5419  0012A6                     l2201:
  5420  0012A6  0E40               	movlw	64
  5421  0012A8  D005               	goto	L16
  5422  0012AA                     l2205:
  5423  0012AA  0E2A               	movlw	42
  5424  0012AC  D003               	goto	L16
  5425  0012AE                     l2209:
  5426  0012AE  0E15               	movlw	21
  5427  0012B0  D001               	goto	L16
  5428  0012B2                     l2213:
  5429  0012B2  0E0A               	movlw	10
  5430  0012B4                     L16:
  5431  0012B4  6EAF               	movwf	4015,c	;volatile
  5432  0012B6  84AC               	bsf	4012,2,c	;volatile
  5433  0012B8  D011               	goto	l324
  5434  0012BA                     l2217:
  5435  0012BA  0E40               	movlw	64
  5436  0012BC  6EAF               	movwf	4015,c	;volatile
  5437  0012BE  94AC               	bcf	4012,2,c	;volatile
  5438                           
  5439                           ;Turn_counter.c: 650: }
  5440  0012C0  D00D               	goto	l324
  5441  0012C2                     l2221:
  5442  0012C2  5011               	movf	UART_Init@bd_rate_code,w,c
  5443                           
  5444                           ; Switch size 1, requested type "speed"
  5445                           ; Number of cases is 6, Range of values is 0 to 5
  5446                           ; switch strategies available:
  5447                           ; Name         Instructions Cycles
  5448                           ; simple_byte           19    10 (average)
  5449                           ;	Chosen strategy is simple_byte
  5450  0012C4  E0FA               	bz	l2217
  5451  0012C6  0A01               	xorlw	1	; case 1
  5452  0012C8  E0EC               	bz	l2197
  5453  0012CA  0A03               	xorlw	3	; case 2
  5454  0012CC  E0EC               	bz	l2201
  5455  0012CE  0A01               	xorlw	1	; case 3
  5456  0012D0  E0EC               	bz	l2205
  5457  0012D2  0A07               	xorlw	7	; case 4
  5458  0012D4  E0EC               	bz	l2209
  5459  0012D6  0A01               	xorlw	1	; case 5
  5460  0012D8  E0EC               	bz	l2213
  5461  0012DA  D7EF               	goto	l2217
  5462  0012DC                     l324:
  5463                           
  5464                           ;Turn_counter.c: 652: TXSTA1bits.SYNC = 0;
  5465  0012DC  98AC               	bcf	4012,4,c	;volatile
  5466                           
  5467                           ;Turn_counter.c: 653: TXSTA1bits.TX9 = 0;
  5468  0012DE  9CAC               	bcf	4012,6,c	;volatile
  5469                           
  5470                           ;Turn_counter.c: 654: TXSTA1bits.TXEN = 1;
  5471  0012E0  8AAC               	bsf	4012,5,c	;volatile
  5472                           
  5473                           ;Turn_counter.c: 658: RCSTA1bits.CREN1 = 1;
  5474  0012E2  88AB               	bsf	4011,4,c	;volatile
  5475                           
  5476                           ;Turn_counter.c: 659: RCSTA1bits.RX9 = 0;
  5477  0012E4  9CAB               	bcf	4011,6,c	;volatile
  5478                           
  5479                           ;Turn_counter.c: 660: RCSTA1bits.SPEN = 1;
  5480  0012E6  8EAB               	bsf	4011,7,c	;volatile
  5481                           
  5482                           ;Turn_counter.c: 661: RCSTA1bits.CREN1 = 1;
  5483  0012E8  88AB               	bsf	4011,4,c	;volatile
  5484                           
  5485                           ;Turn_counter.c: 662: RCSTA1bits.FERR = 0;
  5486  0012EA  94AB               	bcf	4011,2,c	;volatile
  5487                           
  5488                           ;Turn_counter.c: 663: RCSTA1bits.OERR =0;
  5489  0012EC  92AB               	bcf	4011,1,c	;volatile
  5490                           
  5491                           ;Turn_counter.c: 666: BAUDCON1bits.RXDTP1 = 0;
  5492  0012EE  9AA7               	bcf	4007,5,c	;volatile
  5493                           
  5494                           ;Turn_counter.c: 667: BAUDCON1bits.TXCKP1 = 0;
  5495  0012F0  98A7               	bcf	4007,4,c	;volatile
  5496                           
  5497                           ;Turn_counter.c: 668: BAUDCON1bits.BRG16 = 0;
  5498  0012F2  96A7               	bcf	4007,3,c	;volatile
  5499                           
  5500                           ;Turn_counter.c: 670: BAUDCON1bits.ABDEN1 = 0;
  5501  0012F4  90A7               	bcf	4007,0,c	;volatile
  5502  0012F6  0012               	return	
  5503  0012F8                     __end_of_UART_Init:
  5504                           	opt stack 0
  5505                           tblptru	equ	0xFF8
  5506                           tblptrh	equ	0xFF7
  5507                           tblptrl	equ	0xFF6
  5508                           tablat	equ	0xFF5
  5509                           prodh	equ	0xFF4
  5510                           prodl	equ	0xFF3
  5511                           intcon	equ	0xFF2
  5512                           intcon2	equ	0xFF1
  5513                           intcon3	equ	0xFF0
  5514                           postinc0	equ	0xFEE
  5515                           wreg	equ	0xFE8
  5516                           indf1	equ	0xFE7
  5517                           postinc1	equ	0xFE6
  5518                           postdec1	equ	0xFE5
  5519                           fsr1h	equ	0xFE2
  5520                           fsr1l	equ	0xFE1
  5521                           indf2	equ	0xFDF
  5522                           postinc2	equ	0xFDE
  5523                           postdec2	equ	0xFDD
  5524                           fsr2h	equ	0xFDA
  5525                           fsr2l	equ	0xFD9
  5526                           status	equ	0xFD8
  5527                           
  5528 ;; *************** function _EEPROM_RdByte *****************
  5529 ;; Defined at:
  5530 ;;		line 98 in file "Turn_counter.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  bAdd            1    wreg     unsigned char 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  bAdd            1   16[COMRAM] unsigned char 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      unsigned char 
  5537 ;; Registers used:
  5538 ;;		wreg, status,2
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5548 ;;Total ram usage:        1 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    1
  5551 ;; This function calls:
  5552 ;;		Nothing
  5553 ;; This function is called by:
  5554 ;;		_EEprom_restore
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text23
  5559  00150E                     __ptext23:
  5560                           	opt stack 0
  5561  00150E                     _EEPROM_RdByte:
  5562                           	opt stack 28
  5563                           
  5564                           ;incstack = 0
  5565                           ;EEPROM_RdByte@bAdd stored from wreg
  5566  00150E  6E11               	movwf	EEPROM_RdByte@bAdd,c
  5567                           
  5568                           ;Turn_counter.c: 105: EEADR = bAdd & 0x0ff;
  5569  001510  C011  FF74         	movff	EEPROM_RdByte@bAdd,3956	;volatile
  5570                           
  5571                           ;Turn_counter.c: 106: EECON1bits.CFGS = 0;
  5572  001514  9C7F               	bcf	3967,6,c	;volatile
  5573                           
  5574                           ;Turn_counter.c: 107: EECON1bits.EEPGD = 0;
  5575  001516  9E7F               	bcf	3967,7,c	;volatile
  5576                           
  5577                           ;Turn_counter.c: 108: EECON1bits.RD = 1;
  5578  001518  807F               	bsf	3967,0,c	;volatile
  5579                           
  5580                           ;Turn_counter.c: 109: __nop();
  5581  00151A  F000               	nop	
  5582                           
  5583                           ;Turn_counter.c: 110: __nop();
  5584  00151C  F000               	nop	
  5585                           
  5586                           ;Turn_counter.c: 111: return EEDATA;
  5587  00151E  5073               	movf	3955,w,c	;volatile
  5588  001520  0012               	return	
  5589  001522                     __end_of_EEPROM_RdByte:
  5590                           	opt stack 0
  5591                           tblptru	equ	0xFF8
  5592                           tblptrh	equ	0xFF7
  5593                           tblptrl	equ	0xFF6
  5594                           tablat	equ	0xFF5
  5595                           prodh	equ	0xFF4
  5596                           prodl	equ	0xFF3
  5597                           intcon	equ	0xFF2
  5598                           intcon2	equ	0xFF1
  5599                           intcon3	equ	0xFF0
  5600                           postinc0	equ	0xFEE
  5601                           wreg	equ	0xFE8
  5602                           indf1	equ	0xFE7
  5603                           postinc1	equ	0xFE6
  5604                           postdec1	equ	0xFE5
  5605                           fsr1h	equ	0xFE2
  5606                           fsr1l	equ	0xFE1
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           postdec2	equ	0xFDD
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function _ADC_Init *****************
  5615 ;; Defined at:
  5616 ;;		line 624 in file "Turn_counter.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;		None
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;		None
  5621 ;; Return value:  Size  Location     Type
  5622 ;;		None               void
  5623 ;; Registers used:
  5624 ;;		wreg, status,2
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5634 ;;Total ram usage:        0 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:    1
  5637 ;; This function calls:
  5638 ;;		Nothing
  5639 ;; This function is called by:
  5640 ;;		_main
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text24
  5645  00146A                     __ptext24:
  5646                           	opt stack 0
  5647  00146A                     _ADC_Init:
  5648                           	opt stack 29
  5649                           
  5650                           ;Turn_counter.c: 627: ADCON0bits.GO_nDONE = 0;
  5651                           
  5652                           ;incstack = 0
  5653  00146A  92C2               	bcf	4034,1,c	;volatile
  5654                           
  5655                           ;Turn_counter.c: 628: ADCON0bits.CHS = 0;
  5656  00146C  94C2               	bcf	4034,2,c	;volatile
  5657  00146E  96C2               	bcf	4034,3,c	;volatile
  5658  001470  98C2               	bcf	4034,4,c	;volatile
  5659  001472  9AC2               	bcf	4034,5,c	;volatile
  5660  001474  9CC2               	bcf	4034,6,c	;volatile
  5661                           
  5662                           ;Turn_counter.c: 629: ADCON1bits.CHSN = 0;
  5663  001476  90C1               	bcf	4033,0,c	;volatile
  5664  001478  92C1               	bcf	4033,1,c	;volatile
  5665  00147A  94C1               	bcf	4033,2,c	;volatile
  5666                           
  5667                           ;Turn_counter.c: 630: ADCON1bits.VCFG = 0;
  5668  00147C  0ECF               	movlw	-49
  5669  00147E  16C1               	andwf	4033,f,c	;volatile
  5670                           
  5671                           ;Turn_counter.c: 631: ADCON1bits.VNCFG = 0;
  5672  001480  96C1               	bcf	4033,3,c	;volatile
  5673                           
  5674                           ;Turn_counter.c: 632: ADCON2bits.ACQT = 2;
  5675  001482  50C0               	movf	4032,w,c	;volatile
  5676  001484  0BC7               	andlw	-57
  5677  001486  0910               	iorlw	16
  5678  001488  6EC0               	movwf	4032,c	;volatile
  5679                           
  5680                           ;Turn_counter.c: 633: ADCON2bits.ADCS = 1;
  5681  00148A  50C0               	movf	4032,w,c	;volatile
  5682  00148C  0BF8               	andlw	-8
  5683  00148E  0901               	iorlw	1
  5684  001490  6EC0               	movwf	4032,c	;volatile
  5685                           
  5686                           ;Turn_counter.c: 634: ADCON2bits.ADFM = 1;
  5687  001492  8EC0               	bsf	4032,7,c	;volatile
  5688                           
  5689                           ;Turn_counter.c: 636: ADCON0bits.ADON = 1;
  5690  001494  80C2               	bsf	4034,0,c	;volatile
  5691  001496  0012               	return	
  5692  001498                     __end_of_ADC_Init:
  5693                           	opt stack 0
  5694                           tblptru	equ	0xFF8
  5695                           tblptrh	equ	0xFF7
  5696                           tblptrl	equ	0xFF6
  5697                           tablat	equ	0xFF5
  5698                           prodh	equ	0xFF4
  5699                           prodl	equ	0xFF3
  5700                           intcon	equ	0xFF2
  5701                           intcon2	equ	0xFF1
  5702                           intcon3	equ	0xFF0
  5703                           postinc0	equ	0xFEE
  5704                           wreg	equ	0xFE8
  5705                           indf1	equ	0xFE7
  5706                           postinc1	equ	0xFE6
  5707                           postdec1	equ	0xFE5
  5708                           fsr1h	equ	0xFE2
  5709                           fsr1l	equ	0xFE1
  5710                           indf2	equ	0xFDF
  5711                           postinc2	equ	0xFDE
  5712                           postdec2	equ	0xFDD
  5713                           fsr2h	equ	0xFDA
  5714                           fsr2l	equ	0xFD9
  5715                           status	equ	0xFD8
  5716                           
  5717 ;; *************** function _ISR *****************
  5718 ;; Defined at:
  5719 ;;		line 730 in file "Turn_counter.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;		None
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;		None               void
  5726 ;; Registers used:
  5727 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5735 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5736 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5737 ;;Total ram usage:       16 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		Interrupt level 2
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	intcode
  5747  000008                     __pintcode:
  5748                           	opt stack 0
  5749  000008                     _ISR:
  5750                           	opt stack 27
  5751                           
  5752                           ;incstack = 0
  5753  000008  CFFA F003          	movff	pclath,??_ISR+2
  5754  00000C  CFFB F004          	movff	pclatu,??_ISR+3
  5755  000010  CFE9 F005          	movff	fsr0l,??_ISR+4
  5756  000014  CFEA F006          	movff	fsr0h,??_ISR+5
  5757  000018  CFE1 F007          	movff	fsr1l,??_ISR+6
  5758  00001C  CFE2 F008          	movff	fsr1h,??_ISR+7
  5759  000020  CFD9 F009          	movff	fsr2l,??_ISR+8
  5760  000024  CFDA F00A          	movff	fsr2h,??_ISR+9
  5761  000028  CFF3 F00B          	movff	prodl,??_ISR+10
  5762  00002C  CFF4 F00C          	movff	prodh,??_ISR+11
  5763  000030  CFF6 F00D          	movff	tblptrl,??_ISR+12
  5764  000034  CFF7 F00E          	movff	tblptrh,??_ISR+13
  5765  000038  CFF8 F00F          	movff	tblptru,??_ISR+14
  5766  00003C  CFF5 F010          	movff	tablat,??_ISR+15
  5767                           
  5768                           ;Turn_counter.c: 732: if(INTCON3bits.INT1IF)
  5769  000040  A0F0               	btfss	intcon3,0,c	;volatile
  5770  000042  D00B               	goto	i2l2607
  5771                           
  5772                           ;Turn_counter.c: 733: {
  5773                           ;Turn_counter.c: 735: TMR1L = 0x00;
  5774  000044  0E00               	movlw	0
  5775  000046  6ECE               	movwf	4046,c	;volatile
  5776                           
  5777                           ;Turn_counter.c: 736: TMR1H = 0x0f;
  5778  000048  0E0F               	movlw	15
  5779  00004A  6ECF               	movwf	4047,c	;volatile
  5780                           
  5781                           ;Turn_counter.c: 737: T1CONbits.TMR1ON = 1;
  5782  00004C  80CD               	bsf	4045,0,c	;volatile
  5783                           
  5784                           ;Turn_counter.c: 739: V_detect = 1;
  5785  00004E  0E00               	movlw	0
  5786  000050  0100               	movlb	0	; () banked
  5787  000052  6F8B               	movwf	(_V_detect+1)& (0+255),b
  5788  000054  0E01               	movlw	1
  5789  000056  6F8A               	movwf	_V_detect& (0+255),b
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;Turn_counter.c: 740: INTCON3bits.INT1IF = 0;
  5793  000058  90F0               	bcf	intcon3,0,c	;volatile
  5794  00005A                     i2l2607:
  5795                           
  5796                           ;Turn_counter.c: 742: }
  5797                           ;Turn_counter.c: 744: if (PIR1bits.RC1IF)
  5798  00005A  AA9E               	btfss	3998,5,c	;volatile
  5799  00005C  D00E               	goto	i2l2613
  5800                           
  5801                           ;Turn_counter.c: 745: {
  5802                           ;Turn_counter.c: 746: wr_ptr++;
  5803  00005E  2A45               	incf	_wr_ptr,f,c
  5804                           
  5805                           ;Turn_counter.c: 747: rx_buf[wr_ptr & 0x0F] = RCREG1;
  5806  000060  5045               	movf	_wr_ptr,w,c
  5807  000062  0B0F               	andlw	15
  5808  000064  6E01               	movwf	??_ISR& (0+255),c
  5809  000066  6A02               	clrf	(??_ISR+1)& (0+255),c
  5810  000068  0E60               	movlw	low _rx_buf
  5811  00006A  2401               	addwf	??_ISR,w,c
  5812  00006C  6ED9               	movwf	fsr2l,c
  5813  00006E  0100               	movlb	0	; () banked
  5814  000070  0E00               	movlw	high _rx_buf
  5815  000072  2002               	addwfc	??_ISR+1,w,c
  5816  000074  6EDA               	movwf	fsr2h,c
  5817  000076  CFAE FFDF          	movff	4014,indf2	;volatile
  5818  00007A                     i2l2613:
  5819                           
  5820                           ;Turn_counter.c: 748: }
  5821                           ;Turn_counter.c: 750: if (PIR1bits.TMR1IF)
  5822  00007A  A09E               	btfss	3998,0,c	;volatile
  5823  00007C  D006               	goto	i2l346
  5824                           
  5825                           ;Turn_counter.c: 751: {
  5826                           ;Turn_counter.c: 752: T1CONbits.TMR1ON = 0;
  5827  00007E  90CD               	bcf	4045,0,c	;volatile
  5828                           
  5829                           ;Turn_counter.c: 753: V_detect = 0;
  5830  000080  0E00               	movlw	0
  5831  000082  0100               	movlb	0	; () banked
  5832  000084  6F8B               	movwf	(_V_detect+1)& (0+255),b
  5833  000086  6F8A               	movwf	_V_detect& (0+255),b
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;Turn_counter.c: 754: PIR1bits.TMR1IF = 0;
  5837  000088  909E               	bcf	3998,0,c	;volatile
  5838  00008A                     i2l346:
  5839  00008A  C010  FFF5         	movff	??_ISR+15,tablat
  5840  00008E  C00F  FFF8         	movff	??_ISR+14,tblptru
  5841  000092  C00E  FFF7         	movff	??_ISR+13,tblptrh
  5842  000096  C00D  FFF6         	movff	??_ISR+12,tblptrl
  5843  00009A  C00C  FFF4         	movff	??_ISR+11,prodh
  5844  00009E  C00B  FFF3         	movff	??_ISR+10,prodl
  5845  0000A2  C00A  FFDA         	movff	??_ISR+9,fsr2h
  5846  0000A6  C009  FFD9         	movff	??_ISR+8,fsr2l
  5847  0000AA  C008  FFE2         	movff	??_ISR+7,fsr1h
  5848  0000AE  C007  FFE1         	movff	??_ISR+6,fsr1l
  5849  0000B2  C006  FFEA         	movff	??_ISR+5,fsr0h
  5850  0000B6  C005  FFE9         	movff	??_ISR+4,fsr0l
  5851  0000BA  C004  FFFB         	movff	??_ISR+3,pclatu
  5852  0000BE  C003  FFFA         	movff	??_ISR+2,pclath
  5853  0000C2  0011               	retfie		f
  5854  0000C4                     __end_of_ISR:
  5855                           	opt stack 0
  5856  0000                     pclatu	equ	0xFFB
  5857                           pclath	equ	0xFFA
  5858                           tblptru	equ	0xFF8
  5859                           tblptrh	equ	0xFF7
  5860                           tblptrl	equ	0xFF6
  5861                           tablat	equ	0xFF5
  5862                           prodh	equ	0xFF4
  5863                           prodl	equ	0xFF3
  5864                           intcon	equ	0xFF2
  5865                           intcon2	equ	0xFF1
  5866                           intcon3	equ	0xFF0
  5867                           postinc0	equ	0xFEE
  5868                           fsr0h	equ	0xFEA
  5869                           fsr0l	equ	0xFE9
  5870                           wreg	equ	0xFE8
  5871                           indf1	equ	0xFE7
  5872                           postinc1	equ	0xFE6
  5873                           postdec1	equ	0xFE5
  5874                           fsr1h	equ	0xFE2
  5875                           fsr1l	equ	0xFE1
  5876                           indf2	equ	0xFDF
  5877                           postinc2	equ	0xFDE
  5878                           postdec2	equ	0xFDD
  5879                           fsr2h	equ	0xFDA
  5880                           fsr2l	equ	0xFD9
  5881                           status	equ	0xFD8
  5882                           pclatu	equ	0xFFB
  5883                           pclath	equ	0xFFA
  5884                           tblptru	equ	0xFF8
  5885                           tblptrh	equ	0xFF7
  5886                           tblptrl	equ	0xFF6
  5887                           tablat	equ	0xFF5
  5888                           prodh	equ	0xFF4
  5889                           prodl	equ	0xFF3
  5890                           intcon	equ	0xFF2
  5891                           intcon2	equ	0xFF1
  5892                           intcon3	equ	0xFF0
  5893                           postinc0	equ	0xFEE
  5894                           fsr0h	equ	0xFEA
  5895                           fsr0l	equ	0xFE9
  5896                           wreg	equ	0xFE8
  5897                           indf1	equ	0xFE7
  5898                           postinc1	equ	0xFE6
  5899                           postdec1	equ	0xFE5
  5900                           fsr1h	equ	0xFE2
  5901                           fsr1l	equ	0xFE1
  5902                           indf2	equ	0xFDF
  5903                           postinc2	equ	0xFDE
  5904                           postdec2	equ	0xFDD
  5905                           fsr2h	equ	0xFDA
  5906                           fsr2l	equ	0xFD9
  5907                           status	equ	0xFD8
  5908                           
  5909                           	psect	rparam
  5910  0000                     pclatu	equ	0xFFB
  5911                           pclath	equ	0xFFA
  5912                           tblptru	equ	0xFF8
  5913                           tblptrh	equ	0xFF7
  5914                           tblptrl	equ	0xFF6
  5915                           tablat	equ	0xFF5
  5916                           prodh	equ	0xFF4
  5917                           prodl	equ	0xFF3
  5918                           intcon	equ	0xFF2
  5919                           intcon2	equ	0xFF1
  5920                           intcon3	equ	0xFF0
  5921                           postinc0	equ	0xFEE
  5922                           fsr0h	equ	0xFEA
  5923                           fsr0l	equ	0xFE9
  5924                           wreg	equ	0xFE8
  5925                           indf1	equ	0xFE7
  5926                           postinc1	equ	0xFE6
  5927                           postdec1	equ	0xFE5
  5928                           fsr1h	equ	0xFE2
  5929                           fsr1l	equ	0xFE1
  5930                           indf2	equ	0xFDF
  5931                           postinc2	equ	0xFDE
  5932                           postdec2	equ	0xFDD
  5933                           fsr2h	equ	0xFDA
  5934                           fsr2l	equ	0xFD9
  5935                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         609
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      78
    BANK0           160     17      70
    BANK1           256    208     248
    BANK2           256      0     250
    BANK3           256      0     250
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    modbus_CRC16@buf	PTR unsigned char  size(2) Largest target is 250
		 -> crc_buf(BANK3[250]), 


Critical Paths under _main in COMRAM

    _main->___fttol
    _modbus_rx_sm->_modbus_rx_CRC_check
    _modbus_rx_CRC_check->_modbus_CRC16
    _modbus_poll->_modbus_rhr_answer
    _modbus_wsr_answer->_modbus_CRC16
    _modbus_rhr_answer->_modbus_CRC16
    _modbus_refresh->_EEPROM_WrByte
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _EEprom_restore->_EEPROM_RdByte
    _EEprom_restore->_UART_Init

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___fttol

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               216   216      0   12826
                                             11 BANK0      6     6      0
                                              0 BANK1    208   208      0
                           _ADC_Init
                      _EEPROM_WrByte
                     _EEprom_restore
                          _GPIO_init
                     _Hold_reg_Inint
                     _Interrupt_Init
                        _Timer1_init
                          _UART_Init
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                        _modbus_poll
                       _modbus_reset
                       _modbus_rx_sm
 ---------------------------------------------------------------------------------
 (1) _modbus_rx_sm                                         3     3      0     660
                                             34 COMRAM     3     3      0
                          _get_rx_ch
                _modbus_rx_CRC_check
 ---------------------------------------------------------------------------------
 (2) _modbus_rx_CRC_check                                  4     4      0     636
                                             30 COMRAM     4     4      0
                       _modbus_CRC16
 ---------------------------------------------------------------------------------
 (2) _get_rx_ch                                            3     3      0      24
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _modbus_poll                                          2     2      0    3663
                                             37 COMRAM     2     2      0
                      _EEPROM_WrByte
                     _modbus_refresh
                       _modbus_reset
                  _modbus_rhr_answer
                  _modbus_wsr_answer
 ---------------------------------------------------------------------------------
 (2) _modbus_wsr_answer                                    3     3      0     636
                                             30 COMRAM     3     3      0
                       _modbus_CRC16
                      _uart_send_hex
 ---------------------------------------------------------------------------------
 (2) _modbus_rhr_answer                                    7     7      0     731
                                             30 COMRAM     7     7      0
                       _modbus_CRC16
                      _uart_send_hex
 ---------------------------------------------------------------------------------
 (3) _uart_send_hex                                        1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _modbus_CRC16                                        14    11      3     614
                                             16 COMRAM    14    11      3
 ---------------------------------------------------------------------------------
 (1) _modbus_reset                                         2     2      0      68
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _modbus_refresh                                       4     4      0    1136
                                             19 COMRAM     4     4      0
                      _EEPROM_WrByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WrByte                                        3     2      1    1092
                                             16 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2120
                                             24 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1186
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     525
                                             41 COMRAM     4     0      4
                                              0 BANK0     11    11      0
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2747
                                             27 COMRAM    14     8      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1970
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hold_reg_Inint                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEprom_restore                                       3     3      0      44
                                             17 COMRAM     3     3      0
                      _EEPROM_RdByte
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_RdByte                                        1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 16    16      0       0
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _EEPROM_WrByte
   _EEprom_restore
     _EEPROM_RdByte
     _UART_Init
   _GPIO_init
   _Hold_reg_Inint
   _Interrupt_Init
   _Timer1_init
   _UART_Init
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwdiv
   ___lwtoft
     ___ftpack
   _modbus_poll
     _EEPROM_WrByte
     _modbus_refresh
       _EEPROM_WrByte
     _modbus_reset
     _modbus_rhr_answer
       _modbus_CRC16
       _uart_send_hex
     _modbus_wsr_answer
       _modbus_CRC16
       _uart_send_hex
   _modbus_reset
   _modbus_rx_sm
     _get_rx_ch
     _modbus_rx_CRC_check
       _modbus_CRC16

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FA      10       97.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     D0      F8       8       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      46       5       43.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      4E       1       82.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     380       6        0.0%
DATA                 0      0     380       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Sep 25 17:11:25 2018

             ??_Interrupt_Init 0011                    __CFG_BORV$3 000000                     _TXREG1bits 000FAD  
       __end_of_modbus_refresh 09C8                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                            l204 14E2  
                          l230 0942                            l232 0952                            l224 09BA  
                          l153 13B8                            l233 097A                            l241 1408  
                          l234 0984                            l226 08E4                            l250 1260  
                          l307 104A                            l324 12DC                            l228 08EE  
                          l229 0918                            l247 1246                            l284 0D0A  
                          l380 043C                            l377 025A                            l369 0128  
                          l781 0F86                            l896 1384                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000                            _ISR 0008                            u885 13C8  
                          u886 13CA                            _Buf 0084                            prod 000FF3  
                          wreg 000FE8                     _TXSTA1bits 000FAC                ??_uart_send_hex 0011  
                         ?_ISR 0001                           l2003 1268                           l2201 12A6  
                         l3001 02BA                           l2213 12B2                           l2205 12AA  
                         l2221 12C2                           l2061 08DC                           l2141 0B7E  
                         l2301 0D76                           l3005 02C2                           l2231 11B0  
                         l2071 094C                           l2039 1434                           l2303 0D7E  
                         l2217 12BA                           l2209 12AE                           l2241 11F2  
                         l2233 11BA                           l2161 0C3C                           l2321 0DCC  
                         l3121 0776                           l2243 11FC                           l2235 11CE  
                         l2227 11A6                           l2147 0BF4                           l2091 13F2  
                         l2323 0DE0                           l3051 0530                           l2077 098E  
                         l2309 0D9E                           l2317 0DBE                           l2261 0CDA  
                         l3053 053A                           l2423 09F0                           l2239 11E0  
                         l2167 0C96                           l2351 101E                           l2319 0DC8  
                         l2271 0CFE                           l3135 0796                           l3119 0702  
                         l3039 0444                           l2433 0A28                           l2425 09F4  
                         l2417 09DA                           l2337 0FD8                           l2265 0CE4  
                         l2443 0A66                           l2363 1038                           l2275 0D1A  
                         l2267 0CEE                           l2259 0CD2                           l2197 12A2  
                         l2453 0AA0                           l2293 0D58                           l3077 05CC  
                         l2463 0ADA                           l2287 0D42                           l2473 0B16  
                         l2483 0B54                           l2491 0EF6                           l3099 0654  
                         l2901 0E72                           l2581 135C                           l2911 0E98  
                         l2591 137A                           l2583 1360                           l2497 0F18  
                         l2913 0EA6                           l2905 0E84                           l2915 0EAC  
                         l2579 1354                           l2919 0EC2                           l1985 1228  
                         l2883 0E12                           l1997 125A                           l2965 0158  
                         l2949 012A                           l2989 01E4                           u1035 1334  
                         u2007 0352                           u2017 038C                           u1331 0EE4  
                         u2107 0644                           u2027 0396                           _IOCB 000F5A  
                         u2117 06C0                           u2037 0558                           u1351 0F06  
                         u2127 06CA                           u2047 0562                           u2137 07B0  
                         u2057 0594                           u2147 07BA                           u2067 05BC  
                         u1701 0DFC                           u2157 07F2                           u2077 05E0  
                         u2167 080C                           u2087 05EA                           u1720 0E34  
                         u2177 1106                           u2097 061C                           u2187 0CC2  
                         u1725 0E2A                           u2197 14F2                           u1967 0170  
                         u1977 0190                           u1987 01D4                           u1997 0348  
                 __CFG_WDTPS$1 000000                           _flag 008E                 _Hold_reg_Inint 14FA  
                         _grad 01DE                           _main 00C8                   ___ftpack@arg 0011  
                 ___ftpack@exp 0014                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           indf1 000FE7  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
             __end_of_ADC_Init 1498                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 00C4                  __CFG_IESO$OFF 000000  
                __CFG_FOSC$HS1 000000             __size_of_GPIO_init 002E                  __CFG_MCLRE$ON 000000  
  __end_of_modbus_rx_CRC_check 1344                   ___ftmul@sign 0026                          ??_ISR 0001  
                 ___fttol@exp1 009F                   ___fttol@lval 009B                   _BAUDCON1bits 000FA7  
              ?_modbus_refresh 0001                          ?_main 0001                          _EEADR 000F74  
                        _CRC16 002E                __end_of___ftmul 0FB4                __end_of___fttol 0ED4  
              __end_of___lwdiv 138E                          i2l346 008A                          _TMR0H 000FD7  
                        _TMR1H 000FCF                          _TMR0L 000FD6                          _TMR1L 000FCE  
                 main@curr_arr 0100                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
               __CFG_EBTR3$OFF 000000             __size_of_UART_Init 005A                   get_rx_ch@rch 0013  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                          _count 0094        __size_of_EEprom_restore 0196  
       modbus_refresh@cmd_type 0017                  ___ftpack@sign 0015             _ADC_current_result 0080  
                        main@i 01CA         __end_of_Hold_reg_Inint 150E                 __CFG_BOREN$OFF 000000  
                        tablat 000FF5                   _CHANGE_MOTOR 0046              EEPROM_WrByte@bAdd 0012  
                        status 000FD8                __initialization 1114                   ?_modbus_poll 0001  
                 __end_of_main 0818          __end_of_EEPROM_RdByte 1522                  modbus_CRC16@i 001C  
        __end_of_EEPROM_WrByte 13D0                         ??_main 00A0                  ___fttol@sign1 009A  
                __activetblptr 000002                 __CFG_PLLCFG$ON 000000                 __CFG_RETEN$OFF 000000  
                 _bd_rate_code 004C                 _refresh_offset 0090              __end_of_GPIO_init 146A  
                       _ADRESH 000FC4                         _ADRESL 000FC3                         _EEDATA 000F73  
                       _EECON2 000F7E               __end_of___ftpack 1220                         _GRAD_2 0086  
              ?_Hold_reg_Inint 0001                __CFG_BBSIZ$BB2K 000000                         i2l2613 007A  
               __CFG_WDTEN$OFF 000000                         i2l2607 005A                         _RCREG1 000FAE  
             __end_of___lwtoft 14BC                         _SPBRG1 000FAF                 __CFG_XINST$OFF 000000  
                ??_Timer1_init 0011              __end_of_UART_Init 12F8                 __CFG_STVREN$ON 000000  
                    ??___ftmul 0022                      ??___fttol 0095                         _dev_id 004D  
                    ??___lwdiv 0015                         _answer 003C                         _offset 01E2  
                       clear_0 111A                         clear_1 1126                         clear_2 1132  
                       clear_3 113E                         clear_4 114A                         _rd_ptr 0040  
                       _rx_buf 0060                         _wr_ptr 0045          ___ftmul@f3_as_product 0027  
                 __pdataCOMRAM 0046                      ?_ADC_Init 0001                  modbus_reset@i 0011  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
           EEPROM_WrByte@bData 0011                     __accesstop 0060                  ?_modbus_CRC16 0011  
      __end_of__initialization 1190                     ___ftmul@f1 001C                     ___ftmul@f2 001F  
                   ___fttol@f1 002A                 __pcstackCOMRAM 0001                  ?_modbus_reset 0001  
                 __pidataBANK1 153B                  ?_modbus_rx_sm 0001        EEPROM_WrByte@GIEBitsVal 0013  
          __end_of_Timer1_init 1532                     ___lwtoft@c 0019                     _addr_buf_1 0030  
                   _addr_buf_2 008C                     _bd_rate_fl 003D                     ??_ADC_Init 0011  
               _EEprom_restore 09C8             __size_of_get_rx_ch 003C            _turns_percent_press 01EE  
                   __pbssBANK0 0060                     __pbssBANK1 01D0                     __pbssBANK2 0200  
                   __pbssBANK3 0300                 ??_modbus_CRC16 0014                 ??_modbus_reset 0011  
               ??_modbus_rx_sm 0023               ??_modbus_refresh 0014           __size_of_modbus_poll 00B6  
                    ?___ftpack 0011                      ?___lwtoft 0019               __CFG_CANMX$PORTC 000000  
                   _eeprom_buf 0032         __end_of_EEprom_restore 0B5E                        _SET_MAX 01DA  
                      _SET_MIN 01DC                        _POT_MAX 0048                        _POT_MIN 004A  
        __end_of_uart_send_hex 14FA              uart_send_hex@temp 0011                  _reg_addr_flag 0041  
              __CFG_PWRTEN$OFF 000000                        __Hparam 0000             modbus_rhr_answer@i 0023  
           modbus_rhr_answer@j 0024                        __Lparam 0000                    _Timer1_init 1522  
            __end_of_get_rx_ch 140C                 _TURN_PERCENT_2 0088                        ___ftmul 0ED4  
                      ___fttol 0DEA                        ___lwdiv 1344                        __pcinit 1114  
                   ??___ftpack 0016                        __ramtop 0F00                        _crc_buf 0300  
                      __ptext0 00C8                        __ptext1 0CD0                        __ptext2 12F8  
                      __ptext3 13D0                        __ptext4 0FB4                        __ptext5 106A  
                      __ptext6 0B5E                        __ptext7 14E0                        __ptext8 1220  
                      __ptext9 140C   __size_of_modbus_rx_CRC_check 004C                     ??___lwtoft 001C  
                      _led_cnt 01F6                      _T0CONbits 000FD5                     _read_turns 01E8  
                 __size_of_ISR 00BC                      _T1CONbits 000FCD        __size_of_Interrupt_Init 0024  
              ?_EEprom_restore 0001               ??_Hold_reg_Inint 0011              __CFG_MSSPMSK$MSK7 000000  
                      _rx_byte 0044             __CFG_INTOSCSEL$LOW 000000           end_of_initialization 1190  
                    _GPIO_init 143C                   _get_crc_flag 003E                  __Lmediumconst 0000  
                _turns_percent 01EC                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                    _UART_Init 129E           __end_of_modbus_CRC16 129E                      _PORTBbits 000F81  
modbus_rx_CRC_check@modbus_cmd 0022                      _TRISAbits 000F92                      _TRISBbits 000F93  
                    _TRISCbits 000F94           __end_of_modbus_reset 143C              __size_of_ADC_Init 002E  
                   main@i_1470 01CC                     main@i_1471 01CE           __end_of_modbus_rx_sm 0DEA  
                   ?_GPIO_init 0001         __size_of_EEPROM_RdByte 0014         __size_of_EEPROM_WrByte 0042  
                  ___ftmul@exp 0025                    _ADC_RES_BUF 01D0                     ?_UART_Init 0001  
                __pidataCOMRAM 1532            start_initialization 1114                    __end_of_ISR 00C4  
              modbus_CRC16@crc 001D                modbus_CRC16@buf 0011                modbus_CRC16@len 0013  
              modbus_CRC16@pos 001B           modbus_rhr_answer@cnt 0025                 _set_zero_error 0092  
                  __pdataBANK1 01F4                  _EEPROM_RdByte 150E                  _EEPROM_WrByte 138E  
               _Interrupt_Init 14BC              __size_of___ftpack 0086                    __pbssCOMRAM 002E  
            __size_of___lwtoft 0024                  __pcstackBANK0 0095                  __pcstackBANK1 0100  
              _ADC_cutoff_null 0082                _ADC_current_dif 01D2                _ADC_current_max 01D4  
              _ADC_current_min 01F4                _ADC_current_rms 01D6                    ??_GPIO_init 0011  
          _modbus_rx_CRC_check 12F8                      __pnvBANK1 01F0                      _main$2017 01C8  
             ___lwdiv@dividend 0011                      _id_change 003F                   ?_Timer1_init 0001  
                ??_modbus_poll 0026          __size_of_modbus_CRC16 007E                      __pintcode 0008  
                     ?___ftmul 001C                       ?___fttol 002A                 ?_EEPROM_RdByte 0001  
                     ?___lwdiv 0011                    ??_UART_Init 0011               ??_EEprom_restore 0012  
               ?_EEPROM_WrByte 0011         __end_of_Interrupt_Init 14E0           ?_modbus_rx_CRC_check 0001  
                    _get_rx_ch 13D0              _modbus_rhr_answer 0B5E          __size_of_modbus_reset 0030  
                    _grad_step 01E0          __size_of_modbus_rx_sm 011A                       _ADC_Init 146A  
           ?_modbus_rhr_answer 0001               ___lwdiv@quotient 0015                      _regs2read 0038  
          ??_modbus_rhr_answer 001F                   _modbus_CRC16 1220                       _LATCbits 000F8B  
                     _PIE1bits 000F9D                       _PIR1bits 000F9E                       _GO_nDONE 007E11  
                     _RCONbits 000FD0                   _modbus_reset 140C                   _modbus_rx_sm 0CD0  
       __size_of_uart_send_hex 001A      __end_of_modbus_rhr_answer 0CD0          ??_modbus_rx_CRC_check 001F  
              ?_Interrupt_Init 0001                     ?_get_rx_ch 0001            __end_of_modbus_poll 106A  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
                 _reg_qty_flag 0042               __CFG_SOSCSEL$DIG 000000        __size_of_modbus_refresh 01B0  
                 _percent_step 01E6                    _INTCON2bits 000FF1                    _INTCON3bits 000FF0  
                    copy_data0 1164                      copy_data1 1184              _modbus_wsr_answer 106A  
           ?_modbus_wsr_answer 0001                     _EECON1bits 000F7F                       _V_detect 008A  
                   _ANCON0bits 000F5D                     _ANCON1bits 000F5C                       __Hrparam 0000  
                     __Lrparam 0000                ??_EEPROM_RdByte 0011            ??_modbus_wsr_answer 001F  
              ??_EEPROM_WrByte 0012               __size_of___ftmul 00E0               __size_of___fttol 00EA  
             __size_of___lwdiv 004A                       ___ftpack 119A               _GRAD_cutoff_null 01D8  
                     ___lwtoft 1498                    _current_max 01F0                ___lwdiv@divisor 0013  
              ___lwdiv@counter 0017      __end_of_modbus_wsr_answer 1114                       __ptext10 0818  
                     __ptext11 138E                       __ptext20 143C                       __ptext12 1498  
                     __ptext21 09C8                       __ptext13 1344                     _T1GCONbits 000FAA  
                     __ptext22 129E                       __ptext14 0DEA                       __ptext23 150E  
                     __ptext15 0ED4                       __ptext24 146A                       __ptext16 119A  
                     __ptext17 1522                       __ptext18 14BC                       __ptext19 14FA  
                _uart_send_hex 14E0                  __size_of_main 0750        __size_of_Hold_reg_Inint 0014  
                     _rd_state 004E               _holding_register 0200                       _temp_buf 003A  
                     _set_zero 01EA                    _modbus_poll 0FB4          UART_Init@bd_rate_code 0011  
                  _reg_wr_data 0036                    _reg_wr_flag 0043           __size_of_Timer1_init 0010  
   __size_of_modbus_rhr_answer 0172                    ??_get_rx_ch 0011                     _INTCONbits 000FF2  
               ?_uart_send_hex 0001                _modbus_reg_addr 0034                       intlevel2 0000  
            EEPROM_RdByte@bAdd 0011                   _num_of_turns 01F2                     _RCSTA1bits 000FAB  
               _modbus_refresh 0818     __size_of_modbus_wsr_answer 00AA            __CFG_BORPWR$ZPBORMV 000000  
                  _overcurrent 01E4  
