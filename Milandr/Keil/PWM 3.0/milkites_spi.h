#ifndef __MILKITES_SPI_H__
#define __MILKITES_SPI_H__

#define U8  uint8_t
#define U16 uint16_t 
#define U32 uint32_t

#define S8  int8_t
#define S16 int16_t 
#define S32 int32_t

#define LCD_CS_OFF 	     MDR_PORTF->RXTX &=  ~(1<<2)

/*--------------------------------------------------------------------------- */
// SPI
	void MDR32_SSP1_init (void){
	  
	 
  // Настройка модуля SSP1 для работы с MT-12864B: режим мастрера, 16-битный режим
	MDR_RST_CLK->SSP_CLOCK = (1 << 24) |    // Разрешение тактовой частоты на SSP 1
                                 0;       // Делитель тактовой частоты SSP1, SSP1_CLK = HCLK (8 МГц)
    
	MDR_SSP1->CR0 = (0 << 8) | 			  // Задает параметр SCR формулы F_SSP1 = SSP1_CLK / (CPSDVR*(1  + SCR)) 
									(1 << 7) |			  // Фаза  сигнала  SSPCLKOUT, инверсная фаза клока
									(1 << 6) |			  // Полярность  сигнала  SSPCLKOUT, стробирование по переднему фронту
									(0 << 4) |			  // Формат информационного кадра -  протокол SPI фирмы Motorola
												7;				  // Размер слова данных - 0111 – 16 бит
   
	MDR_SSP1->CPSR = 2; 				  // Коэффициент  деления  тактовой  частоы CPSDVR
															  // Таким образом, при CPSDVR = 2, SCR = 0, F_SSP1 = 8 МГц
																// частота SSP1_CLK получается равной 4 МГц
	
	MDR_SSP1->CR1 = (0 << 2) |			  // Выбор ведущего или ведомого режима работы: 0 – ведущий модуль 
					(1 << 1); 		    			  // Разрешение работы приемопередатчика
	
  // пины SPI1_TxD и SPI1_CLK настроены на выход в GPIO_init()
	// также включен альтернативный режим порта - задействован модуль SSP1
  // пины PF0 - PF3 используются этим модулем!
	}

	void SPI1_Wr_Data (U16 data){
	  
	  // функция отправки данных на шину SSP1
	  // регистр DR - 16 бит
	  MDR_SSP1->DR = data;
	  //------- для работы с дисплеем MT 12864B --------------------------------
	  
	  delay_us(3);			  // задержка обязательно нужна
	  LCD_CS_OFF;				  // принудительно опускаем SSP1_FSS, 
	  							      // отделяя тем самым каждый байт передачи	
							  	      // устанавливается он автоматически при передаче
	  //------- для работы с дисплеем MT 12864B --------------------------------
	}

	U16 SPI1_Rd_Data (void){
	  
	  // функция считывния данных шины SSP1
	  // регистр DR - 16 бит
	  
	  U16 rx_buf = 0;
	  MDR_SSP1->DR = 0;	         // инициировать тактовые импульсы
	  while(MDR_SSP1->SR & 1<<4) { } // ждем готовности модуля
	  
	  rx_buf = MDR_SSP1->DR;
	  
	  return rx_buf;

	}
#endif
	