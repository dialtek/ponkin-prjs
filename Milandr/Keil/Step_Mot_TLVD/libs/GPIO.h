#include "MDR32Fx.h" // подключение библиотеки МК


/*настройка кнопок*/
//#define PE3 33
//#define PE6 105
//#define PB4 57
//#define PE7 169
//#define PD7 45

#define F_CPU 80000000


 static void CPU_init ( void ){
     //Необходимая пауза для работы Flash-памяти программ
     MDR_EEPROM->CMD |= (3 << 3);

     MDR_RST_CLK->HS_CONTROL = 0x01;// вкл. HSE осцилятора (частота кварца 8 МГц)
     while ((MDR_RST_CLK->CLOCK_STATUS & (1 << 2)) == 0x00);// ждем пока HSE выйдет в рабочий режим

     MDR_RST_CLK->CPU_CLOCK = ((2 << 0));//подача частоты на блок PLL
     MDR_RST_CLK->PLL_CONTROL = ((1 << 2) | (9 << 8));//вкл. PLL  | коэф. умножения = 10
     while ((MDR_RST_CLK->CLOCK_STATUS & 0x02) != 0x02);// ждем когда PLL выйдет в раб. режим

     MDR_RST_CLK->CPU_CLOCK = ((2 << 0)//источник для CPU_C1
                             | (1 << 2)//источник для CPU_C2
                             | (0 << 4)//предделитель для CPU_C3
                             | (1 << 8));//источник для HCLK

     MDR_BKP->REG_0E |= (7 << 0); //режим встроенного регулятора напряжения DUcc
     MDR_BKP->REG_0E |= (7 << 3); //выбор доп.стабилизирующей нагрузки
}//void CPU_init


 static void GPIO(void)
{
	
MDR_RST_CLK->PER_CLOCK = 0xffffffff; //Инициализация всех портов и устройств
/*---------Настройка порта А----------------------*/	

	/*------------------------------------------------------------------------------*/
//  	MDR_PORTA->OE = 0x8;     //направление передачи данных - Выход ( PA: 3  )
//    MDR_PORTA->ANALOG = 0x8;     //режим работы контроллера - Цифровой ( PA: 3  )
//    //режим работы пинов:
//                          //Альтернативная фукция ( PA: 3  )
//    MDR_PORTA->FUNC   = 0x80; 
//    MDR_PORTA->PD   = (0x0 << 16) | (0x0);     //режим работы выводов
//    //скорость :
//                         // Быстрый фронт ( PA: 3  )
//    MDR_PORTA->PWR   = 0x80; 
		
		/*-------------------------------------------------------*/
 
/*---------Настройка порта В----------------------*/	

		// Инициализация структуры для настройки порта

/*---------Настройка порта Е----------------------*/		
	
MDR_PORTE->OE = 0xff37; //на выход PORTE кроме PE3 и PE6 и PE7
MDR_PORTE->FUNC = 0x0000;
MDR_PORTE->PWR = 0xff37; // максимально быстрый фронт
MDR_PORTE->ANALOG = 0xffff;	

/*---------Настройка порта D----------------------*/	
MDR_PORTD->OE =0xff7f; //на выход PORTD кроме PD7
MDR_PORTD->FUNC = 0x0000;
MDR_PORTD->PWR = 0xffff; // максимально быстрый фронт
MDR_PORTD->ANALOG = 0xffff;
/*----------------Режим работы как аналоговый вход------------------*/
MDR_PORTD->OE &=~ (1 << 4); // настройка PD4 на вход
MDR_PORTD->ANALOG &=~ (1 << 4); // перевод PD4 в аналоговый режим работы
/*------------------------------------------------------------------*/



 MDR_PORTC->OE = 0x4;
 MDR_PORTC->ANALOG = 0x4;
 MDR_PORTC->FUNC = 0x0;
 MDR_PORTC->PD = (0x0 << 16) | (0x0);
 MDR_PORTC->PWR = 0x20;

}

 

