CCS PCM C Compiler, Version 4.065, 38112               19-авг-11 17:08

               Filename: Remtermo.lst

               ROM used: 531 words (13%)
                         Largest free fragment is 2048
               RAM used: 87 (24%) at main() level
                         89 (24%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0E8
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  28
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  MOVF   7B,W
0019:  MOVWF  27
001A:  BCF    03.7
001B:  BCF    03.5
001C:  MOVLW  8C
001D:  MOVWF  04
001E:  BTFSS  00.4
001F:  GOTO   022
0020:  BTFSC  0C.4
0021:  GOTO   035
0022:  MOVF   22,W
0023:  MOVWF  04
0024:  MOVF   23,W
0025:  MOVWF  77
0026:  MOVF   24,W
0027:  MOVWF  78
0028:  MOVF   25,W
0029:  MOVWF  79
002A:  MOVF   26,W
002B:  MOVWF  7A
002C:  MOVF   27,W
002D:  MOVWF  7B
002E:  MOVF   28,W
002F:  MOVWF  0A
0030:  SWAPF  21,W
0031:  MOVWF  03
0032:  SWAPF  7F,F
0033:  SWAPF  7F,W
0034:  RETFIE
0035:  BCF    0A.3
0036:  GOTO   037
.................... //#include "C:\PRJ\RemTermo\Remtermo.h" 
.................... #include <16F88.h> 
.................... //////// Standard Header file for the PIC16F88 device //////////////// 
.................... #device PIC16F88 
.................... #list 
....................  
.................... #device *=16 
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES MCLR                     //Master Clear pin enabled 
.................... #FUSES BROWNOUT                 //Reset when brownout detected 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOFCMEN                  //Fail-safe clock monitor disabled 
.................... #FUSES IESO                      //Internal External Switch Over mode enabled 
....................  
.................... #BYTE portA = 0x05 
.................... #BYTE portB = 0x06 
....................  
.................... #BYTE TRISA = 0x85                
.................... #BYTE TRISB = 0x86  
.................... #BYTE PIR1 = 0x0C  
....................  
.................... #bit TRB5=TRISB.5 
.................... #bit TRB4=TRISB.4 
....................  
.................... #bit PORTB4=PORTB.4 
....................  
.................... #byte TXREG=0x19 
.................... #byte TXSTA=0x98 
.................... #bit TXEN=TXSTA.5 
.................... #bit TRMT=TXSTA.1 
.................... #bit TXIF=PIR1.4                  
....................  
.................... #use delay(clock=10000000) 
*
00D2:  MOVLW  6E
00D3:  MOVWF  04
00D4:  BCF    03.7
00D5:  MOVF   00,W
00D6:  BTFSC  03.2
00D7:  GOTO   0E6
00D8:  MOVLW  03
00D9:  MOVWF  78
00DA:  CLRF   77
00DB:  DECFSZ 77,F
00DC:  GOTO   0DB
00DD:  DECFSZ 78,F
00DE:  GOTO   0DA
00DF:  MOVLW  3C
00E0:  MOVWF  77
00E1:  DECFSZ 77,F
00E2:  GOTO   0E1
00E3:  GOTO   0E4
00E4:  DECFSZ 00,F
00E5:  GOTO   0D8
00E6:  BCF    0A.3
00E7:  GOTO   20F (RETURN)
.................... #use rs232(UART1,baud=9600,parity=N,xmit=PIN_B5,rcv=PIN_B2,bits=8) 
....................  
.................... unsigned char txbuf[30],msgbuf[20]; 
.................... unsigned int8 j,k=0; 
*
00FC:  BCF    03.5
00FD:  CLRF   5C
....................  
.................... #int_TBE 
.................... void tbe_int(void){ 
.................... //буфер передатчика пуст 
....................  if(k<=j){ 
*
0037:  MOVF   5C,W
0038:  SUBWF  5B,W
0039:  BTFSS  03.0
003A:  GOTO   043
....................  TXREG=txbuf[k]; 
003B:  MOVLW  29
003C:  ADDWF  5C,W
003D:  MOVWF  04
003E:  BCF    03.7
003F:  MOVF   00,W
0040:  MOVWF  19
....................   ++k; 
0041:  INCF   5C,F
....................   }else TXEN=0; 
0042:  GOTO   046
0043:  BSF    03.5
0044:  BCF    18.5
0045:  BCF    03.5
.................... clear_interrupt(int_tbe); 
0046:  BCF    0C.4
.................... } 
....................  
....................  
.................... /* 
....................   Name  : CRC-8 
....................   Poly  : 0x31    x^8 + x^5 + x^4 + 1 
....................   Init  : 0xFF 
....................   Revert: false 
....................   XorOut: 0x00 
....................   Check : 0xF7 ("123456789") 
....................   MaxLen: 15 байт(127 бит) - обнаружение 
....................     одинарных, двойных, тройных и всех нечетных ошибок 
.................... */ 
0047:  BCF    0C.4
0048:  BCF    0A.3
0049:  GOTO   022
.................... unsigned char Crc8(unsigned char *pcBlock, unsigned int len) 
.................... { 
....................     unsigned char crc = 0xFF; 
*
00AA:  MOVLW  FF
00AB:  MOVWF  70
....................     unsigned int i; 
....................   
....................     while (len--) 
....................     { 
00AC:  MOVF   6F,W
00AD:  DECF   6F,F
00AE:  XORLW  00
00AF:  BTFSC  03.2
00B0:  GOTO   0CE
....................         crc ^= *pcBlock++; 
00B1:  MOVF   6E,W
00B2:  MOVWF  7A
00B3:  MOVF   6D,W
00B4:  INCF   6D,F
00B5:  BTFSC  03.2
00B6:  INCF   6E,F
00B7:  MOVWF  04
00B8:  BCF    03.7
00B9:  BTFSC  7A.0
00BA:  BSF    03.7
00BB:  MOVF   00,W
00BC:  XORWF  70,F
....................   
....................         for (i = 0; i < 8; i++) 
00BD:  CLRF   71
00BE:  MOVF   71,W
00BF:  SUBLW  07
00C0:  BTFSS  03.0
00C1:  GOTO   0CD
....................             crc = crc & 0x80 ? (crc << 1) ^ 0x31 : crc << 1; 
00C2:  BTFSS  70.7
00C3:  GOTO   0C8
00C4:  BCF    03.0
00C5:  RLF    70,W
00C6:  XORLW  31
00C7:  GOTO   0CA
00C8:  BCF    03.0
00C9:  RLF    70,W
00CA:  MOVWF  70
00CB:  INCF   71,F
00CC:  GOTO   0BE
....................     } 
00CD:  GOTO   0AC
....................   
....................     return crc; 
00CE:  MOVF   70,W
00CF:  MOVWF  78
.................... } 
00D0:  BCF    0A.3
00D1:  GOTO   1E4 (RETURN)
....................  
.................... void main() 
.................... { 
*
00E8:  CLRF   04
00E9:  BCF    03.7
00EA:  MOVLW  1F
00EB:  ANDWF  03,F
00EC:  MOVLW  40
00ED:  BSF    03.5
00EE:  MOVWF  19
00EF:  MOVLW  A6
00F0:  MOVWF  18
00F1:  MOVLW  90
00F2:  BCF    03.5
00F3:  MOVWF  18
00F4:  BSF    03.5
00F5:  BCF    1F.4
00F6:  BCF    1F.5
00F7:  MOVF   1B,W
00F8:  ANDLW  80
00F9:  MOVWF  1B
00FA:  MOVLW  07
00FB:  MOVWF  1C
.................... unsigned int16 temp1,temp2,Vdd,V,Vpoint; 
.................... unsigned int8 fgrad1,pgrad1,fgrad2,pgrad2,i,pl=8; 
*
00FE:  MOVLW  08
00FF:  MOVWF  6C
....................  
....................  
....................    setup_adc_ports(sAN0|sAN1|sAN2|VSS_VREF); 
0100:  BSF    03.5
0101:  BCF    1F.4
0102:  BSF    1F.5
0103:  MOVF   1B,W
0104:  ANDLW  80
0105:  IORLW  07
0106:  MOVWF  1B
....................    setup_adc(ADC_CLOCK_DIV_16); 
0107:  BSF    1F.6
0108:  BCF    03.5
0109:  BSF    1F.6
010A:  BCF    1F.7
010B:  BSF    03.5
010C:  BSF    1F.7
010D:  BCF    03.5
010E:  BSF    1F.0
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
010F:  BSF    03.5
0110:  MOVF   01,W
0111:  ANDLW  C7
0112:  IORLW  08
0113:  MOVWF  01
....................    setup_comparator(NC_NC_NC_NC); 
0114:  MOVLW  07
0115:  MOVWF  1C
0116:  MOVF   05,W
0117:  MOVLW  08
0118:  MOVWF  77
0119:  DECFSZ 77,F
011A:  GOTO   119
011B:  MOVF   1C,W
011C:  BCF    03.5
011D:  BCF    0D.6
....................    setup_vref(FALSE); 
011E:  BSF    03.5
011F:  CLRF   1D
.................... //Setup_Oscillator parameter not selected from Intr Oscillator Config tab 
....................  
....................    // TODO: USER CODE!! 
....................   TRB4=0; 
0120:  BCF    06.4
....................   PORTB4=0; 
0121:  BCF    03.5
0122:  BCF    06.4
....................   TXEN=0; 
0123:  BSF    03.5
0124:  BCF    18.5
....................   enable_interrupts(int_TBE); 
0125:  BSF    0C.4
....................   enable_interrupts(GLOBAL); 
0126:  MOVLW  C0
0127:  BCF    03.5
0128:  IORWF  0B,F
....................    
....................  while(true){ 
....................   
....................  //формирование начала сообщения 
....................   //символы 0x0 в начале собщения для включения передатчика в количестве pl 
....................   for(j=0;j<pl;++j){ 
0129:  CLRF   5B
012A:  MOVF   6C,W
012B:  SUBWF  5B,W
012C:  BTFSC  03.0
012D:  GOTO   135
....................      txbuf[j]=0x0; 
012E:  MOVLW  29
012F:  ADDWF  5B,W
0130:  MOVWF  04
0131:  BCF    03.7
0132:  CLRF   00
....................   } 
0133:  INCF   5B,F
0134:  GOTO   12A
....................     txbuf[j]=0xAA;// начало блока данных 
0135:  MOVLW  29
0136:  ADDWF  5B,W
0137:  MOVWF  04
0138:  BCF    03.7
0139:  MOVLW  AA
013A:  MOVWF  00
....................     ++j; 
013B:  INCF   5B,F
....................     txbuf[j]=0xAA; 
013C:  MOVLW  29
013D:  ADDWF  5B,W
013E:  MOVWF  04
013F:  BCF    03.7
0140:  MOVLW  AA
0141:  MOVWF  00
....................   
....................    set_ADC_channel(0); 
0142:  MOVLW  00
0143:  MOVWF  78
0144:  MOVF   1F,W
0145:  ANDLW  C7
0146:  IORWF  78,W
0147:  MOVWF  1F
....................       delay_us(30); 
0148:  MOVLW  18
0149:  MOVWF  77
014A:  DECFSZ 77,F
014B:  GOTO   14A
014C:  GOTO   14D
....................      temp1=read_ADC()*2;// градусы Цельсия,умноженные на 10,с разрешением 2(0.2)градуса 
014D:  BSF    1F.2
014E:  BTFSC  1F.2
014F:  GOTO   14E
0150:  BSF    03.5
0151:  MOVF   1E,W
0152:  BCF    03.5
0153:  MOVWF  6D
0154:  BCF    03.0
0155:  RLF    6D,W
0156:  MOVWF  5D
0157:  RLF    1E,W
0158:  MOVWF  5E
....................            
....................       fgrad1= temp1/10; 
0159:  MOVF   5E,W
015A:  MOVWF  6E
015B:  MOVF   5D,W
015C:  MOVWF  6D
015D:  CLRF   70
015E:  MOVLW  0A
015F:  MOVWF  6F
0160:  CALL   04A
0161:  MOVF   78,W
0162:  MOVWF  67
....................       pgrad1= temp1-fgrad1*10; 
0163:  MOVF   67,W
0164:  MOVWF  6D
0165:  MOVLW  0A
0166:  MOVWF  6E
0167:  CALL   06F
0168:  MOVF   78,W
0169:  SUBWF  5D,W
016A:  MOVWF  68
....................   
....................    set_ADC_channel(1); 
016B:  MOVLW  08
016C:  MOVWF  78
016D:  MOVF   1F,W
016E:  ANDLW  C7
016F:  IORWF  78,W
0170:  MOVWF  1F
....................      delay_us(30); 
0171:  MOVLW  18
0172:  MOVWF  77
0173:  DECFSZ 77,F
0174:  GOTO   173
0175:  GOTO   176
....................     temp2=read_ADC()*2;// градусы Цельсия,умноженные на 10,с разрешением 2(0.2)градуса 
0176:  BSF    1F.2
0177:  BTFSC  1F.2
0178:  GOTO   177
0179:  BSF    03.5
017A:  MOVF   1E,W
017B:  BCF    03.5
017C:  MOVWF  6D
017D:  BCF    03.0
017E:  RLF    6D,W
017F:  MOVWF  5F
0180:  RLF    1E,W
0181:  MOVWF  60
....................      
....................      fgrad2= temp2/10; 
0182:  MOVF   60,W
0183:  MOVWF  6E
0184:  MOVF   5F,W
0185:  MOVWF  6D
0186:  CLRF   70
0187:  MOVLW  0A
0188:  MOVWF  6F
0189:  CALL   04A
018A:  MOVF   78,W
018B:  MOVWF  69
....................      pgrad2= temp2-fgrad2*10; 
018C:  MOVF   69,W
018D:  MOVWF  6D
018E:  MOVLW  0A
018F:  MOVWF  6E
0190:  CALL   06F
0191:  MOVF   78,W
0192:  SUBWF  5F,W
0193:  MOVWF  6A
....................   
....................     set_ADC_channel(2); 
0194:  MOVLW  10
0195:  MOVWF  78
0196:  MOVF   1F,W
0197:  ANDLW  C7
0198:  IORWF  78,W
0199:  MOVWF  1F
....................       delay_us(30); 
019A:  MOVLW  18
019B:  MOVWF  77
019C:  DECFSZ 77,F
019D:  GOTO   19C
019E:  GOTO   19F
....................        V=read_ADC()*4*2;// напряжение батареи в милливольтах 
019F:  BSF    1F.2
01A0:  BTFSC  1F.2
01A1:  GOTO   1A0
01A2:  BSF    03.5
01A3:  MOVF   1E,W
01A4:  BCF    03.5
01A5:  MOVWF  6D
01A6:  RLF    6D,W
01A7:  MOVWF  6F
01A8:  RLF    1E,W
01A9:  MOVWF  70
01AA:  RLF    6F,F
01AB:  RLF    70,F
01AC:  MOVLW  FC
01AD:  ANDWF  6F,F
01AE:  BCF    03.0
01AF:  RLF    6F,W
01B0:  MOVWF  63
01B1:  RLF    70,W
01B2:  MOVWF  64
....................         
....................        Vdd=V/1000; 
01B3:  MOVF   64,W
01B4:  MOVWF  6E
01B5:  MOVF   63,W
01B6:  MOVWF  6D
01B7:  MOVLW  03
01B8:  MOVWF  70
01B9:  MOVLW  E8
01BA:  MOVWF  6F
01BB:  CALL   04A
01BC:  MOVF   79,W
01BD:  MOVWF  62
01BE:  MOVF   78,W
01BF:  MOVWF  61
....................        Vpoint=V-Vdd*1000; 
01C0:  MOVF   62,W
01C1:  MOVWF  6E
01C2:  MOVF   61,W
01C3:  MOVWF  6D
01C4:  MOVLW  03
01C5:  MOVWF  70
01C6:  MOVLW  E8
01C7:  MOVWF  6F
01C8:  GOTO   094
01C9:  MOVF   78,W
01CA:  SUBWF  63,W
01CB:  MOVWF  65
01CC:  MOVF   64,W
01CD:  MOVWF  66
01CE:  MOVF   79,W
01CF:  BTFSS  03.0
01D0:  INCFSZ 79,W
01D1:  SUBWF  66,F
....................   
....................   
....................    msgbuf[0]=temp1>>8;//ст. байт 
01D2:  MOVF   5E,W
01D3:  MOVWF  47
....................    msgbuf[1]=temp1;// мл. байт 
01D4:  MOVF   5D,W
01D5:  MOVWF  48
....................     
....................    msgbuf[2]=temp2>>8; 
01D6:  MOVF   60,W
01D7:  MOVWF  49
....................    msgbuf[3]=temp2; 
01D8:  MOVF   5F,W
01D9:  MOVWF  4A
....................     
....................    msgbuf[4]=V>>8; 
01DA:  MOVF   64,W
01DB:  MOVWF  4B
....................    msgbuf[5]=V; 
01DC:  MOVF   63,W
01DD:  MOVWF  4C
....................     
....................    msgbuf[6]=crc8(msgbuf,6);//вычисляем crc8 
01DE:  CLRF   6E
01DF:  MOVLW  47
01E0:  MOVWF  6D
01E1:  MOVLW  06
01E2:  MOVWF  6F
01E3:  GOTO   0AA
01E4:  MOVF   78,W
01E5:  MOVWF  4D
....................    msgbuf[7]=0x55;// конец блока 
01E6:  MOVLW  55
01E7:  MOVWF  4E
....................    // 
....................    for(i=0;i<8;++i){ 
01E8:  CLRF   6B
01E9:  MOVF   6B,W
01EA:  SUBLW  07
01EB:  BTFSS  03.0
01EC:  GOTO   204
....................    j=j+1; 
01ED:  MOVLW  01
01EE:  ADDWF  5B,F
....................     txbuf[j]=msgbuf[i]; 
01EF:  MOVLW  29
01F0:  ADDWF  5B,W
01F1:  MOVWF  78
01F2:  CLRF   7A
01F3:  BTFSC  03.0
01F4:  INCF   7A,F
01F5:  MOVLW  47
01F6:  ADDWF  6B,W
01F7:  MOVWF  04
01F8:  BCF    03.7
01F9:  MOVF   00,W
01FA:  MOVWF  6F
01FB:  MOVF   78,W
01FC:  MOVWF  04
01FD:  BCF    03.7
01FE:  BTFSC  7A.0
01FF:  BSF    03.7
0200:  MOVF   6F,W
0201:  MOVWF  00
....................    } 
0202:  INCF   6B,F
0203:  GOTO   1E9
....................    j=18; 
0204:  MOVLW  12
0205:  MOVWF  5B
....................    k=0; 
0206:  CLRF   5C
....................    TXEN=1;// начало передачи   
0207:  BSF    03.5
0208:  BSF    18.5
....................  
....................  //printf("      T1=%u.%u C   T2=%u.%u C   Vdd=%Lu.%Lu V    \n\r",fgrad1,pgrad1,fgrad2,pgrad2,Vdd,Vpoint); 
....................   
....................      
....................   
....................   delay_ms(10000); 
0209:  MOVLW  28
020A:  BCF    03.5
020B:  MOVWF  6D
020C:  MOVLW  FA
020D:  MOVWF  6E
020E:  GOTO   0D2
020F:  DECFSZ 6D,F
0210:  GOTO   20C
....................  } 
0211:  GOTO   129
.................... } 
0212:  SLEEP

Configuration Fuses:
   Word  1: 3F6A   HS NOWDT NOPUT MCLR BROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFE   NOFCMEN IESO
