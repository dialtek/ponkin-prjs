D G "__PCH__" 0 1151 ""4.140""
D G "__DEVICE__" 0 1151 "2580"
D G "__DATE__" 0 1151 ""21-окт-14""
D G "__TIME__" 0 1151 ""11:40:17"" "Standard Header file for the PIC18F25K80 device ////////////////"
d G "PIN_A0" 1 28 "31744"
d G "PIN_A1" 1 29 "31745"
d G "PIN_A2" 1 30 "31746"
d G "PIN_A3" 1 31 "31747"
d G "PIN_A5" 1 32 "31749"
d G "PIN_A6" 1 33 "31750"
d G "PIN_A7" 1 34 "31751"
d G "PIN_B0" 1 36 "31752"
d G "PIN_B1" 1 37 "31753"
d G "PIN_B2" 1 38 "31754"
d G "PIN_B3" 1 39 "31755"
d G "PIN_B4" 1 40 "31756"
d G "PIN_B5" 1 41 "31757"
d G "PIN_B6" 1 42 "31758"
d G "PIN_B7" 1 43 "31759"
d G "PIN_C0" 1 45 "31760"
d G "PIN_C1" 1 46 "31761"
d G "PIN_C2" 1 47 "31762"
d G "PIN_C3" 1 48 "31763"
d G "PIN_C4" 1 49 "31764"
d G "PIN_C5" 1 50 "31765"
d G "PIN_C6" 1 51 "31766"
d G "PIN_C7" 1 52 "31767"
d G "PIN_E3" 1 54 "31779"
d G "FALSE" 1 57 "0"
d G "TRUE" 1 58 "1"
d G "BYTE" 1 60 "int8"
d G "BOOLEAN" 1 61 "int1"
d G "getc" 1 63 "getch"
d G "fgetc" 1 64 "getch"
d G "getchar" 1 65 "getch"
d G "putc" 1 66 "putchar"
d G "fputc" 1 67 "putchar"
d G "fgets" 1 68 "gets"
d G "fputs" 1 69 "puts"
d G "WDT_TIMEOUT" 1 74 "7"
d G "MCLR_FROM_SLEEP" 1 75 "11"
d G "MCLR_FROM_RUN" 1 76 "15"
d G "NORMAL_POWER_UP" 1 77 "12"
d G "BROWNOUT_RESTART" 1 78 "14"
d G "WDT_FROM_SLEEP" 1 79 "3"
d G "RESET_INSTRUCTION" 1 80 "0"
d G "SLEEP_FULL" 1 83 "0" "Default"
d G "SLEEP_IDLE" 1 84 "1" "Clock and peripherals don't stop"
d G "T0_INTERNAL" 1 91 "0"
d G "T0_EXT_L_TO_H" 1 92 "32"
d G "T0_EXT_H_TO_L" 1 93 "48"
d G "T0_DIV_1" 1 95 "8"
d G "T0_DIV_2" 1 96 "0"
d G "T0_DIV_4" 1 97 "1"
d G "T0_DIV_8" 1 98 "2"
d G "T0_DIV_16" 1 99 "3"
d G "T0_DIV_32" 1 100 "4"
d G "T0_DIV_64" 1 101 "5"
d G "T0_DIV_128" 1 102 "6"
d G "T0_DIV_256" 1 103 "7"
d G "T0_OFF" 1 105 "0x80"
d G "T0_8_BIT" 1 107 "0x40"
d G "RTCC_INTERNAL" 1 109 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 110 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 111 "48"
d G "RTCC_DIV_1" 1 112 "8"
d G "RTCC_DIV_2" 1 113 "0"
d G "RTCC_DIV_4" 1 114 "1"
d G "RTCC_DIV_8" 1 115 "2"
d G "RTCC_DIV_16" 1 116 "3"
d G "RTCC_DIV_32" 1 117 "4"
d G "RTCC_DIV_64" 1 118 "5"
d G "RTCC_DIV_128" 1 119 "6"
d G "RTCC_DIV_256" 1 120 "7"
d G "RTCC_OFF" 1 121 "0x80"
d G "RTCC_8_BIT" 1 122 "0x40"
d G "WDT_ON" 1 133 "0x100"
d G "WDT_OFF" 1 134 "0"
d G "T1_DISABLED" 1 140 "0"
d G "T1_INTERNAL" 1 141 "0x07"
d G "T1_EXTERNAL" 1 142 "0x87"
d G "T1_EXTERNAL_SYNC" 1 143 "0x83"
d G "T1_FOSC" 1 144 "0x47"
d G "T1_ENABLE_SOSC" 1 146 "0x08"
d G "T1_DIV_BY_1" 1 148 "0"
d G "T1_DIV_BY_2" 1 149 "0x10"
d G "T1_DIV_BY_4" 1 150 "0x20"
d G "T1_DIV_BY_8" 1 151 "0x30"
d G "T1_GATE" 1 153 "0x8000"
d G "T1_GATE_INVERTED" 1 154 "0xC000"
d G "T1_GATE_TOGGLE" 1 155 "0xA000"
d G "T1_GATE_SINGLE" 1 156 "0x9000"
d G "T1_GATE_TIMER2" 1 157 "0x8100"
d G "T1_GATE_COMP1" 1 158 "0x8200"
d G "T1_GATE_COMP2" 1 159 "0x8300"
d G "T2_DISABLED" 1 164 "0"
d G "T2_DIV_BY_1" 1 165 "4"
d G "T2_DIV_BY_4" 1 166 "5"
d G "T2_DIV_BY_16" 1 167 "6"
d G "T3_DISABLED" 1 173 "0"
d G "T3_INTERNAL" 1 174 "0x07"
d G "T3_EXTERNAL" 1 175 "0x87"
d G "T3_EXTERNAL_SYNC" 1 176 "0x83"
d G "T3_FOSC" 1 177 "0x47"
d G "T3_ENABLE_SOSC" 1 179 "0x08"
d G "T3_DIV_BY_1" 1 181 "0"
d G "T3_DIV_BY_2" 1 182 "0x10"
d G "T3_DIV_BY_4" 1 183 "0x20"
d G "T3_DIV_BY_8" 1 184 "0x30"
d G "T3_GATE" 1 186 "0x8000"
d G "T3_GATE_INVERTED" 1 187 "0xC000"
d G "T3_GATE_TOGGLE" 1 188 "0xA000"
d G "T3_GATE_SINGLE" 1 189 "0x9000"
d G "T3_GATE_TIMER4" 1 190 "0x8100"
d G "T3_GATE_COMP1" 1 191 "0x8200"
d G "T3_GATE_COMP2" 1 192 "0x8300"
d G "T4_DISABLED" 1 197 "0"
d G "T4_DIV_BY_1" 1 198 "4"
d G "T4_DIV_BY_4" 1 199 "5"
d G "T4_DIV_BY_16" 1 200 "6"
d G "CCP_OFF" 1 206 "0"
d G "CCP_CAPTURE_FE" 1 207 "4"
d G "CCP_CAPTURE_RE" 1 208 "5"
d G "CCP_CAPTURE_DIV_4" 1 209 "6"
d G "CCP_CAPTURE_DIV_16" 1 210 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 211 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 212 "9"
d G "CCP_COMPARE_INT" 1 213 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 214 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 215 "0xB"
d G "CCP_PWM" 1 216 "0xC"
d G "CCP_PWM_PLUS_1" 1 217 "0x1c"
d G "CCP_PWM_PLUS_2" 1 218 "0x2c"
d G "CCP_PWM_PLUS_3" 1 219 "0x3c"
d G "CCP_USE_TIMER1_AND_TIMER2" 1 227 "0x0000"
d G "CCP_USE_TIMER3_AND_TIMER4" 1 228 "0x0100"
d G "CCP_PWM_H_H" 1 231 "0x0c"
d G "CCP_PWM_H_L" 1 232 "0x0d"
d G "CCP_PWM_L_H" 1 233 "0x0e"
d G "CCP_PWM_L_L" 1 234 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 1 236 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 1 237 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 1 238 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 1 240 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 1 241 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 1 242 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 1 243 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 1 244 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 1 245 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 1 246 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 1 248 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 1 249 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 1 250 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 1 252 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 1 253 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 1 254 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 1 256 "0x80000000"
d G "CCP_PULSE_STEERING_A" 1 258 "0x01000000"
d G "CCP_PULSE_STEERING_B" 1 259 "0x02000000"
d G "CCP_PULSE_STEERING_C" 1 260 "0x04000000"
d G "CCP_PULSE_STEERING_D" 1 261 "0x08000000"
d G "CCP_PULSE_STEERING_SYNC" 1 262 "0x10000000"
d G "CCP_COMPLEMENTARY_AB" 1 263 "0x43000000"
d G "CCP_COMPLEMENTARY_AC" 1 264 "0x85000000"
d G "CCP_COMPLEMENTARY_AD" 1 265 "0xC9000000"
d G "SPI_DISABLED" 1 282 "0x00"
d G "SPI_MASTER" 1 283 "0x20"
d G "SPI_SLAVE" 1 284 "0x24"
d G "SPI_SCK_IDLE_HIGH" 1 285 "0x10"
d G "SPI_SCK_IDLE_LOW" 1 286 "0x00"
d G "SPI_CLK_DIV_4" 1 287 "0x00"
d G "SPI_CLK_DIV_16" 1 288 "0x01"
d G "SPI_CLK_DIV_64" 1 289 "0x02"
d G "SPI_CLK_T2" 1 290 "0x03"
d G "SPI_SS_DISABLED" 1 291 "0x01"
d G "SPI_XMIT_L_TO_H" 1 293 "0x4000"
d G "SPI_XMIT_H_TO_L" 1 294 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 1 296 "0x0000"
d G "SPI_SAMPLE_AT_END" 1 297 "0x8000"
d G "SPI_L_TO_H" 1 300 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 1 301 "SPI_SCK_IDLE_HIGH"
d G "UART_ADDRESS" 1 307 "2"
d G "UART_DATA" 1 308 "4"
d G "UART_AUTODETECT" 1 309 "8"
d G "UART_AUTODETECT_NOWAIT" 1 310 "9"
d G "UART_WAKEUP_ON_RDA" 1 311 "10"
d G "UART_SEND_BREAK" 1 312 "13"
d G "NC_NC_NC_NC" 1 317 "0x0404"
d G "NC_NC" 1 318 "0x0404"
d G "CP1_B1_B0" 1 321 "0x0080	"
d G "CP1_A5_B0" 1 322 "0x0082"
d G "CP1_VBG_B0" 1 323 "0x0083"
d G "CP1_B1_VREF" 1 324 "0x0084"
d G "CP1_A5_VREF" 1 325 "0x0086	"
d G "CP1_VBG_VREF" 1 326 "0x0087"
d G "CP1_OUT_ON_B2" 1 328 "0x0040"
d G "CP1_INVERT" 1 329 "0x0020"
d G "CP1_INT_L2H" 1 330 "0x0008"
d G "CP1_INT_H2L" 1 331 "0x0010"
d G "CP2_A5_B4" 1 334 "0x8000"
d G "CP2_B1_B4" 1 335 "0x8200"
d G "CP2_VBG_B4" 1 336 "0x8300"
d G "CP2_A5_VREF" 1 337 "0x8400"
d G "CP2_B1_VREF" 1 338 "0x8600"
d G "CP2_VBG_VREF" 1 339 "0x8700"
d G "CP2_OUT_ON_B3" 1 341 "0x4000"
d G "CP2_INVERT" 1 342 "0x2000"
d G "CP2_INT_L2H" 1 343 "0x0800"
d G "CP2_INT_H2L" 1 344 "0x1000"
d G "VREF_OFF" 1 352 "0"
d G "VREF_ON" 1 353 "0x80"
d G "VREF_EXT" 1 354 "0x20" "Range for ref gen VREF- to VREF+"
d G "VREF_OUT_A0" 1 355 "0x40"
d G "LVD_LVDIN" 1 361 "0x1F"
d G "LVD_45" 1 362 "0x1E"
d G "LVD_42" 1 363 "0x1D"
d G "LVD_40" 1 364 "0x1C"
d G "LVD_38" 1 365 "0x1B"
d G "LVD_36" 1 366 "0x1A"
d G "LVD_35" 1 367 "0x19"
d G "LVD_33" 1 368 "0x18"
d G "LVD_30" 1 369 "0x17"
d G "LVD_28" 1 370 "0x16"
d G "LVD_27" 1 371 "0x15"
d G "LVD_25" 1 372 "0x14"
d G "LVD_24" 1 373 "0x13"
d G "LVD_23" 1 374 "0x12"
d G "LVD_22" 1 375 "0x11"
d G "LVD_21" 1 376 "0x10"
d G "LVD_TRIGGER_BELOW" 1 378 "0"
d G "LVD_TRIGGER_ABOVE" 1 379 "0x80"
d G "OSC_31250" 1 384 "0x8000"
d G "OSC_PLL_ON" 1 385 "0x4000"
d G "OSC_PLL_OFF" 1 386 "0"
d G "OSC_31KHZ" 1 387 "0"
d G "OSC_250KHZ" 1 388 "0x10"
d G "OSC_500KHZ" 1 389 "0x20"
d G "OSC_1MHZ" 1 390 "0x30"
d G "OSC_2MHZ" 1 391 "0x40"
d G "OSC_4MHZ" 1 392 "0x50"
d G "OSC_8MHZ" 1 393 "0x60"
d G "OSC_16MHZ" 1 394 "0x70"
d G "OSC_SOSC" 1 396 "1"
d G "OSC_INTRC" 1 397 "2"
d G "OSC_NORMAL" 1 398 "0"
d G "OSC_IDLE_MODE" 1 400 "0x80"
d G "OSC_MFINTRC_ON" 1 402 "0x10000" "MF-INTOSC used instead of HF-INTOSC for 500KHZ, 250KHZ and 31KHZ operating frequencies."
d G "OSC_SOSC_ON" 1 403 "0x80000"
d G "OSC_STATE_STABLE" 1 407 "4"
d G "OSC_STATE_PRIMARY_RUNNING" 1 408 "8"
d G "ADC_OFF" 1 415 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 416 "0x100"
d G "ADC_CLOCK_DIV_4" 1 417 "0x04"
d G "ADC_CLOCK_DIV_8" 1 418 "0x01"
d G "ADC_CLOCK_DIV_16" 1 419 "0x05"
d G "ADC_CLOCK_DIV_32" 1 420 "0x02"
d G "ADC_CLOCK_DIV_64" 1 421 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 422 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 1 424 "0x00"
d G "ADC_TAD_MUL_2" 1 425 "0x08"
d G "ADC_TAD_MUL_4" 1 426 "0x10"
d G "ADC_TAD_MUL_6" 1 427 "0x18"
d G "ADC_TAD_MUL_8" 1 428 "0x20"
d G "ADC_TAD_MUL_12" 1 429 "0x28"
d G "ADC_TAD_MUL_16" 1 430 "0x30"
d G "ADC_TAD_MUL_20" 1 431 "0x38"
d G "sAN0" 1 436 "0x000100" "| A0"
d G "sAN1" 1 437 "0x000200" "| A1"
d G "sAN2" 1 438 "0x000400" "| A2"
d G "sAN3" 1 439 "0x000800" "| A3"
d G "sAN4" 1 440 "0x001000" "| A5"
d G "sAN8" 1 441 "0x010000" "| B1"
d G "sAN9" 1 442 "0x020000" "| B4"
d G "sAN10" 1 443 "0x040000" "| B0"
d G "NO_ANALOGS" 1 444 "0" "None"
d G "ALL_ANALOG" 1 445 "0x071F00" "A0 A1 A2 A3 A5 B1 B4 B0"
d G "VSS_VDD" 1 448 "0x00" "| Range 0-Vdd"
d G "VSS_VREF" 1 449 "0x10" "| Range 0-VrefH"
d G "VSS_2V048" 1 450 "0x20" "| Range 0-2.048V"
d G "VSS_4V096" 1 451 "0x30" "| Range 0-3.096V"
d G "VREF_VDD" 1 452 "0x08" "| Range VrefL-Vdd"
d G "VREF_VREF" 1 453 "0x18" "| Range VrefL-VrefH"
d G "VREF_2V048" 1 454 "0x28" "| Range VrefL-2.048V"
d G "VREF_4V096" 1 455 "0x38" "| Range VrefL-4.096V"
d G "ADC_START_AND_READ" 1 458 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 459 "1"
d G "ADC_READ_ONLY" 1 460 "6"
d G "L_TO_H" 1 468 "0x40"
d G "H_TO_L" 1 469 "0"
d G "GLOBAL" 1 471 "0xF2C0"
d G "PERIPH" 1 472 "0xF240"
d G "INT_RTCC" 1 473 "0x00F220"
d G "INT_TIMER0" 1 474 "0x00F220"
d G "INT_TIMER1" 1 475 "0x009D01"
d G "INT_TIMER2" 1 476 "0x009D02"
d G "INT_TIMER3" 1 477 "0x00A002"
d G "INT_EXT_L2H" 1 478 "0x5000F210"
d G "INT_EXT_H2L" 1 479 "0x6000F210"
d G "INT_EXT" 1 480 "0x00F210"
d G "INT_EXT1_L2H" 1 481 "0x5001F008"
d G "INT_EXT1_H2L" 1 482 "0x6001F008"
d G "INT_EXT1" 1 483 "0x00F008"
d G "INT_EXT2_L2H" 1 484 "0x5002F010"
d G "INT_EXT2_H2L" 1 485 "0x6002F010"
d G "INT_EXT2" 1 486 "0x00F010"
d G "INT_RB" 1 487 "0x01FFF208"
d G "INT_AD" 1 488 "0x009D40"
d G "INT_RDA" 1 489 "0x009D20"
d G "INT_TBE" 1 490 "0x009D10"
d G "INT_SSP" 1 491 "0x009D08"
d G "INT_BUSCOL" 1 492 "0x00A008"
d G "INT_RDA2" 1 493 "0x00A320"
d G "INT_TBE2" 1 494 "0x00A310"
d G "INT_OSCF" 1 495 "0x00A080"
d G "INT_HLVD" 1 496 "0x00A004"
d G "INT_EXT3_L2H" 1 497 "0x5003F020"
d G "INT_EXT3_H2L" 1 498 "0x6003F020"
d G "INT_EXT3" 1 499 "0x00F020"
d G "INT_CCP1" 1 500 "0x00A302"
d G "INT_CCP2" 1 501 "0x00A304"
d G "INT_CTMU" 1 502 "0x00A308"
d G "INT_TMR1G" 1 503 "0x009D04"
d G "INT_TMR3G" 1 504 "0x00A001"
d G "INT_CCP3" 1 505 "0x00B601"
d G "INT_CCP4" 1 506 "0x00B602"
d G "INT_CCP5" 1 507 "0x00B604"
d G "INT_COMP1" 1 508 "0x00B610"
d G "INT_COMP2" 1 509 "0x00B620"
d G "INT_EEPROM" 1 510 "0x00B640"
d G "INT_TIMER4" 1 511 "0x00B680"
d G "INT_CANRX0" 1 512 "0x007601"
d G "INT_CANRX1" 1 513 "0x007602"
d G "INT_CANTX0" 1 514 "0x007604"
d G "INT_CANTX1" 1 515 "0x007608"
d G "INT_CANTX2" 1 516 "0x007610"
d G "INT_CANERR" 1 517 "0x007620"
d G "INT_CANWAKE" 1 518 "0x007640"
d G "INT_CANIRX" 1 519 "0x007680"
d G "INT_RB4" 1 520 "0x110F208"
d G "INT_RB5" 1 521 "0x120F208"
d G "INT_RB6" 1 522 "0x140F208"
d G "INT_RB7" 1 523 "0x180F208"
D G "_STDIO" 2 12 ""
D G "_STRING" 3 12 ""
D G "_STDDEF" 4 13 ""
D G "ptrdiff_t" 4 18 "unsigned int16"
D G "size_t" 4 24 "unsigned int16"
D G "wchar_t" 4 26 "char"
D G "NULL" 4 27 "0"
D G "offsetof" 4 29 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 5 12 ""
D G "islower" 5 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 5 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 5 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 5 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 5 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 5 19 "(x)  ((x)==' ')"
D G "isxdigit" 5 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 5 21 "(x)  ((x)<' ')"
D G "isprint" 5 22 "(x)  ((x)>=' ')"
D G "isgraph" 5 23 "(x)  ((x)>' ')"
D G "ispunct" 5 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 3 19 10 "FUNCTION"
V L "s1" 3 34 "*int8"
V L "s2" 3 34 "*int8"
V L "n" 3 34 "int16"
F G "memmove" 3 34 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "sc1" 3 36 "*int8"
V L "sc2" 3 37 "*int8"
D G "strcopy" 3 54 "strcpy"
C L "strncpy" 3 19 4 "FUNCTION"
V L "s1" 3 61 "*int8"
V L "s2" 3 61 "*int8"
V L "n" 3 61 "int16"
F G "strncpy" 3 61 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 3 63 "*int8"
C L "strcat" 3 19 3 "FUNCTION"
V L "s1" 3 78 "*int8"
V L "s2" 3 78 "*int8"
F G "strcat" 3 78 "*int8(*int8 s1,*int8 s2)"
V L "s" 3 80 "*int8"
C L "strncat" 3 19 2 "FUNCTION"
V L "s1" 3 96 "*int8"
V L "s2" 3 96 "*int8"
V L "n" 3 96 "int16"
F G "strncat" 3 96 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 3 98 "*int8"
C L "memcmp" 3 19 3 "FUNCTION"
V L "s1" 3 120 "*int8"
V L "s2" 3 120 "*int8"
V L "n" 3 120 "int16"
F G "memcmp" 3 120 "sint8(*int8 s1,*int8 s2,int16 n)"
V L "su1" 3 122 "*int8"
V L "su2" 3 122 "*int8"
C L "strcmp" 3 19 2 "FUNCTION"
V L "s1" 3 134 "*int8"
V L "s2" 3 134 "*int8"
F G "strcmp" 3 134 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 3 19 2 "FUNCTION"
V L "s1" 3 144 "*int8"
V L "s2" 3 144 "*int8"
F G "strcoll" 3 144 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 3 19 4 "FUNCTION"
V L "s1" 3 157 "*int8"
V L "s2" 3 157 "*int8"
V L "n" 3 157 "int16"
F G "strncmp" 3 157 "sint8(*int8 s1,*int8 s2,int16 n)"
C L "strxfrm" 3 19 3 "FUNCTION"
V L "s1" 3 169 "*int8"
V L "s2" 3 169 "*int8"
V L "n" 3 169 "int16"
F G "strxfrm" 3 169 "int16(*int8 s1,*int8 s2,int16 n)"
V L "s" 3 171 "*int8"
V L "n1" 3 172 "int8"
C L "memchr" 3 19 3 "FUNCTION"
V L "s" 3 191 "*int8"
V L "c" 3 191 "int8"
V L "n" 3 191 "int16"
F G "memchr" 3 191 "*int8(*int8 s,int8 c,int16 n)"
V L "uc" 3 193 "int8"
V L "su" 3 194 "*int8"
C L "strchr" 3 19 2 "FUNCTION"
V L "s" 3 205 "*int8"
V L "c" 3 205 "int8"
F G "strchr" 3 205 "*int8(*int8 s,int8 c)"
C L "strcspn" 3 19 4 "FUNCTION"
V L "s1" 3 217 "*int8"
V L "s2" 3 217 "*int8"
F G "strcspn" 3 217 "int8(*int8 s1,*int8 s2)"
V L "sc1" 3 219 "*int8"
V L "sc2" 3 219 "*int8"
C L "strpbrk" 3 19 4 "FUNCTION"
V L "s1" 3 232 "*int8"
V L "s2" 3 232 "*int8"
F G "strpbrk" 3 232 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 3 234 "*int8"
V L "sc2" 3 234 "*int8"
C L "strrchr" 3 19 2 "FUNCTION"
V L "s" 3 247 "*int8"
V L "c" 3 247 "int8"
F G "strrchr" 3 247 "*int8(*int8 s,int8 c)"
V L "p" 3 249 "*int8"
C L "strspn" 3 19 2 "FUNCTION"
V L "s1" 3 262 "*int8"
V L "s2" 3 262 "*int8"
F G "strspn" 3 262 "int8(*int8 s1,*int8 s2)"
V L "sc1" 3 264 "*int8"
V L "sc2" 3 264 "*int8"
C L "strstr" 3 19 6 "FUNCTION"
V L "s1" 3 281 "*int8"
V L "s2" 3 281 "*int8"
F G "strstr" 3 281 "*int8(*int8 s1,*int8 s2)"
V L "s" 3 283 "*int8"
V L "t" 3 283 "*int8"
C L "strtok" 3 19 13 "FUNCTION"
V L "s1" 3 320 "*int8"
V L "s2" 3 320 "*int8"
F G "strtok" 3 320 "*int8(*int8 s1,*int8 s2)"
V L "beg" 3 322 "*int8"
V L "end" 3 322 "*int8"
V L "save" 3 323 "*int8"
C L "strlen" 3 19 6 "FUNCTION"
V L "s" 3 369 "*int8"
F G "strlen" 3 369 "int8(*int8 s)"
V L "sc" 3 371 "*int8"
C L "stricmp" 3 19 2 "FUNCTION"
V L "s1" 3 380 "*int8"
V L "s2" 3 380 "*int8"
F G "stricmp" 3 380 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 3 19 3 "FUNCTION"
V L "s" 3 394 "*int8"
F G "strlwr" 3 394 "*int8(*int8 s)"
V L "p" 3 396 "*int8"
C L "strupr" 3 19 3 "FUNCTION"
V L "s" 3 408 "*int8"
F G "strupr" 3 408 "*int8(*int8 s)"
V L "p" 3 410 "*int8"
T G "U32" 0 106 "int32"
T G "U16" 0 107 "int16"
T G "S16" 0 108 "sint16"
T G "U8" 0 109 "int8"
T G "S32" 0 110 "sint32"
V G "buf" 0 112 "U8"
D G "DRDY" 0 119 "RB0"
D G "one" 0 121 "0x00"
D G "two" 0 122 "0x40"
D G "three" 0 123 "0x10"
D G "four" 0 124 "0x50"
V G "int_fl" 0 126 "int1"
V G "zero_set1" 0 126 "int1"
V G "ff1" 0 127 "U8"
V G "fl2" 0 128 "int1"
V G "menufl1" 0 128 "int1"
V G "menufl2" 0 128 "int1"
V G "menufl3" 0 128 "int1"
V G "menufl4" 0 128 "int1"
V G "TMR0fl" 0 129 "U8"
V G "MenuItemNum" 0 129 "U8"
V G "RXd_buf" 0 130 "U8"
V G "ConfigRegA" 0 133 "int8"
V G "ConfigRegB" 0 133 "int8"
V G "ModeReg" 0 133 "int8"
V G "xMSB" 0 133 "int8"
V G "xLSB" 0 133 "int8"
V G "zMSB" 0 134 "int8"
V G "zLSB" 0 134 "int8"
V G "yMSB" 0 134 "int8"
V G "yLSB" 0 134 "int8"
V G "StatReg" 0 134 "int8"
V G "idRegA" 0 134 "int8"
V G "idRegB" 0 135 "int8"
V G "idRegC" 0 135 "int8"
V G "SumX" 0 137 "sint16"
V G "SumY" 0 138 "sint16"
V G "SumZ" 0 139 "sint16"
V G "SumX0" 0 141 "sint16"
V G "SumY0" 0 142 "sint16"
V G "SumZ0" 0 143 "sint16"
V G "Xh" 0 145 "int16"
V G "Xl" 0 146 "int8"
V G "Yh" 0 147 "int16"
V G "Yl" 0 148 "int8"
V G "Zh" 0 149 "int16"
V G "Zl" 0 150 "int8"
V G "Xd" 0 161 "sint16"
V G "Yd" 0 162 "sint16"
V G "Zd" 0 163 "sint16"
V G "t_out" 0 167 "U8[4]"
V G "b_hold" 0 168 "U8[4]"
V G "b_push" 0 169 "U8[4]"
C L "LCDWriteNibble" 0 5 35 "FUNCTION"
C L "LCDWriteNibble" 0 222 1 "*"
V L "uc" 0 223 "int8"
F G "LCDWriteNibble" 0 223 "void(int8 uc)" "RS must be set/reset before calling *"
C L "LCDWriteNibble" 0 222 1 "FUNCTION"
C L "LCDWriteNibble" 0 222 1 "FUNCTION"
C L "LCDWriteNibble" 0 222 1 "FUNCTION"
V L "uc" 0 242 "int8"
F G "LCDWriteData" 0 242 "void(int8 uc)"
C L "LCDWriteData" 0 222 1 "FUNCTION"
C L "LCDWriteData" 0 222 1 "FUNCTION"
C L "LCDWriteData" 0 222 1 "FUNCTION"
V L "uc" 0 255 "int8"
F G "LCDCommand" 0 255 "void(int8 uc)"
C L "LCDCommand" 0 222 2 "FUNCTION"
C L "LCDCommand" 0 222 1 "FUNCTION"
V L "ucPos" 0 265 "int8"
F G "LCDSetCursor" 0 265 "void(int8 ucPos)"
F G "LCDClear" 0 270 "void()"
C L "LCDClear" 0 222 1 "FUNCTION"
F G "LCDInit" 0 277 "void()"
C L "LCDInit" 0 222 1 "FUNCTION"
C L "LCDInit" 0 222 1 "FUNCTION"
C L "LCDInit" 0 222 1 "FUNCTION"
C L "LCDInit" 0 222 1 "FUNCTION"
C L "LCDInit" 0 222 1 "FUNCTION"
C L "LCDInit" 0 222 1 "FUNCTION"
C L "LCDInit" 0 222 2 "FUNCTION"
C L "LCDInit" 0 222 1 "FUNCTION"
C L "LCDInit" 0 222 1 "FUNCTION"
C L "LCDInit" 0 222 2 "FUNCTION"
C L "LCDInit" 0 222 1 "FUNCTION"
C L "LCDInit" 0 222 2 "FUNCTION"
C L "LCDPutCh" 0 222 22 "FUNCTION"
V L "c" 0 350 "int8"
F G "LCDPutCh" 0 350 "void(int8 c)"
V L "_u16" 0 355 "U32"
V L "u8NumDigs" 0 355 "U8"
F G "LCDPutU32" 0 355 "void(U32 _u16,U8 u8NumDigs)"
V L "u16a" 0 357 "U32"
V L "u16b" 0 357 "U32"
V L "_u16" 0 426 "U32"
V L "u8NumDigs" 0 426 "U8"
F G "LCDPutU16" 0 426 "void(U32 _u16,U8 u8NumDigs)"
V L "u16a" 0 429 "U32"
V L "u16b" 0 429 "U32"
C L "LCDPutS16" 0 222 24 "FUNCTION"
V L "s16a" 0 520 "S16"
V L "u8NumDigs" 0 520 "U8"
F G "LCDPutS16" 0 520 "void(S16 s16a,U8 u8NumDigs)"
V L "c" 0 522 "int8"
V L "c" 0 533 "int8"
F G "LCDMsg" 0 533 "void(int8 c)"
F G "LCDWelcome" 0 538 "void()"
C L "set_i2c_spd" 0 551 1 "*"
V L "sp" 0 553 "int8"
F G "set_i2c_spd" 0 553 "void(int8 sp)"
C L "set_i2c_spd" 0 551 2 "FUNCTION"
F G "i2c_str" 0 561 "void()"
F G "i2c_strc" 0 566 "void()"
F G "i2c_stp" 0 571 "void()"
V L "Dbyte" 0 576 "int8"
F G "i2c_wr" 0 576 "void(int8 Dbyte)"
C L "PBScan" 0 582 2 "*"
V L "pb" 0 585 "U8"
F G "PBScan" 0 585 "U8(U8 pb)" "сканирование кнопок"
C L "PBScan" 0 582 1 "FUNCTION"
V L "uc" 0 588 "U8"
C L "PBScan" 0 582 1 "FUNCTION"
C L "PBScan" 0 582 1 "FUNCTION"
F G "int0" 0 605 "void()"
F G "TIMER0_isr" 0 611 "void()" "прерывание каждые 0.5 сек."
F G "TIMER3_isr" 0 621 "void()" "****************обработка нажатия кнопок*****************"
V L "i" 0 624 "int8"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
C L "TIMER3_isr" 0 582 2 "FUNCTION"
C L "TIMER3_isr" 0 582 2 "FUNCTION"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
C L "TIMER3_isr" 0 582 1 "FUNCTION"
C L "TIMER3_isr" 0 582 2 "FUNCTION"
C L "TIMER3_isr" 0 656 2 "*"
F G "UART_RXd_isr" 0 667 "void()"
C L "UART_RXd_isr" 0 656 2 "FUNCTION"
C L "UART_RXd_isr" 0 656 1 "FUNCTION"
C L "UART_RXd_isr" 0 656 1 "FUNCTION"
C L "UART_RXd_isr" 0 656 1 "FUNCTION"
V L "Adr" 0 688 "int8"
V L "Data" 0 688 "int8"
F G "SensWrData" 0 688 "void(int8 Adr,int8 Data)"
C L "SensWrData" 0 656 3 "FUNCTION"
C L "SensWrData" 0 656 1 "FUNCTION"
C L "SensWrData" 0 656 1 "FUNCTION"
V L "Adr" 0 702 "int8"
F G "SensRdData" 0 702 "int8(int8 Adr)"
V L "Data" 0 704 "int8"
C L "SensRdData" 0 656 2 "FUNCTION"
C L "SensRdData" 0 656 1 "FUNCTION"
C L "SensRdData" 0 656 1 "FUNCTION"
F G "SensInit" 0 725 "void()" "SensWrData(ConfigRegA,0x10); // single measurment mode, F = 0.75 Hz"
C L "SensInit" 0 656 1 "FUNCTION"
C L "SensInit" 0 656 4 "FUNCTION"
F G "SelfCal" 0 735 "sint16()"
V L "Xh" 0 737 "int16"
V L "Xl" 0 738 "int8"
V L "Yh" 0 739 "int16"
V L "Yl" 0 740 "int8"
V L "Zh" 0 741 "int16"
V L "Zl" 0 742 "int8"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 2 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 2 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
C L "SelfCal" 0 656 1 "FUNCTION"
V L "_u16" 0 789 "U32"
V L "u8NumDigs" 0 789 "U8"
F G "LcdPutResults" 0 789 "void(U32 _u16,U8 u8NumDigs)"
V L "u16a" 0 791 "S16"
V L "u16b" 0 791 "S16"
C L "LcdPutResults" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 25 "FUNCTION"
F G "SensRdAll" 0 867 "void()"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 2 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 2 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "SensRdAll" 0 656 1 "FUNCTION"
C L "Set_ADC_Ch" 0 656 1 "FUNCTION"
V L "Ch" 0 951 "U8"
F G "Set_ADC_Ch" 0 951 "void(U8 Ch)" "Установка канала АЦП"
C L "Set_ADC_Ch" 0 656 1 "FUNCTION"
F G "MAIN" 0 958 "void()"
V L "i" 0 960 "U16"
V L "zero" 0 960 "U16"
V L "buf" 0 962 "S32"
V L "buf1" 0 962 "S32"
V L "sum" 0 962 "S32"
V L "ADCh" 0 963 "U8"
C L "MAIN" 0 656 2 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 4 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 2 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 2 "FUNCTION"
C L "MAIN" 0 656 2 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 656 1 "FUNCTION"
C L "MAIN" 0 1058 2 "*"
C L "MAIN" 0 1058 1 "FUNCTION"
C L "MAIN" 0 1058 1 "FUNCTION"
C L "MAIN" 0 1058 1 "FUNCTION"
C L "MAIN" 0 1058 2 "FUNCTION"
C L "MAIN" 0 1058 1 "FUNCTION"
C L "MAIN" 0 1058 1 "FUNCTION"
C L "MAIN" 0 1058 3 "FUNCTION"
C L "MAIN" 0 1058 2 "FUNCTION"
C L "MAIN" 0 1058 1 "FUNCTION"
C L "MAIN" 0 1058 2 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep_ulpwu" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "port_d_pullups" 1 0
F B "port_e_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 2
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_timer_4" 3 0
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_ccp3" 1 0
F B "set_pwm3_duty" 1 0
F B "setup_ccp4" 1 0
F B "set_pwm4_duty" 1 0
F B "setup_ccp5" 1 0
F B "set_pwm5_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 0 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
