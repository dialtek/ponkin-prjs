C L "MAIN" 0 794 58 "FUNCTION"
D G "__PCH__" 0 894 ""4.140""
D G "__DEVICE__" 0 894 "2580"
D G "__DATE__" 0 894 ""29-окт-14""
D G "__TIME__" 0 894 ""15:16:01"" "Измеритель магнитной индукции 2.2 //"
d G "PIN_A0" 2 28 "31744"
d G "PIN_A1" 2 29 "31745"
d G "PIN_A2" 2 30 "31746"
d G "PIN_A3" 2 31 "31747"
d G "PIN_A5" 2 32 "31749"
d G "PIN_A6" 2 33 "31750"
d G "PIN_A7" 2 34 "31751"
d G "PIN_B0" 2 36 "31752"
d G "PIN_B1" 2 37 "31753"
d G "PIN_B2" 2 38 "31754"
d G "PIN_B3" 2 39 "31755"
d G "PIN_B4" 2 40 "31756"
d G "PIN_B5" 2 41 "31757"
d G "PIN_B6" 2 42 "31758"
d G "PIN_B7" 2 43 "31759"
d G "PIN_C0" 2 45 "31760"
d G "PIN_C1" 2 46 "31761"
d G "PIN_C2" 2 47 "31762"
d G "PIN_C3" 2 48 "31763"
d G "PIN_C4" 2 49 "31764"
d G "PIN_C5" 2 50 "31765"
d G "PIN_C6" 2 51 "31766"
d G "PIN_C7" 2 52 "31767"
d G "PIN_E3" 2 54 "31779"
d G "FALSE" 2 57 "0"
d G "TRUE" 2 58 "1"
d G "BYTE" 2 60 "int8"
d G "BOOLEAN" 2 61 "int1"
d G "getc" 2 63 "getch"
d G "fgetc" 2 64 "getch"
d G "getchar" 2 65 "getch"
d G "putc" 2 66 "putchar"
d G "fputc" 2 67 "putchar"
d G "fgets" 2 68 "gets"
d G "fputs" 2 69 "puts"
d G "WDT_TIMEOUT" 2 74 "7"
d G "MCLR_FROM_SLEEP" 2 75 "11"
d G "MCLR_FROM_RUN" 2 76 "15"
d G "NORMAL_POWER_UP" 2 77 "12"
d G "BROWNOUT_RESTART" 2 78 "14"
d G "WDT_FROM_SLEEP" 2 79 "3"
d G "RESET_INSTRUCTION" 2 80 "0"
d G "SLEEP_FULL" 2 83 "0" "Default"
d G "SLEEP_IDLE" 2 84 "1" "Clock and peripherals don't stop"
d G "T0_INTERNAL" 2 91 "0"
d G "T0_EXT_L_TO_H" 2 92 "32"
d G "T0_EXT_H_TO_L" 2 93 "48"
d G "T0_DIV_1" 2 95 "8"
d G "T0_DIV_2" 2 96 "0"
d G "T0_DIV_4" 2 97 "1"
d G "T0_DIV_8" 2 98 "2"
d G "T0_DIV_16" 2 99 "3"
d G "T0_DIV_32" 2 100 "4"
d G "T0_DIV_64" 2 101 "5"
d G "T0_DIV_128" 2 102 "6"
d G "T0_DIV_256" 2 103 "7"
d G "T0_OFF" 2 105 "0x80"
d G "T0_8_BIT" 2 107 "0x40"
d G "RTCC_INTERNAL" 2 109 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 2 110 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 2 111 "48"
d G "RTCC_DIV_1" 2 112 "8"
d G "RTCC_DIV_2" 2 113 "0"
d G "RTCC_DIV_4" 2 114 "1"
d G "RTCC_DIV_8" 2 115 "2"
d G "RTCC_DIV_16" 2 116 "3"
d G "RTCC_DIV_32" 2 117 "4"
d G "RTCC_DIV_64" 2 118 "5"
d G "RTCC_DIV_128" 2 119 "6"
d G "RTCC_DIV_256" 2 120 "7"
d G "RTCC_OFF" 2 121 "0x80"
d G "RTCC_8_BIT" 2 122 "0x40"
d G "WDT_ON" 2 133 "0x100"
d G "WDT_OFF" 2 134 "0"
d G "T1_DISABLED" 2 140 "0"
d G "T1_INTERNAL" 2 141 "0x07"
d G "T1_EXTERNAL" 2 142 "0x87"
d G "T1_EXTERNAL_SYNC" 2 143 "0x83"
d G "T1_FOSC" 2 144 "0x47"
d G "T1_ENABLE_SOSC" 2 146 "0x08"
d G "T1_DIV_BY_1" 2 148 "0"
d G "T1_DIV_BY_2" 2 149 "0x10"
d G "T1_DIV_BY_4" 2 150 "0x20"
d G "T1_DIV_BY_8" 2 151 "0x30"
d G "T1_GATE" 2 153 "0x8000"
d G "T1_GATE_INVERTED" 2 154 "0xC000"
d G "T1_GATE_TOGGLE" 2 155 "0xA000"
d G "T1_GATE_SINGLE" 2 156 "0x9000"
d G "T1_GATE_TIMER2" 2 157 "0x8100"
d G "T1_GATE_COMP1" 2 158 "0x8200"
d G "T1_GATE_COMP2" 2 159 "0x8300"
d G "T2_DISABLED" 2 164 "0"
d G "T2_DIV_BY_1" 2 165 "4"
d G "T2_DIV_BY_4" 2 166 "5"
d G "T2_DIV_BY_16" 2 167 "6"
d G "T3_DISABLED" 2 173 "0"
d G "T3_INTERNAL" 2 174 "0x07"
d G "T3_EXTERNAL" 2 175 "0x87"
d G "T3_EXTERNAL_SYNC" 2 176 "0x83"
d G "T3_FOSC" 2 177 "0x47"
d G "T3_ENABLE_SOSC" 2 179 "0x08"
d G "T3_DIV_BY_1" 2 181 "0"
d G "T3_DIV_BY_2" 2 182 "0x10"
d G "T3_DIV_BY_4" 2 183 "0x20"
d G "T3_DIV_BY_8" 2 184 "0x30"
d G "T3_GATE" 2 186 "0x8000"
d G "T3_GATE_INVERTED" 2 187 "0xC000"
d G "T3_GATE_TOGGLE" 2 188 "0xA000"
d G "T3_GATE_SINGLE" 2 189 "0x9000"
d G "T3_GATE_TIMER4" 2 190 "0x8100"
d G "T3_GATE_COMP1" 2 191 "0x8200"
d G "T3_GATE_COMP2" 2 192 "0x8300"
d G "T4_DISABLED" 2 197 "0"
d G "T4_DIV_BY_1" 2 198 "4"
d G "T4_DIV_BY_4" 2 199 "5"
d G "T4_DIV_BY_16" 2 200 "6"
d G "CCP_OFF" 2 206 "0"
d G "CCP_CAPTURE_FE" 2 207 "4"
d G "CCP_CAPTURE_RE" 2 208 "5"
d G "CCP_CAPTURE_DIV_4" 2 209 "6"
d G "CCP_CAPTURE_DIV_16" 2 210 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 211 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 212 "9"
d G "CCP_COMPARE_INT" 2 213 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 214 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 215 "0xB"
d G "CCP_PWM" 2 216 "0xC"
d G "CCP_PWM_PLUS_1" 2 217 "0x1c"
d G "CCP_PWM_PLUS_2" 2 218 "0x2c"
d G "CCP_PWM_PLUS_3" 2 219 "0x3c"
d G "CCP_USE_TIMER1_AND_TIMER2" 2 227 "0x0000"
d G "CCP_USE_TIMER3_AND_TIMER4" 2 228 "0x0100"
d G "CCP_PWM_H_H" 2 231 "0x0c"
d G "CCP_PWM_H_L" 2 232 "0x0d"
d G "CCP_PWM_L_H" 2 233 "0x0e"
d G "CCP_PWM_L_L" 2 234 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 236 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 237 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 238 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 240 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 241 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 242 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 243 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 244 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 245 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 246 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 248 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 249 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 250 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 252 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 253 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 254 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 256 "0x80000000"
d G "CCP_PULSE_STEERING_A" 2 258 "0x01000000"
d G "CCP_PULSE_STEERING_B" 2 259 "0x02000000"
d G "CCP_PULSE_STEERING_C" 2 260 "0x04000000"
d G "CCP_PULSE_STEERING_D" 2 261 "0x08000000"
d G "CCP_PULSE_STEERING_SYNC" 2 262 "0x10000000"
d G "CCP_COMPLEMENTARY_AB" 2 263 "0x43000000"
d G "CCP_COMPLEMENTARY_AC" 2 264 "0x85000000"
d G "CCP_COMPLEMENTARY_AD" 2 265 "0xC9000000"
d G "SPI_DISABLED" 2 282 "0x00"
d G "SPI_MASTER" 2 283 "0x20"
d G "SPI_SLAVE" 2 284 "0x24"
d G "SPI_SCK_IDLE_HIGH" 2 285 "0x10"
d G "SPI_SCK_IDLE_LOW" 2 286 "0x00"
d G "SPI_CLK_DIV_4" 2 287 "0x00"
d G "SPI_CLK_DIV_16" 2 288 "0x01"
d G "SPI_CLK_DIV_64" 2 289 "0x02"
d G "SPI_CLK_T2" 2 290 "0x03"
d G "SPI_SS_DISABLED" 2 291 "0x01"
d G "SPI_XMIT_L_TO_H" 2 293 "0x4000"
d G "SPI_XMIT_H_TO_L" 2 294 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 2 296 "0x0000"
d G "SPI_SAMPLE_AT_END" 2 297 "0x8000"
d G "SPI_L_TO_H" 2 300 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 2 301 "SPI_SCK_IDLE_HIGH"
d G "UART_ADDRESS" 2 307 "2"
d G "UART_DATA" 2 308 "4"
d G "UART_AUTODETECT" 2 309 "8"
d G "UART_AUTODETECT_NOWAIT" 2 310 "9"
d G "UART_WAKEUP_ON_RDA" 2 311 "10"
d G "UART_SEND_BREAK" 2 312 "13"
d G "NC_NC_NC_NC" 2 317 "0x0404"
d G "NC_NC" 2 318 "0x0404"
d G "CP1_B1_B0" 2 321 "0x0080	"
d G "CP1_A5_B0" 2 322 "0x0082"
d G "CP1_VBG_B0" 2 323 "0x0083"
d G "CP1_B1_VREF" 2 324 "0x0084"
d G "CP1_A5_VREF" 2 325 "0x0086	"
d G "CP1_VBG_VREF" 2 326 "0x0087"
d G "CP1_OUT_ON_B2" 2 328 "0x0040"
d G "CP1_INVERT" 2 329 "0x0020"
d G "CP1_INT_L2H" 2 330 "0x0008"
d G "CP1_INT_H2L" 2 331 "0x0010"
d G "CP2_A5_B4" 2 334 "0x8000"
d G "CP2_B1_B4" 2 335 "0x8200"
d G "CP2_VBG_B4" 2 336 "0x8300"
d G "CP2_A5_VREF" 2 337 "0x8400"
d G "CP2_B1_VREF" 2 338 "0x8600"
d G "CP2_VBG_VREF" 2 339 "0x8700"
d G "CP2_OUT_ON_B3" 2 341 "0x4000"
d G "CP2_INVERT" 2 342 "0x2000"
d G "CP2_INT_L2H" 2 343 "0x0800"
d G "CP2_INT_H2L" 2 344 "0x1000"
d G "VREF_OFF" 2 352 "0"
d G "VREF_ON" 2 353 "0x80"
d G "VREF_EXT" 2 354 "0x20" "Range for ref gen VREF- to VREF+"
d G "VREF_OUT_A0" 2 355 "0x40"
d G "LVD_LVDIN" 2 361 "0x1F"
d G "LVD_45" 2 362 "0x1E"
d G "LVD_42" 2 363 "0x1D"
d G "LVD_40" 2 364 "0x1C"
d G "LVD_38" 2 365 "0x1B"
d G "LVD_36" 2 366 "0x1A"
d G "LVD_35" 2 367 "0x19"
d G "LVD_33" 2 368 "0x18"
d G "LVD_30" 2 369 "0x17"
d G "LVD_28" 2 370 "0x16"
d G "LVD_27" 2 371 "0x15"
d G "LVD_25" 2 372 "0x14"
d G "LVD_24" 2 373 "0x13"
d G "LVD_23" 2 374 "0x12"
d G "LVD_22" 2 375 "0x11"
d G "LVD_21" 2 376 "0x10"
d G "LVD_TRIGGER_BELOW" 2 378 "0"
d G "LVD_TRIGGER_ABOVE" 2 379 "0x80"
d G "OSC_31250" 2 384 "0x8000"
d G "OSC_PLL_ON" 2 385 "0x4000"
d G "OSC_PLL_OFF" 2 386 "0"
d G "OSC_31KHZ" 2 387 "0"
d G "OSC_250KHZ" 2 388 "0x10"
d G "OSC_500KHZ" 2 389 "0x20"
d G "OSC_1MHZ" 2 390 "0x30"
d G "OSC_2MHZ" 2 391 "0x40"
d G "OSC_4MHZ" 2 392 "0x50"
d G "OSC_8MHZ" 2 393 "0x60"
d G "OSC_16MHZ" 2 394 "0x70"
d G "OSC_SOSC" 2 396 "1"
d G "OSC_INTRC" 2 397 "2"
d G "OSC_NORMAL" 2 398 "0"
d G "OSC_IDLE_MODE" 2 400 "0x80"
d G "OSC_MFINTRC_ON" 2 402 "0x10000" "MF-INTOSC used instead of HF-INTOSC for 500KHZ, 250KHZ and 31KHZ operating frequencies."
d G "OSC_SOSC_ON" 2 403 "0x80000"
d G "OSC_STATE_STABLE" 2 407 "4"
d G "OSC_STATE_PRIMARY_RUNNING" 2 408 "8"
d G "ADC_OFF" 2 415 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 416 "0x100"
d G "ADC_CLOCK_DIV_4" 2 417 "0x04"
d G "ADC_CLOCK_DIV_8" 2 418 "0x01"
d G "ADC_CLOCK_DIV_16" 2 419 "0x05"
d G "ADC_CLOCK_DIV_32" 2 420 "0x02"
d G "ADC_CLOCK_DIV_64" 2 421 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 422 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 424 "0x00"
d G "ADC_TAD_MUL_2" 2 425 "0x08"
d G "ADC_TAD_MUL_4" 2 426 "0x10"
d G "ADC_TAD_MUL_6" 2 427 "0x18"
d G "ADC_TAD_MUL_8" 2 428 "0x20"
d G "ADC_TAD_MUL_12" 2 429 "0x28"
d G "ADC_TAD_MUL_16" 2 430 "0x30"
d G "ADC_TAD_MUL_20" 2 431 "0x38"
d G "sAN0" 2 436 "0x000100" "| A0"
d G "sAN1" 2 437 "0x000200" "| A1"
d G "sAN2" 2 438 "0x000400" "| A2"
d G "sAN3" 2 439 "0x000800" "| A3"
d G "sAN4" 2 440 "0x001000" "| A5"
d G "sAN8" 2 441 "0x010000" "| B1"
d G "sAN9" 2 442 "0x020000" "| B4"
d G "sAN10" 2 443 "0x040000" "| B0"
d G "NO_ANALOGS" 2 444 "0" "None"
d G "ALL_ANALOG" 2 445 "0x071F00" "A0 A1 A2 A3 A5 B1 B4 B0"
d G "VSS_VDD" 2 448 "0x00" "| Range 0-Vdd"
d G "VSS_VREF" 2 449 "0x10" "| Range 0-VrefH"
d G "VSS_2V048" 2 450 "0x20" "| Range 0-2.048V"
d G "VSS_4V096" 2 451 "0x30" "| Range 0-3.096V"
d G "VREF_VDD" 2 452 "0x08" "| Range VrefL-Vdd"
d G "VREF_VREF" 2 453 "0x18" "| Range VrefL-VrefH"
d G "VREF_2V048" 2 454 "0x28" "| Range VrefL-2.048V"
d G "VREF_4V096" 2 455 "0x38" "| Range VrefL-4.096V"
d G "ADC_START_AND_READ" 2 458 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 459 "1"
d G "ADC_READ_ONLY" 2 460 "6"
d G "L_TO_H" 2 468 "0x40"
d G "H_TO_L" 2 469 "0"
d G "GLOBAL" 2 471 "0xF2C0"
d G "PERIPH" 2 472 "0xF240"
d G "INT_RTCC" 2 473 "0x00F220"
d G "INT_TIMER0" 2 474 "0x00F220"
d G "INT_TIMER1" 2 475 "0x009D01"
d G "INT_TIMER2" 2 476 "0x009D02"
d G "INT_TIMER3" 2 477 "0x00A002"
d G "INT_EXT_L2H" 2 478 "0x5000F210"
d G "INT_EXT_H2L" 2 479 "0x6000F210"
d G "INT_EXT" 2 480 "0x00F210"
d G "INT_EXT1_L2H" 2 481 "0x5001F008"
d G "INT_EXT1_H2L" 2 482 "0x6001F008"
d G "INT_EXT1" 2 483 "0x00F008"
d G "INT_EXT2_L2H" 2 484 "0x5002F010"
d G "INT_EXT2_H2L" 2 485 "0x6002F010"
d G "INT_EXT2" 2 486 "0x00F010"
d G "INT_RB" 2 487 "0x01FFF208"
d G "INT_AD" 2 488 "0x009D40"
d G "INT_RDA" 2 489 "0x009D20"
d G "INT_TBE" 2 490 "0x009D10"
d G "INT_SSP" 2 491 "0x009D08"
d G "INT_BUSCOL" 2 492 "0x00A008"
d G "INT_RDA2" 2 493 "0x00A320"
d G "INT_TBE2" 2 494 "0x00A310"
d G "INT_OSCF" 2 495 "0x00A080"
d G "INT_HLVD" 2 496 "0x00A004"
d G "INT_EXT3_L2H" 2 497 "0x5003F020"
d G "INT_EXT3_H2L" 2 498 "0x6003F020"
d G "INT_EXT3" 2 499 "0x00F020"
d G "INT_CCP1" 2 500 "0x00A302"
d G "INT_CCP2" 2 501 "0x00A304"
d G "INT_CTMU" 2 502 "0x00A308"
d G "INT_TMR1G" 2 503 "0x009D04"
d G "INT_TMR3G" 2 504 "0x00A001"
d G "INT_CCP3" 2 505 "0x00B601"
d G "INT_CCP4" 2 506 "0x00B602"
d G "INT_CCP5" 2 507 "0x00B604"
d G "INT_COMP1" 2 508 "0x00B610"
d G "INT_COMP2" 2 509 "0x00B620"
d G "INT_EEPROM" 2 510 "0x00B640"
d G "INT_TIMER4" 2 511 "0x00B680"
d G "INT_CANRX0" 2 512 "0x007601"
d G "INT_CANRX1" 2 513 "0x007602"
d G "INT_CANTX0" 2 514 "0x007604"
d G "INT_CANTX1" 2 515 "0x007608"
d G "INT_CANTX2" 2 516 "0x007610"
d G "INT_CANERR" 2 517 "0x007620"
d G "INT_CANWAKE" 2 518 "0x007640"
d G "INT_CANIRX" 2 519 "0x007680"
d G "INT_RB4" 2 520 "0x110F208"
d G "INT_RB5" 2 521 "0x120F208"
d G "INT_RB6" 2 522 "0x140F208"
d G "INT_RB7" 2 523 "0x180F208"
D G "RA0" 1 19 "PIN_A0"
D G "RA1" 1 20 "PIN_A1"
D G "RA2" 1 21 "PIN_A2"
D G "RA3" 1 22 "PIN_A3"
D G "RA4" 1 23 "PIN_A4"
D G "RA5" 1 24 "PIN_A5"
D G "RA6" 1 25 "PIN_A6"
D G "RA7" 1 26 "PIN_A7"
D G "RB1" 1 29 "PIN_B1"
D G "RB2" 1 30 "PIN_B2"
D G "RB6" 1 31 "PIN_B6"
D G "RB7" 1 32 "PIN_B7"
D G "DELAY" 1 94 "200"
D G "one" 1 96 "0x00"
D G "two" 1 97 "0x40"
T G "U32" 1 104 "int32"
T G "U16" 1 105 "int16"
T G "S16" 1 106 "sint16"
T G "U8" 1 107 "int8"
T G "S32" 1 108 "sint32"
V G "buf" 1 110 "U8"
D G "_STDIO" 3 12 ""
D G "_STRING" 4 12 ""
D G "_STDDEF" 5 13 ""
D G "ptrdiff_t" 5 18 "unsigned int16"
D G "size_t" 5 24 "unsigned int16"
D G "wchar_t" 5 26 "char"
D G "NULL" 5 27 "0"
D G "offsetof" 5 29 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 6 12 ""
D G "islower" 6 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 6 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 6 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 6 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 6 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 6 19 "(x)  ((x)==' ')"
D G "isxdigit" 6 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 6 21 "(x)  ((x)<' ')"
D G "isprint" 6 22 "(x)  ((x)>=' ')"
D G "isgraph" 6 23 "(x)  ((x)>' ')"
D G "ispunct" 6 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 4 19 10 "FUNCTION"
V L "s1" 4 34 "*int8"
V L "s2" 4 34 "*int8"
V L "n" 4 34 "int16"
F G "memmove" 4 34 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "sc1" 4 36 "*int8"
V L "sc2" 4 37 "*int8"
D G "strcopy" 4 54 "strcpy"
C L "strncpy" 4 19 4 "FUNCTION"
V L "s1" 4 61 "*int8"
V L "s2" 4 61 "*int8"
V L "n" 4 61 "int16"
F G "strncpy" 4 61 "*int8(*int8 s1,*int8 s2,int16 n,*int8 PORTC,*int8 LATB)"
V L "s" 4 63 "*int8"
C L "strcat" 4 19 3 "FUNCTION"
V L "s1" 4 78 "*int8"
V L "s2" 4 78 "*int8"
F G "strcat" 4 78 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 80 "*int8"
C L "strncat" 4 19 2 "FUNCTION"
V L "s1" 4 96 "*int8"
V L "s2" 4 96 "*int8"
V L "n" 4 96 "int16"
F G "strncat" 4 96 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 4 98 "*int8"
C L "memcmp" 4 19 3 "FUNCTION"
V L "s1" 4 120 "*int8"
V L "s2" 4 120 "*int8"
V L "n" 4 120 "int16"
F G "memcmp" 4 120 "sint8(*int8 s1,*int8 s2,int16 n)"
V L "su1" 4 122 "*int8"
V L "su2" 4 122 "*int8"
C L "strcmp" 4 19 2 "FUNCTION"
V L "s1" 4 134 "*int8"
V L "s2" 4 134 "*int8"
F G "strcmp" 4 134 "sint8(*int8 s1,*int8 s2,*int8 PORTC,*int8 LATB)"
C L "strcoll" 4 19 2 "FUNCTION"
V L "s1" 4 144 "*int8"
V L "s2" 4 144 "*int8"
F G "strcoll" 4 144 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 4 19 4 "FUNCTION"
V L "s1" 4 157 "*int8"
V L "s2" 4 157 "*int8"
V L "n" 4 157 "int16"
F G "strncmp" 4 157 "sint8(*int8 s1,*int8 s2,int16 n)"
C L "strxfrm" 4 19 3 "FUNCTION"
V L "s1" 4 169 "*int8"
V L "s2" 4 169 "*int8"
V L "n" 4 169 "int16"
F G "strxfrm" 4 169 "int16(*int8 s1,*int8 s2,int16 n,int8 )"
V L "s" 4 171 "*int8"
V L "n1" 4 172 "int8"
C L "memchr" 4 19 3 "FUNCTION"
V L "s" 4 191 "*int8"
V L "c" 4 191 "int8"
V L "n" 4 191 "int16"
F G "memchr" 4 191 "*int8(*int8 s,int8 c,int16 n,int8 )"
V L "uc" 4 193 "int8"
V L "su" 4 194 "*int8"
C L "strchr" 4 19 2 "FUNCTION"
V L "s" 4 205 "*int8"
V L "c" 4 205 "int8"
F G "strchr" 4 205 "*int8(*int8 s,int8 c)"
C L "strcspn" 4 19 4 "FUNCTION"
V L "s1" 4 217 "*int8"
V L "s2" 4 217 "*int8"
F G "strcspn" 4 217 "int8(*int8 s1,*int8 s2)"
V L "sc1" 4 219 "*int8"
V L "sc2" 4 219 "*int8"
C L "strpbrk" 4 19 4 "FUNCTION"
V L "s1" 4 232 "*int8"
V L "s2" 4 232 "*int8"
F G "strpbrk" 4 232 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 234 "*int8"
V L "sc2" 4 234 "*int8"
C L "strrchr" 4 19 2 "FUNCTION"
V L "s" 4 247 "*int8"
V L "c" 4 247 "int8"
F G "strrchr" 4 247 "*int8(*int8 s,int8 c)"
V L "p" 4 249 "*int8"
C L "strspn" 4 19 2 "FUNCTION"
V L "s1" 4 262 "*int8"
V L "s2" 4 262 "*int8"
F G "strspn" 4 262 "int8(*int8 s1,*int8 s2)"
V L "sc1" 4 264 "*int8"
V L "sc2" 4 264 "*int8"
C L "strstr" 4 19 6 "FUNCTION"
V L "s1" 4 281 "*int8"
V L "s2" 4 281 "*int8"
F G "strstr" 4 281 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 283 "*int8"
V L "t" 4 283 "*int8"
C L "strtok" 4 19 13 "FUNCTION"
V L "s1" 4 320 "*int8"
V L "s2" 4 320 "*int8"
F G "strtok" 4 320 "*int8(*int8 s1,*int8 s2)"
V L "beg" 4 322 "*int8"
V L "end" 4 322 "*int8"
V L "save" 4 323 "*int8"
C L "strlen" 4 19 6 "FUNCTION"
V L "s" 4 369 "*int8"
F G "strlen" 4 369 "int8(*int8 s)"
V L "sc" 4 371 "*int8"
C L "stricmp" 4 19 2 "FUNCTION"
V L "s1" 4 380 "*int8"
V L "s2" 4 380 "*int8"
F G "stricmp" 4 380 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 4 19 3 "FUNCTION"
V L "s" 4 394 "*int8"
F G "strlwr" 4 394 "*int8(*int8 s)"
V L "p" 4 396 "*int8"
C L "strupr" 4 19 3 "FUNCTION"
V L "s" 4 408 "*int8"
F G "strupr" 4 408 "*int8(*int8 s)"
V L "p" 4 410 "*int8"
C L "LCDWriteNibble" 3 20 5 "FUNCTION"
C L "LCDWriteNibble" 7 1 1 "*"
V L "uc" 7 3 "int8"
F G "LCDWriteNibble" 7 3 "void(int8 uc)" "RS must be set/reset before calling"
C L "LCDWriteNibble" 7 1 2 "FUNCTION"
C L "LCDWriteNibble" 7 1 1 "FUNCTION"
C L "LCDWriteNibble" 7 1 1 "FUNCTION"
V L "uc" 7 22 "int8"
F G "LCDWriteData" 7 22 "void(int8 uc)"
C L "LCDWriteData" 7 1 1 "FUNCTION"
C L "LCDWriteData" 7 1 1 "FUNCTION"
C L "LCDWriteData" 7 1 1 "FUNCTION"
V L "uc" 7 33 "int8"
F G "LCDCommand" 7 33 "void(int8 uc)"
C L "LCDCommand" 7 1 1 "FUNCTION"
C L "LCDCommand" 7 1 1 "FUNCTION"
V L "ucPos" 7 43 "int8"
F G "LCDSetCursor" 7 43 "void(int8 ucPos)"
F G "LCDClear" 7 48 "void()"
F G "LCDinit" 7 54 "void()"
C L "LCDinit" 7 1 1 "FUNCTION"
C L "LCDinit" 7 1 3 "FUNCTION"
C L "LCDinit" 7 1 1 "FUNCTION"
C L "LCDinit" 7 1 3 "FUNCTION"
C L "LCDinit" 7 1 2 "FUNCTION"
C L "LCDinit" 7 1 1 "FUNCTION"
C L "LCDinit" 7 1 2 "FUNCTION"
V L "c" 7 87 "int8"
F G "LCDPutCh" 7 87 "void(int8 c)"
C L "LCDPutU16" 7 1 39 "FUNCTION"
V L "_u16" 7 165 "U32"
V L "u8NumDigs" 7 165 "U8"
F G "LCDPutU16" 7 165 "void(U32 _u16,U8 u8NumDigs)"
V L "u16a" 7 168 "U32"
V L "u16b" 7 168 "U32"
C L "LCDPutU16" 7 1 1 "FUNCTION"
C L "LCDPutU16" 7 1 1 "FUNCTION"
C L "LCDPutS16" 7 1 25 "FUNCTION"
V L "s16a" 7 260 "S16"
V L "u8NumDigs" 7 260 "U8"
F G "LCDPutS16" 7 260 "void(S16 s16a,U8 u8NumDigs)"
V L "c" 7 262 "int8"
V L "c" 7 273 "int8"
F G "LCDMsg" 7 273 "void(int8 c)"
F G "LCDWelcome" 7 278 "void()"
V L "i" 7 279 "int8"
C L "LCDWelcome" 7 1 1 "FUNCTION"
V G "int_fl" 0 7 "int1"
V G "zero_set1" 0 7 "int1"
V G "ff1" 0 8 "U8"
V G "fl2" 0 9 "int1"
V G "menufl1" 0 9 "int1"
V G "menufl2" 0 9 "int1"
V G "menufl3" 0 9 "int1"
V G "menufl4" 0 9 "int1"
V G "TMR0fl" 0 10 "U8"
V G "MenuItemNum" 0 10 "U8"
V G "RXd_buf" 0 11 "U8"
V G "ConfigRegA" 0 13 "int8"
V G "ConfigRegB" 0 13 "int8"
V G "ModeReg" 0 13 "int8"
V G "xMSB" 0 13 "int8"
V G "xLSB" 0 13 "int8"
V G "zMSB" 0 14 "int8"
V G "zLSB" 0 14 "int8"
V G "yMSB" 0 14 "int8"
V G "yLSB" 0 14 "int8"
V G "StatReg" 0 14 "int8"
V G "idRegA" 0 14 "int8"
V G "idRegB" 0 15 "int8"
V G "idRegC" 0 15 "int8"
V G "SumX" 0 18 "sint16"
V G "SumY" 0 19 "sint16"
V G "SumZ" 0 20 "sint16"
V G "SumX0" 0 22 "sint16"
V G "SumY0" 0 23 "sint16"
V G "SumZ0" 0 24 "sint16"
V G "average_Xg" 0 26 "sint32"
V G "average_Yg" 0 27 "sint32"
V G "average_Zg" 0 28 "sint32"
V G "Xh" 0 30 "int16"
V G "Xl" 0 31 "int8"
V G "Yh" 0 32 "int16"
V G "Yl" 0 33 "int8"
V G "Zh" 0 34 "int16"
V G "Zl" 0 35 "int8"
V G "Xd" 0 37 "float"
V G "Yd" 0 38 "float"
V G "Zd" 0 39 "float"
V G "aver_count" 0 41 "U8"
V G "average_X" 0 43 "S32"
V G "average_Y" 0 43 "S32"
V G "average_Z" 0 43 "S32" "****************** Sensor func ************************************"
V L "Adr" 0 47 "int8"
V L "Data" 0 47 "int8"
F G "SensWrData" 0 47 "void(int8 Adr,int8 Data,c SensWrData,u8NumDigs Adr)"
C L "SensWrData" 0 9 2 "FUNCTION"
V L "Adr" 0 57 "int8"
F G "SensRdData" 0 57 "int8(int8 Adr)"
V L "Data" 0 58 "int8"
C L "SensRdData" 0 9 2 "FUNCTION"
C L "SensRdData" 0 9 1 "FUNCTION"
C L "SensRdData" 0 9 1 "FUNCTION"
F G "SensInit" 0 79 "void()" "SensWrData(ConfigRegA,0x50); //  F = 15 Hz + ??????. ?? 4 ????????"
C L "SensInit" 0 9 5 "FUNCTION"
C L "SensInit" 0 9 1 "FUNCTION"
C L "SensInit" 0 9 1 "FUNCTION"
C L "SensInit" 0 9 1 "FUNCTION"
F G "SelfCal" 0 91 "sint16(int32 ,int32 )"
V L "Xh" 0 92 "int16"
V L "Xl" 0 93 "int8"
V L "Yh" 0 94 "int16"
V L "Yl" 0 95 "int8"
V L "Zh" 0 96 "int16"
V L "Zl" 0 97 "int8"
C L "SelfCal" 0 9 2 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 1 "FUNCTION"
C L "SelfCal" 0 9 5 "FUNCTION"
F G "SensRdAll" 0 134 "void(u8NumDigs Adr)" "if (int_fl){"
C L "SensRdAll" 0 9 21 "FUNCTION"
C L "SensRdAll" 0 9 2 "FUNCTION"
C L "SensRdAll" 0 9 1 "FUNCTION"
C L "SensRdAll" 0 9 29 "FUNCTION"
C L "int0" 0 246 2 "*"
F G "int0" 0 251 "void(int8 @const334)"
C L "int0" 0 246 2 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
C L "int0" 0 246 1 "FUNCTION"
F G "UART_RXd_isr" 0 300 "void()"
C L "UART_RXd_isr" 0 246 2 "FUNCTION"
C L "UART_RXd_isr" 0 246 1 "FUNCTION"
C L "UART_RXd_isr" 0 246 3 "FUNCTION"
C L "UART_RXd_isr" 0 246 1 "FUNCTION"
C L "MAIN" 0 246 1 "FUNCTION"
F G "MAIN" 0 323 "void()"
C L "MAIN" 0 246 1 "FUNCTION"
C L "MAIN" 0 246 1 "FUNCTION"
C L "MAIN" 0 246 1 "FUNCTION"
C L "MAIN" 0 246 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep_ulpwu" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "port_d_pullups" 1 0
F B "port_e_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 2
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_timer_4" 3 0
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_ccp3" 1 0
F B "set_pwm3_duty" 1 0
F B "setup_ccp4" 1 0
F B "set_pwm4_duty" 1 0
F B "setup_ccp5" 1 0
F B "set_pwm5_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 0 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
