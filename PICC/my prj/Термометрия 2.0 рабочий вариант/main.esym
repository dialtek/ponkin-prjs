C L "MAIN" 0 48 1 "FUNCTION"
D G "__PCD__" 0 530 ""4.140""
D G "__DEVICE__" 0 530 "8506"
D G "__DATE__" 0 530 ""04-фев-15""
D G "__TIME__" 0 530 ""14:44:21"" "Standard Header file for the PIC24HJ128GP506 device ////////////////"
d G "PIN_B0" 2 25 "5696"
d G "PIN_B1" 2 26 "5697"
d G "PIN_B2" 2 27 "5698"
d G "PIN_B3" 2 28 "5699"
d G "PIN_B4" 2 29 "5700"
d G "PIN_B5" 2 30 "5701"
d G "PIN_B6" 2 31 "5702"
d G "PIN_B7" 2 32 "5703"
d G "PIN_B8" 2 33 "5704"
d G "PIN_B9" 2 34 "5705"
d G "PIN_B10" 2 35 "5706"
d G "PIN_B11" 2 36 "5707"
d G "PIN_B12" 2 37 "5708"
d G "PIN_B13" 2 38 "5709"
d G "PIN_B14" 2 39 "5710"
d G "PIN_B15" 2 40 "5711"
d G "PIN_C1" 2 42 "5745"
d G "PIN_C2" 2 43 "5746"
d G "PIN_C12" 2 44 "5756"
d G "PIN_C13" 2 45 "5757"
d G "PIN_C14" 2 46 "5758"
d G "PIN_C15" 2 47 "5759"
d G "PIN_D0" 2 49 "5792"
d G "PIN_D1" 2 50 "5793"
d G "PIN_D2" 2 51 "5794"
d G "PIN_D3" 2 52 "5795"
d G "PIN_D4" 2 53 "5796"
d G "PIN_D5" 2 54 "5797"
d G "PIN_D6" 2 55 "5798"
d G "PIN_D7" 2 56 "5799"
d G "PIN_D8" 2 57 "5800"
d G "PIN_D9" 2 58 "5801"
d G "PIN_D10" 2 59 "5802"
d G "PIN_D11" 2 60 "5803"
d G "PIN_F0" 2 62 "5888"
d G "PIN_F1" 2 63 "5889"
d G "PIN_F2" 2 64 "5890"
d G "PIN_F3" 2 65 "5891"
d G "PIN_F4" 2 66 "5892"
d G "PIN_F5" 2 67 "5893"
d G "PIN_F6" 2 68 "5894"
d G "PIN_G0" 2 70 "5936"
d G "PIN_G1" 2 71 "5937"
d G "PIN_G2" 2 72 "5938"
d G "PIN_G3" 2 73 "5939"
d G "PIN_G6" 2 74 "5942"
d G "PIN_G7" 2 75 "5943"
d G "PIN_G8" 2 76 "5944"
d G "PIN_G9" 2 77 "5945"
d G "PIN_G12" 2 78 "5948"
d G "PIN_G13" 2 79 "5949"
d G "PIN_G14" 2 80 "5950"
d G "PIN_G15" 2 81 "5951"
d G "FALSE" 2 84 "0"
d G "TRUE" 2 85 "1"
d G "BYTE" 2 87 "unsigned int8"
d G "BOOLEAN" 2 88 "int1"
d G "getc" 2 90 "getch"
d G "fgetc" 2 91 "getch"
d G "getchar" 2 92 "getch"
d G "putc" 2 93 "putchar"
d G "fputc" 2 94 "putchar"
d G "fgets" 2 95 "gets"
d G "fputs" 2 96 "puts"
d G "UART_ADDRESS" 2 102 "2"
d G "UART_DATA" 2 103 "4"
d G "UART_AUTODETECT" 2 104 "8"
d G "UART_AUTODETECT_NOWAIT" 2 105 "9"
d G "UART_WAKEUP_ON_RDA" 2 106 "10"
d G "UART_SEND_BREAK" 2 107 "13"
d G "WDT_ON" 2 114 "1"
d G "WDT_OFF" 2 115 "0"
d G "RESTART_POWER_UP" 2 120 "0"
d G "RESTART_BROWNOUT" 2 121 "1"
d G "RESTART_WATCHDOG" 2 122 "4"
d G "RESTART_SOFTWARE" 2 123 "6"
d G "RESTART_MCLR" 2 124 "7"
d G "RESTART_ILLEGAL_OP" 2 125 "14"
d G "RESTART_TRAP_CONFLICT" 2 126 "15"
d G "SLEEP_FULL" 2 129 "0" "Default"
d G "SLEEP_IDLE" 2 130 "1" "Clock and peripherals don't stop"
d G "OSC_INTERNAL" 2 134 "32"
d G "OSC_CRYSTAL" 2 135 "1"
d G "OSC_CLOCK" 2 136 "2"
d G "OSC_RC" 2 137 "3"
d G "OSC_SECONDARY" 2 138 "16"
d G "TMR_DISABLED" 2 145 "0x0000"
d G "TMR_INTERNAL" 2 146 "0x8000"
d G "TMR_EXTERNAL" 2 147 "0x8002"
d G "TMR_GATE" 2 148 "0x0040"
d G "TMR_DIV_BY_1" 2 150 "0x0000"
d G "TMR_DIV_BY_8" 2 151 "0x0010"
d G "TMR_DIV_BY_64" 2 152 "0x0020"
d G "TMR_DIV_BY_256" 2 153 "0x0030"
d G "TMR_32_BIT" 2 154 "0x0008" "Only for even numbered timers"
d G "TMR_HALT_IDLE" 2 156 "0x2000"
d G "TMR_CONTINUE_IDLE" 2 157 "0x0000"
d G "T1_EXTERNAL_SYNC" 2 159 "0x8006" "This only applies to Timer1"
d G "T1_EXTERNAL_RTC" 2 160 "0xC002" "This only applies to Timer1"
d G "CAPTURE_OFF" 2 165 "0x0000" "Capture OFF"
d G "CAPTURE_EE" 2 166 "0x0001" "Capture Every Edge"
d G "CAPTURE_FE" 2 167 "0x0002" "Capture Falling Edge"
d G "CAPTURE_RE" 2 168 "0x0003" "Capture Rising Edge"
d G "CAPTURE_DIV_4" 2 169 "0x0004" "Capture Every 4th Rising Edge"
d G "CAPTURE_DIV_16" 2 170 "0x0005" "Capture Every 16th Rising Edge"
d G "CAPTURE_INTERRUPT_ONLY" 2 171 "0x0007" "Interrupt on Rising Edge when in Sleep or Idle"
d G "INTERRUPT_EVERY_CAPTURE" 2 174 "0x0000" "Interrupt on every capture event"
d G "INTERRUPT_SECOND_CAPTURE" 2 175 "0x0020" "Interrupt on every second capture event"
d G "INTERRUPT_THIRD_CAPTURE" 2 176 "0x0040" "Interrupt on every third capture event"
d G "INTERRUPT_FOURTH_CAPTURE" 2 177 "0x0060" "Interrupt on every fourth capture event"
d G "CAPTURE_TIMER2" 2 180 "0x0080" "On capture event Timer 2 is captured"
d G "CAPTURE_TIMER3" 2 181 "0x0000" "On capture event Timer 3 is captured"
d G "CAPTURE_HALT_IDLE" 2 184 "0x2000" "Capture module halts during idle mode"
d G "CAPTURE_CONTINUE_IDLE" 2 185 "0x0000" "Capture module continues during idle mode"
d G "COMPARE_OFF" 2 191 "0x0000" "Compare OFF"
d G "COMPARE_SET_ON_MATCH" 2 192 "0x0001" "Pin from low to high on match"
d G "COMPARE_CLR_ON_MATCH" 2 193 "0x0002" "Pin from high to low on match"
d G "COMPARE_TOGGEL" 2 194 "0x0003" "Pin will toggle on every match occurrence"
d G "COMPARE_SINGLE_PULSE" 2 195 "0x0004" "Pin will generate single pulse on first match"
d G "COMPARE_CONT_PULSE" 2 196 "0x0005" "Pin will pulse for every match"
d G "COMPARE_PWM" 2 197 "0x0006" "Compare operates as PWM with fault pin disabled"
d G "COMPARE_PWM_FAULT" 2 198 "0x0007" "Compare operates as PWM with fault pin enabled"
d G "COMPARE_TIMER2" 2 201 "0x0000" "Timer 2 is the base timer"
d G "COMPARE_TIMER3" 2 202 "0x0008" "Timer 3 is the base timer"
d G "COMPARE_HALT_IDLE" 2 205 "0x2000" "Compare module halts during idle mode"
d G "COMPARE_CONTINUE_IDLE" 2 206 "0x0000" "Compare module continues during idle mode"
d G "SPI_MASTER" 2 213 "0x0020"
d G "SPI_SLAVE" 2 214 "0x0000"
d G "SPI_SCK_IDLE_HIGH" 2 216 "0x0040"
d G "SPI_SCK_IDLE_LOW" 2 217 "0x0000"
d G "SPI_XMIT_L_TO_H" 2 219 "0x0100"
d G "SPI_XMIT_H_TO_L" 2 220 "0x0000"
d G "SPI_MODE_16B" 2 222 "0x0400"
d G "SPI_MODE_8B" 2 223 "0x0000"
d G "SPI_SAMPLE_AT_END" 2 225 "0x0200"
d G "SPI_SAMPLE_AT_MIDDLE" 2 226 "0x0000"
d G "SPI_SS_ENABLED" 2 228 "0x0000"
d G "SPI_SS_DISABLED" 2 229 "0x0080"
d G "SPI_CLK_DIV_1" 2 232 "0x001F"
d G "SPI_CLK_DIV_2" 2 233 "0x001B"
d G "SPI_CLK_DIV_3" 2 234 "0x0017"
d G "SPI_CLK_DIV_4" 2 235 "0x001E"
d G "SPI_CLK_DIV_5" 2 236 "0x000F"
d G "SPI_CLK_DIV_6" 2 237 "0x000B"
d G "SPI_CLK_DIV_7" 2 238 "0x0007"
d G "SPI_CLK_DIV_8" 2 239 "0x0003"
d G "SPI_CLK_DIV_12" 2 240 "0x0016"
d G "SPI_CLK_DIV_16" 2 241 "0x001D"
d G "SPI_CLK_DIV_20" 2 242 "0x000E"
d G "SPI_CLK_DIV_24" 2 243 "0x000A"
d G "SPI_CLK_DIV_28" 2 244 "0x0006"
d G "SPI_CLK_DIV_32" 2 245 "0x0002"
d G "SPI_CLK_DIV_48" 2 246 "0x0015"
d G "SPI_CLK_DIV_64" 2 247 "0x001C"
d G "SPI_CLK_DIV_80" 2 248 "0x000D"
d G "SPI_CLK_DIV_96" 2 249 "0x0009"
d G "SPI_CLK_DIV_112" 2 250 "0x0005"
d G "SPI_CLK_DIV_128" 2 251 "0x0001"
d G "SPI_CLK_DIV_192" 2 252 "0x0014"
d G "SPI_CLK_DIV_256" 2 253 "0x0010"
d G "SPI_CLK_DIV_320" 2 254 "0x000C"
d G "SPI_CLK_DIV_384" 2 255 "0x0008"
d G "SPI_CLK_DIV_448" 2 256 "0x0004"
d G "SPI_CLK_DIV_512" 2 257 "0x0000"
d G "SPI_L_TO_H" 2 260 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 2 261 "SPI_SCK_IDLE_HIGH"
d G "ADC_OFF" 2 270 "0x10000"
d G "ADC_CLOCK" 2 271 "0x0000" "External"
d G "ADC_CLOCK_DIV_2" 2 272 "0x0001"
d G "ADC_CLOCK_DIV_4" 2 273 "0x0003"
d G "ADC_CLOCK_DIV_8" 2 274 "0x0007"
d G "ADC_CLOCK_DIV_16" 2 275 "0x000F"
d G "ADC_CLOCK_DIV_32" 2 276 "0x001F"
d G "ADC_CLOCK_DIV_64" 2 277 "0x003F"
d G "ADC_CLOCK_INTERNAL" 2 278 "0x8000" "Internal"
d G "ADC_TAD_MUL_0" 2 282 "0x0000"
d G "ADC_TAD_MUL_2" 2 283 "0x0200"
d G "ADC_TAD_MUL_4" 2 284 "0x0400"
d G "ADC_TAD_MUL_8" 2 285 "0x0800"
d G "ADC_TAD_MUL_16" 2 286 "0x1000"
d G "ADC_TAD_MUL_31" 2 287 "0x1F00"
d G "ADC_START_AND_READ" 2 290 "0x07"
d G "ADC_START_ONLY" 2 291 "0x01"
d G "ADC_READ_ONLY" 2 292 "0x06"
d G "NO_ANALOGS" 2 299 "0" "None"
d G "ALL_ANALOG" 2 300 "0xFFFFFFFF" "All"
d G "sAN0" 2 301 "0x00000001" "| B0"
d G "sAN1" 2 302 "0x00000002" "| B1"
d G "sAN2" 2 303 "0x00000004" "| B2"
d G "sAN3" 2 304 "0x00000008" "| B3"
d G "sAN4" 2 305 "0x00000010" "| B4"
d G "sAN5" 2 306 "0x00000020" "| B5"
d G "sAN6" 2 307 "0x00000040" "| B6"
d G "sAN7" 2 308 "0x00000080" "| B7"
d G "sAN8" 2 309 "0x00000100" "| B8"
d G "sAN9" 2 310 "0x00000200" "| B9"
d G "sAN10" 2 311 "0x00000400" "| B10"
d G "sAN11" 2 312 "0x00000800" "| B11"
d G "sAN12" 2 313 "0x00001000" "| B12"
d G "sAN13" 2 314 "0x00002000" "| B13"
d G "sAN14" 2 315 "0x00004000" "| B14"
d G "sAN15" 2 316 "0x00008000" "| B15"
d G "sAN16" 2 317 "0x00010000" "| C1"
d G "sAN17" 2 318 "0x00020000" "| C2"
d G "sAN18" 2 319 "0x00040000" "| C3"
d G "sAN19" 2 320 "0x00080000" "| C4"
d G "sAN20" 2 321 "0x00100000" "| A12"
d G "sAN21" 2 322 "0x00200000" "| A13"
d G "sAN22" 2 323 "0x00400000" "| A6"
d G "sAN23" 2 324 "0x00800000" "| A7"
d G "sAN24" 2 325 "0x01000000" "| E0"
d G "sAN25" 2 326 "0x02000000" "| E1"
d G "sAN26" 2 327 "0x04000000" "| E2"
d G "sAN27" 2 328 "0x08000000" "| E3"
d G "sAN28" 2 329 "0x10000000" "| E4"
d G "sAN29" 2 330 "0x20000000" "| E5"
d G "sAN30" 2 331 "0x40000000" "| E6"
d G "sAN31" 2 332 "0x80000000" "| E7"
d G "VSS_VDD" 2 335 "0x0000" "Range 0-Vdd"
d G "VREF_VREF" 2 336 "0x6000" "Range VrefL-VrefH"
d G "VREF_VDD" 2 337 "0x4000" "Range VrefL-Vdd"
d G "VSS_VREF" 2 338 "0x2000" "Range 0-VrefH"
d G "DMA_IN_SPI1" 2 345 " (0x0A0000|getenv("sfr:SPI1BUF"))"
d G "DMA_OUT_SPI1" 2 346 " (0x8A0000|getenv("sfr:SPI1BUF"))"
d G "DMA_IN_SPI2" 2 347 " (0x210000|getenv("sfr:SPI2BUF"))"
d G "DMA_OUT_SPI2" 2 348 " (0xA10000|getenv("sfr:SPI2BUF"))"
d G "DMA_IN_UART1" 2 349 " (0x0B0000|getenv("sfr:U1RXREG"))"
d G "DMA_OUT_UART1" 2 350 " (0x8C0000|getenv("sfr:U1TXREG"))"
d G "DMA_IN_UART2" 2 351 " (0x1E0000|getenv("sfr:U2RXREG"))"
d G "DMA_OUT_UART2" 2 352 " (0x9F0000|getenv("sfr:U2TXREG"))"
d G "DMA_IN_ADC1" 2 353 " (0x0D0000|getenv("sfr:ADC1BUF0"))"
d G "DMA_IN_ECAN1" 2 354 " (0x220000|getenv("sfr:C1RXD"))"
d G "DMA_OUT_ECAN1" 2 355 " (0xC60000|getenv("sfr:C1TXD"))"
d G "DMA_INT0" 2 356 "0x000000" "or in direction and perif address"
d G "DMA_IC1" 2 357 "0x010000" "or in direction and perif address"
d G "DMA_IC2" 2 358 "0x050000" "or in direction and perif address"
d G "DMA_OC1" 2 359 "0x020000" "or in direction and perif address"
d G "DMA_OC2" 2 360 "0x060000" "or in direction and perif address"
d G "DMA_TIMER2" 2 361 "0x070000" "or in direction and perif address"
d G "DMA_TIMER3" 2 362 "0x080000" "or in direction and perif address"
d G "DMA_IN" 2 363 "0x00"
d G "DMA_OUT" 2 364 "0x800000"
d G "DMA_BYTE" 2 366 "0x40"
d G "DMA_WORD" 2 367 "0x00" "default"
d G "DMA_HALF_INT" 2 368 "0x10" "interrupt when half full"
d G "DMA_WRITE_NULL" 2 369 "0x08"
d G "DMA_CONTINOUS" 2 371 "0x00"
d G "DMA_ONE_SHOT" 2 372 "0x01"
d G "DMA_PING_PONG" 2 373 "0x02"
d G "DMA_NO_INC" 2 374 "0x10"
d G "DMA_PERIF_ADDR" 2 375 "0x20" "Device supplies address"
d G "DMA_FORCE_NOW" 2 376 "0x100"
d G "DMA_IN_ERROR" 2 378 "0x01"
d G "DMA_OUT_ERROR" 2 379 "0x02"
d G "DMA_B_SELECT" 2 380 "0x04"
d G "L_TO_H" 2 388 "0x40"
d G "H_TO_L" 2 389 "0"
d G "INTR_GLOBAL" 2 392 "0x400"
d G "INTR_NORMAL" 2 393 "0x100"
d G "INTR_ALTERNATE" 2 394 "0x200"
d G "INTR_LEVEL0" 2 395 "0x500"
d G "INTR_LEVEL1" 2 396 "0x501"
d G "INTR_LEVEL2" 2 397 "0x502"
d G "INTR_LEVEL3" 2 398 "0x503"
d G "INTR_LEVEL4" 2 399 "0x504"
d G "INTR_LEVEL5" 2 400 "0x505"
d G "INTR_LEVEL6" 2 401 "0x506"
d G "INTR_LEVEL7" 2 402 "0x507"
d G "INTR_CN_PIN" 2 404 "0x8000" "or in a PIN_xx constant"
d G "INT_OSCFAIL" 2 406 "1"
d G "INT_ADDRERR" 2 407 "2"
d G "INT_STACKERR" 2 408 "3"
d G "INT_MATHERR" 2 409 "4"
d G "INT_DMAERR" 2 410 "5"
d G "INT_EXT0" 2 411 "6"
d G "INT_IC1" 2 412 "7"
d G "INT_OC1" 2 413 "8"
d G "INT_TIMER1" 2 414 "9"
d G "INT_DMA0" 2 415 "69"
d G "INT_IC2" 2 416 "70"
d G "INT_OC2" 2 417 "71"
d G "INT_TIMER2" 2 418 "72"
d G "INT_TIMER3" 2 419 "73"
d G "INT_SPI1E" 2 420 "74"
d G "INT_SPI1" 2 421 "75"
d G "INT_RDA" 2 422 "76"
d G "INT_TBE" 2 423 "77"
d G "INT_ADC1" 2 424 "78"
d G "INT_DMA1" 2 425 "79"
d G "INT_SI2C" 2 426 "81"
d G "INT_MI2C" 2 427 "82"
d G "INT_CNI" 2 428 "84"
d G "INT_EXT1" 2 429 "85"
d G "INT_IC7" 2 430 "87"
d G "INT_IC8" 2 431 "88"
d G "INT_DMA2" 2 432 "89"
d G "INT_OC3" 2 433 "90"
d G "INT_OC4" 2 434 "91"
d G "INT_TIMER4" 2 435 "92"
d G "INT_TIMER5" 2 436 "93"
d G "INT_EXT2" 2 437 "94"
d G "INT_RDA2" 2 438 "95"
d G "INT_TBE2" 2 439 "96"
d G "INT_SPI2E" 2 440 "97"
d G "INT_SPI2" 2 441 "98"
d G "INT_C1RX" 2 442 "99"
d G "INT_CAN1" 2 443 "100"
d G "INT_DMA3" 2 444 "101"
d G "INT_IC3" 2 445 "102"
d G "INT_IC4" 2 446 "103"
d G "INT_IC5" 2 447 "104"
d G "INT_IC6" 2 448 "105"
d G "INT_OC5" 2 449 "106"
d G "INT_OC6" 2 450 "107"
d G "INT_OC7" 2 451 "108"
d G "INT_OC8" 2 452 "109"
d G "INT_DMA4" 2 453 "111"
d G "INT_TIMER6" 2 454 "112"
d G "INT_TIMER7" 2 455 "113"
d G "INT_SI2C2" 2 456 "114"
d G "INT_MI2C2" 2 457 "115"
d G "INT_TIMER8" 2 458 "116"
d G "INT_TIMER9" 2 459 "117"
d G "INT_EXT3" 2 460 "118"
d G "INT_EXT4" 2 461 "119"
d G "INT_DMA5" 2 462 "126"
d G "INT_UART1E" 2 463 "130"
d G "INT_UART2E" 2 464 "131"
d G "INT_DMA6" 2 465 "133"
d G "INT_DMA7" 2 466 "134"
d G "INT_C1TX" 2 467 "135"
D G "STATUS" 1 37 "0x00" "ADC1256 Register map"
D G "MUX" 1 38 "0x01"
D G "ADCON" 1 39 "0x02"
D G "DRATE" 1 40 "0x03"
D G "IO" 1 41 "0x04"
D G "OFCO" 1 42 "0x05"
D G "OFC1" 1 43 "0x06"
D G "OFC2" 1 44 "0x07"
D G "FSCO" 1 45 "0x08"
D G "FSC1" 1 46 "0x09"
D G "FSC2" 1 47 "0x0A"
D G "uV" 1 49 "1000000" "basic"
D G "mV" 1 51 "1000"
D G "ADC_Dout" 1 142 "SDI2" "???? Din ??"
D G "ADC_Din" 1 143 "SDO2" "???? Dout ??"
D G "FCY" 1 154 "40000000"
D G "BAUDRATE" 1 155 "9600"
D G "BRGVAL" 1 156 " ((FCY/BAUDRATE)/16)-1"
D G "CK_FLASH_END" 1 163 " (getenv("PROGRAM_MEMORY")-1)"
D G "CK_FLASH_PAGE_SIZE" 1 164 " (getenv("FLASH_ERASE_SIZE")/2)"
D G "CK_NUM_PAGES" 1 165 " (CK_FLASH_END/CK_FLASH_PAGE_SIZE)"
D G "CK_USER_PAGE" 1 167 " (CK_FLASH_PAGE_SIZE*(CK_NUM_PAGES-1))"
T G "U16" 1 173 "int16"
T G "U8" 1 174 "int8"
T G "U32" 1 175 "int32"
T G "S32" 1 176 "sint32"
T G "S16" 1 177 "sint16"
T G "S8" 1 178 "sint8"
V G "ADC_RByte1" 0 4 "S32"
V G "ADC_RByte2" 0 5 "S32"
V G "ADC_RByte3" 0 6 "S32"
V G "ADC_RByte_Sum" 0 7 "S32"
V G "ADCresult" 0 8 "S32"
V G "Vin" 0 9 "float"
V G "PGA" 0 10 "U8" "static float Vref=2.5;"
V G "Sps_buf" 0 12 "U8"
V G "Global_Ch_Number" 0 12 "U8"
V G "ADCaddCoef" 0 13 "S16"
V G "ADCmulCoef" 0 14 "float"
V G "Final_T_in_K" 0 15 "float"
V G "ostatok_int_dec" 0 16 "U8"
V G "ostatok_int_sot" 0 16 "U8"
V G "LCD_num_symb" 0 17 "U8"
V G "flash_wr_data" 0 18 "U8[1]"
V G "Aver_Wr" 0 19 "U8"
V G "Sps_Wr" 0 20 "U8"
V G "CRC_Wr" 0 21 "U8"
V G "menu_item" 0 23 "U8"
V G "menu_sel" 0 24 "S8"
V G "menu_fl" 0 26 "U8"
V G "meas_stop_fl" 0 27 "int1"
V G "LCD_clear_fl" 0 28 "int1"
V G "reset_fl" 0 29 "int1"
V G "NumAver" 0 31 "U8"
V G "ADC_sps_var" 0 32 "U8"
V G "CRC1" 0 33 "U8"
V G "CRC2" 0 33 "U8"
V G "CRC_buf" 0 33 "U8" "константы EEPROM CRC"
V G "flash_rd_data" 0 34 "U8[4]" "заготовка массива для чтения из флэш"
V G "temp" 0 35 "U32"
V G "ADC_data" 0 36 "S32"
V G "buf" 0 38 "int8" "lcd buf"
D G "one" 3 21 "0x00"
D G "two" 3 22 "0x40"
D G "three" 3 23 "0x10"
D G "four" 3 24 "0x50"
V L "uc" 3 27 "int8"
F G "LCDWriteNibble" 3 27 "void(int8 uc)"
C L "LCDWriteNibble" 3 1 1 "FUNCTION"
C L "LCDWriteNibble" 3 1 1 "FUNCTION"
C L "LCDWriteNibble" 3 1 1 "FUNCTION"
V L "uc" 3 46 "int8"
F G "LCDWriteData" 3 46 "void(int8 uc)"
C L "LCDWriteData" 3 1 1 "FUNCTION"
C L "LCDWriteData" 3 1 1 "FUNCTION"
C L "LCDWriteData" 3 1 1 "FUNCTION"
V L "uc" 3 59 "int8"
F G "LCDCommand" 3 59 "void(int8 uc)"
C L "LCDCommand" 3 1 1 "FUNCTION"
C L "LCDCommand" 3 1 1 "FUNCTION"
C L "LCDCommand" 3 1 1 "FUNCTION"
V L "ucPos" 3 69 "int8"
F G "LCDSetCursor" 3 69 "void(int8 ucPos)"
F G "LCDClear" 3 74 "void()"
C L "LCDClear" 3 1 1 "FUNCTION"
F G "LCDInit" 3 81 "void()"
C L "LCDInit" 3 1 1 "FUNCTION"
C L "LCDInit" 3 1 1 "FUNCTION"
C L "LCDInit" 3 1 1 "FUNCTION"
C L "LCDInit" 3 1 1 "FUNCTION"
C L "LCDInit" 3 1 1 "FUNCTION"
C L "LCDInit" 3 1 1 "FUNCTION"
C L "LCDInit" 3 1 2 "FUNCTION"
C L "LCDInit" 3 1 1 "FUNCTION"
C L "LCDInit" 3 1 1 "FUNCTION"
C L "LCDInit" 3 1 2 "FUNCTION"
C L "LCDInit" 3 1 1 "FUNCTION"
C L "LCDInit" 3 1 2 "FUNCTION"
V L "c" 3 117 "sint8"
F G "LCDPutCh" 3 117 "void(sint8 c)"
V L "c" 3 122 "sint8"
F G "LCDMsg" 3 122 "void(sint8 c)"
F G "LCDWelcome" 3 128 "void()"
C L "LCDWelcome" 3 1 1 "FUNCTION"
V L "_u16" 3 141 "U32"
V L "u8NumDigs" 3 141 "U8"
F G "LCDPutU16" 3 141 "void(U32 _u16,U8 u8NumDigs)"
V L "u16a" 3 144 "U32"
V L "u16b" 3 144 "U32"
V L "_u16" 3 187 "U32"
V L "u8NumDigs" 3 187 "U8"
F G "LCDPutU32" 3 187 "void(U32 _u16,U8 u8NumDigs)"
V L "u16a" 3 189 "U32"
V L "u16b" 3 189 "U32"
V L "s32a" 3 258 "S32"
V L "u8NumDigs" 3 258 "U8"
F G "LCDPutS32" 3 258 "void(S32 s32a,U8 u8NumDigs)"
V L "c" 3 260 "sint8"
V L "RegName" 4 2 "U8"
F G "RdReg" 4 2 "U8(U8 RegName)"
V L "RegValue" 4 4 "U8"
C L "RdReg" 4 5 2 "FUNCTION"
C L "RdReg" 4 5 1 "FUNCTION"
C L "RdReg" 4 5 1 "FUNCTION"
C L "RdReg" 4 5 1 "FUNCTION"
V L "RegName" 4 19 "U8"
V L "CommandByte" 4 19 "int8"
F G "WrReg" 4 19 "void(U8 RegName,int8 CommandByte)"
C L "WrReg" 4 5 1 "FUNCTION"
C L "WrReg" 4 5 1 "FUNCTION"
V L "StartRegId" 4 33 "U8"
V L "CommandByte1" 4 33 "int8"
V L "CommandByte2" 4 33 "int8"
V L "CommandByte3" 4 33 "int8"
V L "CommandByte4" 4 33 "int8"
F G "ADC_Init2" 4 33 "void(U8 StartRegId,int8 CommandByte1,int8 CommandByte2,int8 CommandByte3,int8 CommandByte4)"
C L "ADC_Init2" 4 5 1 "FUNCTION"
C L "ADC_Init2" 4 5 1 "FUNCTION"
F G "ADC_RData" 4 50 "S32()"
F G "ADC_StartRdContin" 4 73 "void()"
F G "ADC_RdataC" 4 82 "S32()" "ADC_CS = 0;"
C L "ADC_RdataC" 4 5 44 "FUNCTION"
F G "ADC_StopRd" 4 159 "void()"
V L "SPS" 4 170 "U8"
F G "ADC_sps_set" 4 170 "void(U8 SPS)"
C L "ADC_sps_set" 4 5 1 "FUNCTION"
F G "ADC_SelfCal" 4 179 "void()"
V L "Ch_Number" 4 241 "U8"
F G "ADC_setCh" 4 241 "void(U8 Ch_Number)"
C L "ADC_setCh" 4 5 1 "FUNCTION"
C L "ADC_setCh" 4 5 1 "FUNCTION"
C L "ADC_setCh" 4 5 1 "FUNCTION"
V L "k" 4 270 "S32"
F G "Read_ADC_vol_in" 4 270 "S32(S32 k)"
V L "VinInt" 4 271 "S32"
C L "Read_ADC_vol_in" 4 5 1 "FUNCTION"
V L "NumSamples" 4 279 "U8"
F G "ADC_vol_average" 4 279 "S32(U8 NumSamples)"
V L "A" 4 281 "S32"
V L "Sum" 4 281 "S32"
V L "i" 4 282 "U8"
V L "PGA_val" 4 292 "U8"
F G "ADC_set_PGA" 4 292 "void(U8 PGA_val)"
C L "ADC_set_PGA" 4 5 9 "FUNCTION"
F G "ADC_wakeUp" 4 337 "void()"
C L "ADC_wakeUp" 4 5 1 "FUNCTION"
C L "ADC_wakeUp" 4 5 1 "FUNCTION"
F G "ADC_init" 4 350 "void()"
C L "ADC_init" 4 5 1 "FUNCTION"
C L "ADC_init" 4 5 1 "FUNCTION"
C L "ADC_init" 4 5 1 "FUNCTION"
C L "ADC_init" 4 5 1 "FUNCTION"
C L "ADC_init" 4 5 1 "FUNCTION"
C L "ADC_init" 4 5 1 "FUNCTION"
C L "ADC_init" 4 5 1 "FUNCTION"
C L "ADC_init" 4 5 1 "FUNCTION"
V L "t" 4 368 "float"
V L "k" 4 368 "U8"
F G "power" 4 368 "float(float t,U8 k)" "возведение t в степень k"
V L "res" 4 370 "float"
F G "ADC_vol_to_T" 4 381 "float()"
V L "R" 4 382 "float"
V L "Temper" 4 383 "float"
V L "k1" 4 383 "float"
V L "k2" 4 383 "float"
V L "k3" 4 383 "float"
V L "k4" 4 383 "float"
V L "k5" 4 383 "float"
V L "k6" 4 383 "float"
V L "k7" 4 383 "float"
V L "p" 4 384 "float"
V L "z1" 4 384 "float"
V L "z2" 4 384 "float"
V L "z3" 4 384 "float"
V L "z4" 4 384 "float"
V L "z5" 4 384 "float"
V L "z6" 4 384 "float"
V L "Temper_int" 4 385 "U8"
C L "ADC_vol_to_T" 4 5 1 "FUNCTION"
C L "ADC_vol_to_T" 4 5 1 "FUNCTION"
C L "ADC_vol_to_T" 4 5 1 "FUNCTION"
C L "ADC_vol_to_T" 4 5 1 "FUNCTION"
C L "ADC_vol_to_T" 4 5 1 "FUNCTION"
C L "Rd_Flash" 0 48 1 "FUNCTION"
F G "Rd_Flash" 0 50 "void()"
F G "Wr_Flash" 0 60 "void()"
C L "Wr_Flash" 0 48 1 "FUNCTION"
C L "Wr_Flash" 0 48 1 "FUNCTION"
V L "pcBlock" 0 72 "*int8"
V L "len" 0 72 "int16"
F G "Crc8" 0 72 "int8(*int8 pcBlock,int16 len)" "Name  : CRC-8"
C L "Crc8" 0 48 7 "FUNCTION"
V L "crc" 0 85 "int8"
V L "i" 0 86 "int16"
F G "OscSetup" 0 99 "void()" "Fcy=Fosc/2"
C L "OscSetup" 0 48 2 "FUNCTION"
C L "OscSetup" 0 48 1 "FUNCTION"
C L "OscSetup" 0 48 1 "FUNCTION"
C L "OscSetup" 0 48 1 "FUNCTION"
C L "OscSetup" 0 48 1 "FUNCTION"
F G "EnableInt" 0 118 "void()"
F G "DisableInt" 0 129 "void()"
F G "MCU_init" 0 138 "void()"
C L "MCU_init" 0 48 1 "FUNCTION"
C L "MCU_init" 0 48 1 "FUNCTION"
C L "MCU_init" 0 48 4 "FUNCTION"
C L "MCU_init" 0 48 1 "FUNCTION"
C L "MCU_init" 0 48 1 "FUNCTION"
C L "MCU_init" 0 48 1 "FUNCTION"
F G "Bpush_delay" 0 183 "void()"
V L "counter" 0 185 "U16"
F G "LCD_print_menu" 0 192 "void()"
F G "LCD_main_menu" 0 203 "void()" "DisableInt();"
C L "LCD_main_menu" 0 48 2 "FUNCTION"
C L "LCD_main_menu" 0 48 1 "FUNCTION"
C L "LCD_main_menu" 0 48 1 "FUNCTION"
C L "LCD_main_menu" 0 48 1 "FUNCTION"
C L "LCD_main_menu" 0 48 1 "FUNCTION"
C L "LCD_main_menu" 0 48 1 "FUNCTION"
C L "LCD_main_menu" 0 48 1 "FUNCTION"
C L "LCD_main_menu" 0 48 1 "FUNCTION"
C L "LCD_main_menu" 0 48 1 "FUNCTION"
F G "Full_dev_reset" 0 240 "void()"
C L "Full_dev_reset" 0 48 3 "FUNCTION"
C L "Full_dev_reset" 0 48 1 "FUNCTION"
C L "Full_dev_reset" 0 48 1 "FUNCTION"
C L "Full_dev_reset" 0 48 1 "FUNCTION"
C L "Full_dev_reset" 0 48 1 "FUNCTION"
C L "Full_dev_reset" 0 48 1 "FUNCTION"
V L "chanel" 0 267 "U8"
F G "ADC_rd_and_print_ch" 0 267 "void(U8 chanel)"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
C L "ADC_rd_and_print_ch" 0 48 1 "FUNCTION"
F G "save_to_flash" 0 364 "void()"
C L "save_to_flash" 0 48 1 "FUNCTION"
F G "cn_irq_handler" 0 374 "void()"
C L "cn_irq_handler" 0 48 1 "FUNCTION"
C L "cn_irq_handler" 0 48 1 "FUNCTION"
C L "cn_irq_handler" 0 48 1 "FUNCTION"
F G "timer1_irq_handler" 0 392 "void()"
C L "timer1_irq_handler" 0 48 1 "FUNCTION"
C L "timer1_irq_handler" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
F G "MAIN" 0 401 "void()"
V L "ch" 0 403 "U8"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 2 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 2 "FUNCTION"
C L "MAIN" 0 48 2 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
C L "MAIN" 0 48 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "bit_first" 2 0
F B "bit_last" 1 2
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_memory" 1 0
F B "write_program_memory" 3 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_f" 1 0
F B "output_g" 1 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_f" 0 0
F B "input_g" 0 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_f" 1 0
F B "set_tris_g" 1 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_f" 0 0
F B "get_tris_g" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_f" 0 0
F B "input_change_g" 0 0
F B "set_open_drain_d" 1 0
F B "set_open_drain_f" 1 0
F B "set_open_drain_g" 1 0
F B "set_pullup" 1 2
F B "setup_wdt" 1 0
F B "restart_cause" 0 1
F B "restart_wdt" 0 0
F B "setup_oscillator" 1 3
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer1" 1 2
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer2" 1 2
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer3" 1 2
F B "get_timer3" 0 0
F B "set_timer3" 1 0
F B "get_timer23" 0 0
F B "set_timer23" 1 0
F B "setup_timer4" 1 2
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_timer5" 1 2
F B "get_timer5" 0 0
F B "set_timer5" 1 0
F B "get_timer45" 0 0
F B "set_timer45" 1 0
F B "setup_timer6" 1 2
F B "get_timer6" 0 0
F B "set_timer6" 1 0
F B "setup_timer7" 1 2
F B "get_timer7" 0 0
F B "set_timer7" 1 0
F B "get_timer67" 0 0
F B "set_timer67" 1 0
F B "setup_capture" 2 0
F B "get_capture" 1 2
F B "setup_compare" 2 0
F B "set_compare_time" 2 3
F B "set_pwm_duty" 2 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "setup_spi3" 1 0
F B "spi_read3" 0 1
F B "spi_write3" 1 0
F B "spi_data_is_in3" 0 0
F B "setup_spi4" 1 0
F B "spi_read4" 0 1
F B "spi_write4" 1 0
F B "spi_data_is_in4" 0 0
F B "setup_dma" 3 0
F B "dma_start" 3 5
F B "dma_status" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "spi_xfer" 0 3
F B "spi_speed" 1 3
F B "spi_init" 1 2
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
